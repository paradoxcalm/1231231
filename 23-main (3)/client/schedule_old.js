// üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
// === schedule.js ===
//
// –§–∞–π–ª, –æ—Ç–≤–µ—á–∞—é—â–∏–π –∑–∞ –ª–æ–≥–∏–∫—É —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è:
// - –≤–∫–ª–∞–¥–∫–∞ "–ë–ª–∏–∂–∞–π—à–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è" –∏ "–ö–∞–ª–µ–Ω–¥–∞—Ä—å"
// - —Å–æ–∑–¥–∞–Ω–∏–µ / —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
// - —Ñ—É–Ω–∫—Ü–∏—è createOrder –Ω–µ —É–≤–æ–¥–∏—Ç –Ω–∞ processing.html, –∞ –ª–∏—à—å –∑–∞–∫—Ä—ã–≤–∞–µ—Ç –æ–∫–Ω–æ
//   –∏ –≤—ã–∑—ã–≤–∞–µ—Ç openRequestFormModal (—Å–º. requestForm.js).
let calendarCurrentDate = new Date();
let canCreate = false; // –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ (admin/manager?)
let canCreateSchedule = false;
let canCreateOrder = false;
    // –∞—Ä—Ö–∏–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å–∫—Ä—ã—Ç
// –î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –æ—Ç–∫—Ä—ã—Ç–æ–≥–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
let currentModal = null;
let activeCityFilter = "";
let activeWarehouseFilter = "";
let activeDestinationWarehouseFilter = "";
let archiveView = false;
let activeMarketplaceFilter = "";



/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞, –º–æ–∂–Ω–æ –ª–∏ –µ—â—ë —Å–æ–∑–¥–∞–≤–∞—Ç—å –∑–∞—è–≤–∫—É (—Å —É—á—ë—Ç–æ–º accept_deadline, –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω–æ).
 */

function loadSchedule() {
    const dynamicContent = document.getElementById("dynamicContent");
    if (!dynamicContent) return;

    canCreateSchedule = (userRole === "admin" || userRole === "manager");
    const isAdminOrManager = (userRole === "admin" || userRole === "manager");

    const html = `
        <div class="schedule-container">
            <h1 class="section-title">–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ</h1>
            <div class="tab-header">
                <button class="tab-button active" id="tab-upcoming" onclick="switchTab('upcoming')">–ë–ª–∏–∂–∞–π—à–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è</button>
                ${
                    isAdminOrManager
                        ? `<button class="tab-button" id="tab-calendar" onclick="switchTab('calendar')">–ö–∞–ª–µ–Ω–¥–∞—Ä—å</button>`
                        : `<button class="tab-button disabled-tab" id="tab-calendar" tabindex="-1" type="button" aria-disabled="true" disabled>–ö–∞–ª–µ–Ω–¥–∞—Ä—å</button>`
                }
            </div>
            <div class="tab-content" id="tabContent-upcoming" style="display: block;">
                <div class="upcoming-shipments">
                    <h3>–ë–ª–∏–∂–∞–π—à–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è</h3>
                    <div id="filterBlock"></div>
                    <div style="margin-top:10px;">
                        <button id="toggleArchiveBtn" class="secondary-button">–ü–æ–∫–∞–∑–∞—Ç—å –∞—Ä—Ö–∏–≤</button>
                    </div>
                    <div id="upcomingList" style="margin-top:10px;"></div>
                </div>
            </div>
            <div class="tab-content" id="tabContent-calendar" style="display: none;">
                <div id="calendarNoAccess" style="display: none; color: #b60000; font-size: 1.16em; margin: 30px 0; text-align: center;">
                    –ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
                </div>
                <div class="schedule-controls" id="calendarControls">
                    <div class="action-buttons">
                        ${ canCreateSchedule ? `
                            <button class="primary-button" onclick="showCreateForm()">
                                <i class="fas fa-plus"></i> –°–æ–∑–¥–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
                            </button>
                            <div class="dropdown-excel">
                              <button class="excel-button" onclick="toggleExcelMenu()">üì§ Excel ‚ñæ</button>
                              <div class="excel-menu" id="excelMenu">
                                  <div onclick="exportSchedule()">üì§ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö</div>
                                  <div onclick="openImportModal()">üì• –ò–º–ø–æ—Ä—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è</div>
                                  <div onclick="window.location.href='export_schedule_template.php'">üìÑ –°–∫–∞—á–∞—Ç—å —à–∞–±–ª–æ–Ω</div>
                              </div>
                            </div>
                            <button class="secondary-button" onclick="openScheduleManagementModal()">‚öôÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ</button>
                            <button class="secondary-button" onclick="showShipmentReport()">üìÑ–°–ø–∏—Å–æ–∫ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–π</button>
                        ` : "" }
                    </div>
                </div>
                <div class="filter-section" id="calendarFilters">
                    <div class="filter-group">
                        <label for="warehouseFilter">–°–∫–ª–∞–¥—ã:</label>
                        <select id="warehouseFilter" onchange="onWarehouseChange(this.value)">
                            <option value="">–í—Å–µ —Å–∫–ª–∞–¥—ã</option>
                        </select>
                    </div>
                    <div class="filter-actions">
                        <button class="apply-button" onclick="applyFilters()">–ü–†–ò–ú–ï–ù–ò–¢–¨</button>
                        <button class="reset-button" onclick="resetFilters()">–°–±—Ä–æ—Å–∏—Ç—å</button>
                    </div>
                </div>
                <div class="calendar-view" id="calendarView">
                    <div class="schedule-nav">
                        <button class="nav-button" onclick="changeMonth(-1)">‚ùÆ</button>
                        <span id="currentMonthYear" style="font-weight:bold;font-size:16px;"></span>
                        <button class="nav-button" onclick="changeMonth(1)">‚ùØ</button>
                    </div>
                    <div class="calendar-header">
                        <div>–ü–Ω</div><div>–í—Ç</div><div>–°—Ä</div><div>–ß—Ç</div><div>–ü—Ç</div><div>–°–±</div><div>–í—Å</div>
                    </div>
                    <div class="calendar-grid" id="calendarGrid"></div>
                </div>
            </div>
        </div>
    `;
    dynamicContent.innerHTML = html;

    // --- –§–∏–ª—å—Ç—Ä—ã ---
    const filterBlock = document.getElementById("filterBlock");
    filterBlock.innerHTML = `
        <div class="filters-row">
            <div class="filter-group">
                <label for="marketplaceFilter"><i class="fas fa-store"></i> –ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å</label>
                <select id="marketplaceFilter" class="styled-filter"></select>
            </div>
            <div class="filter-group">
                <label for="cityDropdown"><i class="fas fa-city"></i> –ì–æ—Ä–æ–¥</label>
                <select id="cityDropdown" class="styled-filter"></select>
            </div>
            <div class="filter-group">
                <label for="destinationWarehouseFilter"><i class="fas fa-warehouse"></i> –°–∫–ª–∞–¥</label>
                <select id="destinationWarehouseFilter" class="styled-filter"></select>
            </div>
        </div>
    `;

    // --- –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤ ---
    function showFilterNotice(msg) {
        let n = document.getElementById('filterNotice');
        if (!n) {
            n = document.createElement('div');
            n.id = 'filterNotice';
            n.style = "color:#b70000;font-size:1em;padding:7px 0 3px 0;";
            filterBlock.appendChild(n);
        }
        n.textContent = msg;
        setTimeout(() => { n.textContent = ""; }, 3000);
    }

    window.activeMarketplaceFilter = "";
    window.activeCityFilter = "";
    window.activeDestinationWarehouseFilter = "";

    const marketplaceSelect = document.getElementById("marketplaceFilter");
    const citySelect = document.getElementById("cityDropdown");
    const warehouseSelect = document.getElementById("destinationWarehouseFilter");

    // –ü–æ–¥–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å—ã
    fetch("filter_options.php?action=marketplaces")
        .then(r => r.json())
        .then(data => {
            if (data.success) {
                marketplaceSelect.innerHTML = `<option value="">–í—Å–µ</option>` +
                    data.marketplaces.map(mp => `<option value="${mp}">${mp}</option>`).join('');
            }
        });

    // –ü–æ–¥–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –≥–æ—Ä–æ–¥–∞ (–ø–æ –≤—Å–µ–º –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞–º)
    function loadAllCities(selectedCity) {
        fetch("filter_options.php?action=all_cities")
            .then(r => r.json())
            .then(data => {
                if (data.success) {
                    citySelect.innerHTML = `<option value="">–í—Å–µ</option>` +
                        data.cities.map(c => `<option value="${c}"${selectedCity===c?' selected':''}>${c}</option>`).join('');
                }
            });
    }

    // –ü–æ–¥–≥—Ä—É–∂–∞–µ–º –≤—Å–µ —Å–∫–ª–∞–¥—ã (–ø–æ –≤—Å–µ–º –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞–º –∏ –≥–æ—Ä–æ–¥–∞–º)
    function loadAllWarehouses(selectedCity, selectedWarehouse) {
        let url = "filter_options.php?action=all_warehouses";
        if (selectedCity) url += "&city=" + encodeURIComponent(selectedCity);
        fetch(url)
            .then(r => r.json())
            .then(data => {
                if (data.success) {
                    warehouseSelect.innerHTML = `<option value="">–í—Å–µ</option>` +
                        data.warehouses.map(w => `<option value="${w}"${selectedWarehouse===w?' selected':''}>${w}</option>`).join('');
                }
            });
    }

    // –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ –ø–æ–¥–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –≥–æ—Ä–æ–¥–∞ –∏ —Å–∫–ª–∞–¥—ã
    loadAllCities();
    loadAllWarehouses();

    // --- –õ–æ–≥–∏–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤ ---
    marketplaceSelect.onchange = function () {
        activeMarketplaceFilter = this.value;
        let prevCity = activeCityFilter;
        let prevWarehouse = activeDestinationWarehouseFilter;

        let cityPromise;
        if (!activeMarketplaceFilter) {
            cityPromise = fetch("filter_options.php?action=all_cities")
                .then(r => r.json())
                .then(data => data.cities || []);
        } else {
            cityPromise = fetch(`filter_options.php?action=cities&marketplace=${encodeURIComponent(activeMarketplaceFilter)}`)
                .then(r => r.json())
                .then(data => data.cities || []);
        }

        cityPromise.then(cities => {
            let cityValid = !prevCity || cities.includes(prevCity);
            if (!cityValid) {
                showFilterNotice("–ù–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–π –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å—É –∏ –≥–æ—Ä–æ–¥—É.");
                activeCityFilter = "";
                activeDestinationWarehouseFilter = "";
            } else {
                activeCityFilter = prevCity;
            }
            citySelect.innerHTML = `<option value="">–í—Å–µ</option>` +
                cities.map(c => `<option value="${c}"${activeCityFilter===c?' selected':''}>${c}</option>`).join('');
            citySelect.disabled = false;

            let whPromise;
            if (!activeMarketplaceFilter && !activeCityFilter) {
                whPromise = fetch("filter_options.php?action=all_warehouses")
                    .then(r => r.json())
                    .then(data => data.warehouses || []);
            } else if (!activeMarketplaceFilter && activeCityFilter) {
                whPromise = fetch(`filter_options.php?action=all_warehouses&city=${encodeURIComponent(activeCityFilter)}`)
                    .then(r => r.json())
                    .then(data => data.warehouses || []);
            } else if (activeMarketplaceFilter && activeCityFilter) {
                whPromise = fetch(`filter_options.php?action=warehouses&marketplace=${encodeURIComponent(activeMarketplaceFilter)}&city=${encodeURIComponent(activeCityFilter)}`)
                    .then(r => r.json())
                    .then(data => data.warehouses || []);
            } else if (activeMarketplaceFilter && !activeCityFilter) {
                whPromise = Promise.resolve([]);
            }

            whPromise.then(warehouses => {
                let whValid = !prevWarehouse || warehouses.includes(prevWarehouse);
                if (!whValid && prevWarehouse) {
                    showFilterNotice("–ù–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–π –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É —Å–∫–ª–∞–¥—É –¥–ª—è —Ç–µ–∫—É—â–∏—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤.");
                    activeDestinationWarehouseFilter = "";
                } else {
                    activeDestinationWarehouseFilter = prevWarehouse;
                }
                warehouseSelect.innerHTML = `<option value="">–í—Å–µ</option>` +
                    warehouses.map(w => `<option value="${w}"${activeDestinationWarehouseFilter===w?' selected':''}>${w}</option>`).join('');
                warehouseSelect.disabled = false;

                fetchAndDisplayUpcoming();
            });
        });
    };

    citySelect.onchange = function () {
        activeCityFilter = this.value;
        let prevWarehouse = activeDestinationWarehouseFilter;

        let whPromise;
        if (!activeMarketplaceFilter && !activeCityFilter) {
            whPromise = fetch("filter_options.php?action=all_warehouses")
                .then(r => r.json())
                .then(data => data.warehouses || []);
        } else if (!activeMarketplaceFilter && activeCityFilter) {
            whPromise = fetch(`filter_options.php?action=all_warehouses&city=${encodeURIComponent(activeCityFilter)}`)
                .then(r => r.json())
                .then(data => data.warehouses || []);
        } else if (activeMarketplaceFilter && activeCityFilter) {
            whPromise = fetch(`filter_options.php?action=warehouses&marketplace=${encodeURIComponent(activeMarketplaceFilter)}&city=${encodeURIComponent(activeCityFilter)}`)
                .then(r => r.json())
                .then(data => data.warehouses || []);
        } else if (activeMarketplaceFilter && !activeCityFilter) {
            whPromise = Promise.resolve([]);
        }

        whPromise.then(warehouses => {
            let whValid = !prevWarehouse || warehouses.includes(prevWarehouse);
            if (!whValid && prevWarehouse) {
                showFilterNotice("–ù–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–π –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É —Å–∫–ª–∞–¥—É –¥–ª—è —Ç–µ–∫—É—â–∏—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤.");
                activeDestinationWarehouseFilter = "";
            } else {
                activeDestinationWarehouseFilter = prevWarehouse;
            }
            warehouseSelect.innerHTML = `<option value="">–í—Å–µ</option>` +
                warehouses.map(w => `<option value="${w}"${activeDestinationWarehouseFilter===w?' selected':''}>${w}</option>`).join('');
            warehouseSelect.disabled = false;

            fetchAndDisplayUpcoming();
        });
    };

    warehouseSelect.onchange = function () {
        activeDestinationWarehouseFilter = this.value;
        fetchAndDisplayUpcoming();
    };

    document.getElementById("toggleArchiveBtn").addEventListener("click", () => {
        archiveView = !archiveView;
        document.getElementById("toggleArchiveBtn").textContent = archiveView ? "–ü–æ–∫–∞–∑–∞—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ" : "–ü–æ–∫–∞–∑–∞—Ç—å –∞—Ä—Ö–∏–≤";
        fetchAndDisplayUpcoming();
    });

    window.switchTab = function(tab) {
        document.getElementById('tab-upcoming').classList.remove('active');
        document.getElementById('tab-calendar').classList.remove('active');
        document.getElementById('tabContent-upcoming').style.display = 'none';
        document.getElementById('tabContent-calendar').style.display = 'none';

        if (tab === 'upcoming') {
            document.getElementById('tab-upcoming').classList.add('active');
            document.getElementById('tabContent-upcoming').style.display = 'block';
        } else if (tab === 'calendar') {
            document.getElementById('tab-calendar').classList.add('active');
            document.getElementById('tabContent-calendar').style.display = 'block';
            if (!isAdminOrManager) {
                // –ó–∞—â–∏—Ç–∞: –µ—Å–ª–∏ –≤—Å—ë –∂–µ –∫–∞–∫-—Ç–æ –≤—ã–∑–≤–∞–ª –≤—Ä—É—á–Ω—É—é
                document.getElementById("calendarNoAccess").style.display = "block";
                document.getElementById("calendarControls").style.display = "none";
                document.getElementById("calendarFilters").style.display = "none";
                document.getElementById("calendarView").style.display = "none";
            } else {
                document.getElementById("calendarNoAccess").style.display = "none";
                document.getElementById("calendarControls").style.display = "";
                document.getElementById("calendarFilters").style.display = "";
                document.getElementById("calendarView").style.display = "";
            }
        }
    };

    if (typeof renderStaticCalendar === 'function') renderStaticCalendar();
    if (typeof fetchDataAndUpdateCalendar === 'function') fetchDataAndUpdateCalendar();

    fetchAndDisplayUpcoming();
}









// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–∫–ª–∞–¥–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –≥–æ—Ä–æ–¥—É
async function updateDestinationWarehouses() {
    const warehouseSelect = document.getElementById("destinationWarehouseFilter");
    if (!activeCityFilter) {
        warehouseSelect.innerHTML = "";
        warehouseSelect.style.display = "none";
        activeDestinationWarehouseFilter = "";
        return;
    }
    try {
        const res = await fetch(`schedule.php?archived=0&city=${encodeURIComponent(activeCityFilter)}`);
        const data = await res.json();
        const list = data.schedules || data;
        const set = new Set();
        list.forEach(s => {
            if (s.warehouses && typeof s.warehouses === 'string') {
                set.add(s.warehouses.trim());
            }
        });
        const options = Array.from(set);
        if (options.length === 0) {
            warehouseSelect.innerHTML = "";
            warehouseSelect.style.display = "none";
            activeDestinationWarehouseFilter = "";
            return;
        }
        warehouseSelect.innerHTML = `<option value="">–í—Å–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è</option>` +
            options.map(w => `<option value="${w}">${w}</option>`).join('');
        warehouseSelect.style.display = "";
        warehouseSelect.value = "";
        activeDestinationWarehouseFilter = "";
    } catch (err) {
        warehouseSelect.innerHTML = "";
        warehouseSelect.style.display = "none";
        activeDestinationWarehouseFilter = "";
        console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π:", err);
    }
}





// –û—Ç–∫—Ä—ã—Ç–∏–µ/–∑–∞–∫—Ä—ã—Ç–∏–µ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ –º–µ–Ω—é Excel
function toggleExcelMenu() {
    const menu = document.getElementById("excelMenu");
    const arrow = document.getElementById("excelArrow");
    const btn = document.getElementById("excelDropdownBtn");

    const opened = menu.classList.toggle("show");
    arrow.innerHTML = opened ? "‚ñ≤" : "‚ñº";
    btn.classList.toggle("open", opened);
}

function openImportModal() {
    const modal = document.getElementById("importScheduleModal");
    if (modal) {
        modal.style.display = "block";
    } else {
        alert("‚ùå –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∏–º–ø–æ—Ä—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.");
    }
}

function showImportResultModal(inserted, errors) {
    let html = `<p>‚úÖ –£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ: <strong>${inserted}</strong></p>`;
    if (errors.length > 0) {
        html += `<p>‚ùå –û—à–∏–±–∫–∏:</p><ul style="padding-left:16px;">`;
        for (const e of errors) {
            html += `<li>–°—Ç—Ä–æ–∫–∞ ${e.row}: ${e.error}</li>`;
        }
        html += `</ul>`;
    }
    document.getElementById("importResultModalContent").innerHTML = html;
    document.getElementById("importResultModal").style.display = "block";
}


// –ó–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –º–µ–Ω—é
document.addEventListener("mousedown", function(e) {
    const menu = document.getElementById("excelMenu");
    const btn = document.getElementById("excelDropdownBtn");

    if (!menu || !btn) return;

    if (!menu.contains(e.target) && !btn.contains(e.target)) {
        menu.classList.remove("show");
        btn.classList.remove("open");
        document.getElementById("excelArrow").innerHTML = "‚ñº";
    }
});







function showShipmentReport() {
    fetch("get_schedules.php")
        .then(r => r.json())
        .then(data => {
            if (!Array.isArray(data)) return alert("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö");

            const today = new Date().toISOString().slice(0, 10);

            let html = `
                <style>
                    .shipment-table {
                        width: 100%;
                        border-collapse: collapse;
                        font-family: 'Segoe UI', 'Roboto', 'Arial', sans-serif;
                        font-size: 14px;
                        background: #fcfcfd;
                    }
                    .shipment-table th, .shipment-table td {
                        padding: 7px 10px;
                        border-bottom: 1px solid #e7eaf3;
                        text-align: left;
                        vertical-align: middle;
                    }
                    .shipment-table th {
                        background: #f5f7fa;
                        font-weight: 600;
                        color: #36435c;
                        letter-spacing: 0.03em;
                    }
                    .shipment-table tr:nth-child(even) {
                        background: #f8fafc;
                    }
                    .shipment-table tr:hover {
                        background: #eef3fa;
                        transition: background 0.2s;
                    }
                    .shipment-table td.route {
                        font-weight: 500;
                        color: #3b82f6;
                    }
                    .shipment-table td.driver {
                        color: #36435c;
                        font-weight: 500;
                    }
                    .shipment-table td.phone {
                        font-family: 'Menlo', 'Consolas', monospace;
                        font-size: 13px;
                        color: #2563eb;
                    }
                    .shipment-table td.auto {
                        color: #374151;
                        font-size: 13px;
                    }
                    .shipment-table td.status {
                        font-weight: bold;
                        color: #059669;
                    }
                    .shipment-table td.reception {
                        font-style: italic;
                        color: #6b7280;
                    }
                    @media print {
                        .shipment-table th, .shipment-table td {
                            padding: 4px 6px;
                            font-size: 12px;
                        }
                        body {
                            background: #fff !important;
                        }
                    }
                </style>
                <table class="shipment-table">
                    <thead>
                        <tr>
                            <th>–°—Ç–∞—Ç—É—Å</th>
                            <th>–î–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è</th>
                            <th>–ú–∞—Ä—à—Ä—É—Ç</th>
                            <th>–î–∞—Ç–∞ —Å–¥–∞—á–∏</th>
                            <th>–í–æ–¥–∏—Ç–µ–ª—å</th>
                            <th>–¢–µ–ª–µ—Ñ–æ–Ω</th>
                            <th>–ê–≤—Ç–æ</th>
                            <th>–ü—Ä–∏—ë–º–∫–∞</th>
                        </tr>
                    </thead>
                    <tbody>
                        ${data.map(s => {
                            const isToday = s.accept_date === today;
                            const isPast = s.accept_date < today;
                            let reception = "‚Äî";
                            if (s.status === "–í –ø—É—Ç–∏") {
                                reception = isToday ? "–ò–¥—ë—Ç" : isPast ? "–ó–∞–≤–µ—Ä—à–µ–Ω–∞" : "–û–∂–∏–¥–∞–µ—Ç—Å—è";
                            }
                            return `
                                <tr>
                                    <td class="status">${s.status || "‚Äî"}</td>
                                    <td>${s.accept_date || "‚Äî"}</td>
                                    <td class="route">${s.city || "‚Äî"} <span style="color:#889;">‚Üí</span> ${s.warehouses || "‚Äî"}</td>
                                    <td>${s.delivery_date || "‚Äî"}</td>
                                    <td class="driver">${s.driver_name || "‚Äî"}</td>
                                    <td class="phone">${s.driver_phone || "‚Äî"}</td>
                                    <td class="auto">${s.car_brand || "‚Äî"}<br><span style="color:#bbb;">${s.car_number || "‚Äî"}</span></td>
                                    <td class="reception">${reception}</td>
                                </tr>
                            `;
                        }).join('')}
                    </tbody>
                </table>
            `;

            document.getElementById("shipmentReportText").innerHTML = html;
            document.getElementById("shipmentReportModal").style.display = "block";
        })
        .catch(err => {
            alert("–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: " + err.message);
        });
}






function switchTab(tabName) {
    const tabs = ["upcoming", "calendar"];
    tabs.forEach(tab => {
        const el = document.getElementById(`tabContent-${tab}`);
        const btn = document.getElementById(`tab-${tab}`);
        if (el) el.style.display = (tab === tabName) ? "block" : "none";
        if (btn) btn.classList.toggle("active", tab === tabName);
    });

    // ‚¨áÔ∏è –í–ê–ñ–ù–û: –æ—Ç—Ä–∏—Å–æ–≤–∞—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä—å –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ
    if (tabName === "calendar") {
        renderStaticCalendar();
        fetchDataAndUpdateCalendar();
    }
}



// –†–µ–Ω–¥–µ—Ä–∏–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å (—è—á–µ–π–∫–∏)
function renderStaticCalendar() {
    const monthNames = [
        "–Ø–Ω–≤–∞—Ä—å", "–§–µ–≤—Ä–∞–ª—å", "–ú–∞—Ä—Ç", "–ê–ø—Ä–µ–ª—å", "–ú–∞–π", "–ò—é–Ω—å",
        "–ò—é–ª—å", "–ê–≤–≥—É—Å—Ç", "–°–µ–Ω—Ç—è–±—Ä—å", "–û–∫—Ç—è–±—Ä—å", "–ù–æ—è–±—Ä—å", "–î–µ–∫–∞–±—Ä—å"
    ];
    const currentMonthYearElem = document.getElementById("currentMonthYear");
    if (currentMonthYearElem) {
        currentMonthYearElem.textContent =
            `${monthNames[calendarCurrentDate.getMonth()]} ${calendarCurrentDate.getFullYear()}`;
    }
    const calendarGrid = document.getElementById("calendarGrid");
    if (!calendarGrid) return;
    calendarGrid.innerHTML = "";
    const firstDay = new Date(calendarCurrentDate.getFullYear(), calendarCurrentDate.getMonth(), 1);
    const lastDay = new Date(calendarCurrentDate.getFullYear(), calendarCurrentDate.getMonth() + 1, 0);
    // –î–µ–Ω—å –Ω–µ–¥–µ–ª–∏ –ø–µ—Ä–≤–æ–≥–æ –¥–Ω—è
    const startDay = firstDay.getDay() === 0 ? 7 : firstDay.getDay();
    // –î–Ω–∏ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –º–µ—Å—è—Ü–∞
    const prevMonthLast = new Date(calendarCurrentDate.getFullYear(), calendarCurrentDate.getMonth(), 0).getDate();
    for (let i = 1; i < startDay; i++) {
        const dayNum = prevMonthLast - (startDay - i) + 1;
        calendarGrid.innerHTML += `
            <div class="calendar-cell" data-date="${getFullDate(calendarCurrentDate.getFullYear(), calendarCurrentDate.getMonth() - 1, dayNum)}">
                <div class="cell-date">${dayNum}</div>
            </div>
        `;
    }
    // –î–Ω–∏ —Ç–µ–∫—É—â–µ–≥–æ –º–µ—Å—è—Ü–∞
    for (let day = 1; day <= lastDay.getDate(); day++) {
        const fullDate = `${calendarCurrentDate.getFullYear()}-${String(calendarCurrentDate.getMonth() + 1).padStart(2, "0")}-${String(day).padStart(2, "0")}`;
        const isToday = isDateToday(fullDate);
        const cellClass = isToday ? "calendar-cell today" : "calendar-cell";
        calendarGrid.innerHTML += `
            <div class="${cellClass}" data-date="${fullDate}" onclick="openShipmentsForDate('${fullDate}')">
                <div class="cell-date">${day}</div>
            </div>
        `;
    }
    // –î–Ω–∏ —Å–ª–µ–¥—É—é—â–µ–≥–æ –º–µ—Å—è—Ü–∞ (–¥–æ 42 —è—á–µ–µ–∫)
    while (calendarGrid.children.length < 42) {
        const nextMonth = new Date(calendarCurrentDate.getFullYear(), calendarCurrentDate.getMonth() + 1, 1);
        const nextDay = calendarGrid.children.length - (42 - 1 - lastDay.getDate()) + 1;
        const fullNextDate = getFullDate(nextMonth.getFullYear(), nextMonth.getMonth(), nextDay);
        calendarGrid.innerHTML += `
            <div class="calendar-cell" data-date="${fullNextDate}" onclick="openScheduleModal('${fullNextDate}')">
                <div class="cell-date">${nextDay}</div>
            </div>
        `;
    }
}
// –ü–æ–º–æ—â–Ω–∏–∫–∏
function getFullDate(year, month, day) {
    if (month < 0) {
        year--;
        month = 11;
    } else if (month > 11) {
        year++;
        month = 0;
    }
    return `${year}-${String(month + 1).padStart(2, "0")}-${String(day).padStart(2, "0")}`;
}
function isDateToday(dateStr) {
    const today = new Date();
    const todayStr = `${today.getFullYear()}-${String(today.getMonth() + 1).padStart(2, "0")}-${String(today.getDate()).padStart(2, "0")}`;
    return dateStr === todayStr;
}
// –ü–æ–¥–≥—Ä—É–∂–∞–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ, –∑–∞–ø–æ–ª–Ω—è–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å
function fetchDataAndUpdateCalendar() {
    const url = `schedule.php${activeWarehouseFilter ? `?warehouse=${encodeURIComponent(activeWarehouseFilter)}` : ""}`;
    fetch(url)
        .then(r => {
            if (!r.ok) throw new Error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è: " + r.status);
            return r.json();
        })
        .then(data => {
            let shipmentsByDate = {};
            data.forEach(item => {
                let d = item.accept_date;
                if (!shipmentsByDate[d]) shipmentsByDate[d] = [];
                shipmentsByDate[d].push(item);
            });
            updateCalendarWithData(shipmentsByDate);
        })
        .catch(err => console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ fetchDataAndUpdateCalendar:", err));
}
function updateCalendarWithData(shipmentsByDate) {
    const cells = document.querySelectorAll(".calendar-cell");
    cells.forEach(cell => {
        const date = cell.getAttribute("data-date");
        const shipments = shipmentsByDate[date] || [];

        // –û—á–∏—â–∞–µ–º –∏ —Ä–µ–Ω–¥–µ—Ä–∏–º –¥–∞—Ç—É
        cell.innerHTML = "";
        const dateDiv = document.createElement("div");
        dateDiv.className = "cell-date";
        dateDiv.textContent = date.split("-")[2];
        cell.appendChild(dateDiv);

        // –ï—Å–ª–∏ –µ—Å—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è ‚Äî —Ä–∏—Å—É–µ–º —Ç–æ—á–∫—É –∏ –ø–æ–¥–ø–∏—Å—å
        if (shipments.length > 0) {
            const firstWh = shipments[0].warehouses || "‚Äî";
            const labelText = shipments.length === 1
                ? firstWh
                : firstWh + ` +${shipments.length - 1}`;
            const dotColor = getStatusDotColor(shipments[0].status || "");

            const dot = document.createElement("div");
            dot.className = "shipment-dot";
            dot.style.backgroundColor = dotColor;
            const labelDiv = document.createElement("div");
            labelDiv.className = "shipment-label";
            labelDiv.textContent = labelText;

            cell.appendChild(dot);
            cell.appendChild(labelDiv);
        }

        // üß© –ó–∞–º–µ–Ω–∏–ª–∏ alert –Ω–∞ –Ω–æ—Ä–º–∞–ª—å–Ω—ã–π –≤—ã–∑–æ–≤ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ
        const newCell = cell.cloneNode(true);
        newCell.addEventListener("click", () => {
            openShipmentsForDate(date); // ‚úÖ –≤—ã–≤–µ–¥–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        });
        cell.replaceWith(newCell);
    });
}


function getStatusDotColor(status) {
    const s = status.toLowerCase();
    if (s.includes("–ø—É—Ç–∏")) return "yellow";
    if (s.includes("–æ–∂–∏–¥–∞–Ω")) return "green";
    if (s.includes("–≤–æ–∑–≤—Ä–∞—Ç")) return "red";
    return "gray";
}
function changeMonth(offset) {
    calendarCurrentDate.setMonth(calendarCurrentDate.getMonth() + offset);
    renderStaticCalendar();
    fetchDataAndUpdateCalendar();
}
function onWarehouseChange(value) {
    activeWarehouseFilter = value;
    fetchDataAndUpdateCalendar();
    fetchScheduleData();
}
function switchShipmentTab(index, total) {
    for (let i = 0; i < total; i++) {
        const btn = document.getElementById(`shipmentBtn-${i}`);
        const tab = document.getElementById(`shipmentTab-${i}`);
        if (!btn || !tab) continue;
        if (i === index) {
            btn.classList.add("active");
            tab.style.display = "block";
        } else {
            btn.classList.remove("active");
            tab.style.display = "none";
        }
    }
}
function closeScheduleModal() {
    const modal = document.getElementById("modalContainer");
    if (modal) {
        modal.style.display = "none";
        modal.innerHTML = "";
    }
    currentModal = null;
}

function openSingleShipmentModal(sh) {
    const modalContainer = document.getElementById("modalContainer");
    if (!modalContainer) return;

    modalContainer.innerHTML = "";
    modalContainer.style.display = "block";

    const modalContent = document.createElement("div");
    modalContent.className = "modal-content";

    const role = window.userRole || 'client';

    modalContent.innerHTML = `
        <span class="modal-close" onclick="closeScheduleModal()"><i class="fas fa-times"></i></span>
        <div class="modal-header">
            <h2>–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ ‚Ññ${sh.id || '‚Äî'}</h2>
        </div>

        <div class="modal-section">
            <div class="modal-section-title">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–∏</div>
            <div class="modal-row"><div class="modal-label">–ì–æ—Ä–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è:</div><div class="modal-value">${sh.city || "‚Äî"}</div></div>
            <div class="modal-row"><div class="modal-label">–°–∫–ª–∞–¥ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è:</div><div class="modal-value">${sh.warehouses || "‚Äî"}</div></div>
            <div class="modal-row"><div class="modal-label">–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:</div><div class="modal-value">${sh.accept_date || "‚Äî"}</div></div>
            <div class="modal-row"><div class="modal-label">–í—Ä–µ–º—è –ø—Ä–∏—ë–º–∫–∏:</div><div class="modal-value">${sh.accept_time || "‚Äî"}</div></div>
            <div class="modal-row"><div class="modal-label">–°–¥–∞—á–∞ (–¥–∞—Ç–∞):</div><div class="modal-value">${sh.delivery_date || "‚Äî"}</div></div>
            <div class="modal-row"><div class="modal-label">–ü—Ä–∏—ë–º–∫–∞ –¥–æ:</div><div class="modal-value">${sh.accept_deadline || "‚Äî"}</div></div>
            <div class="modal-row"><div class="modal-label">–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å:</div><div class="modal-value">${sh.marketplace || "‚Äî"}</div></div>
        </div>

        <div class="modal-section">
            <div class="modal-section-title">–ê–≤—Ç–æ –∏ –≤–æ–¥–∏—Ç–µ–ª—å</div>
            <div class="modal-row"><div class="modal-label">–ê–≤—Ç–æ:</div><div class="modal-value">${sh.car_number || "‚Äî"} (${sh.car_brand || "‚Äî"})</div></div>
            <div class="modal-row"><div class="modal-label">–í–æ–¥–∏—Ç–µ–ª—å:</div><div class="modal-value">${sh.driver_name || "‚Äî"}</div></div>
            <div class="modal-row"><div class="modal-label">–¢–µ–ª–µ—Ñ–æ–Ω:</div><div class="modal-value">${sh.driver_phone || "‚Äî"}</div></div>
        </div>

        <div class="modal-actions">
            ${canCreateOrderForSchedule(sh) ? `
                <button class="create-order-btn big-action" onclick="createOrder(${sh.id}, '${sh.city}', '${sh.warehouses}')">
                    <i class="fas fa-plus-circle"></i> –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É
                </button>
            ` : `<span class="closed-message">–ü—Ä–∏—ë–º –∑–∞—è–≤–æ–∫ –∑–∞–∫—Ä—ã—Ç</span>`}

            ${role === 'admin' || role === 'manager' ? `
                <div class="status-control" style="margin-top:10px;margin-bottom:10px;">
                    <label for="statusSelect_${sh.id}">–ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å:</label>
                    <select id="statusSelect_${sh.id}" onchange="updateStatus(${sh.id}, this.value)">
                        <option value="–û–∂–∏–¥–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏" ${sh.status === "–û–∂–∏–¥–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏" ? "selected" : ""}>–û–∂–∏–¥–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏</option>
                        <option value="–ì–æ—Ç–æ–≤ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ" ${sh.status === "–ì–æ—Ç–æ–≤ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ" ? "selected" : ""}>–ì–æ—Ç–æ–≤ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ</option>
                        <option value="–í –ø—É—Ç–∏" ${sh.status === "–í –ø—É—Ç–∏" ? "selected" : ""}>–í –ø—É—Ç–∏</option>
                        <option value="–ó–∞–≤–µ—Ä—à–µ–Ω–æ" ${sh.status === "–ó–∞–≤–µ—Ä—à–µ–Ω–æ" ? "selected" : ""}>–ó–∞–≤–µ—Ä—à–µ–Ω–æ</option>
                    </select>
                </div>

                <button class="action-button" onclick="editSchedule(${sh.id})">
                    <i class="fas fa-edit"></i> –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                </button>
                <button class="action-button" onclick="deleteSchedule(${sh.id})">
                    <i class="fas fa-trash"></i> –£–¥–∞–ª–∏—Ç—å
                </button>
            ` : ''}
        </div>
    `;

    modalContainer.appendChild(modalContent);
    currentModal = modalContainer;
}


function canCreateOrderForSchedule(schedule) {
    if (!schedule) return false;
    if (schedule.status === '–ó–∞–≤–µ—Ä—à–µ–Ω–æ' || schedule.status === '–¢–æ–≤–∞—Ä –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω') return false;

    const deadline = schedule.accept_deadline;
    if (!deadline) return true;

    const now = new Date();
    const deadlineDate = new Date(deadline);
    return now <= deadlineDate;
}








// –§–∏–ª—å—Ç—Ä –ø–æ –≥–æ—Ä–æ–¥—É, —Å–∫–ª–∞–¥—É –∏ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å—É (–¥–ª—è "–ë–ª–∏–∂–∞–π—à–∏—Ö –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–π")
function fetchAndDisplayUpcoming(showArchived = false) {
    const container = document.getElementById("upcomingList");
    if (!container) return;
    container.innerHTML = "–ó–∞–≥—Ä—É–∑–∫–∞‚Ä¶";

    // –§–æ—Ä–º–∏—Ä—É–µ–º URL —Å –∫–∞—Å–∫–∞–¥–Ω—ã–º–∏ —Ñ–∏–ª—å—Ç—Ä–∞–º–∏
    let url = `schedule.php?archived=${showArchived ? 1 : 0}`;
    if (typeof activeMarketplaceFilter !== 'undefined' && activeMarketplaceFilter) {
        url += `&marketplace=${encodeURIComponent(activeMarketplaceFilter)}`;
    }
    if (typeof activeCityFilter !== 'undefined' && activeCityFilter) {
        url += `&city=${encodeURIComponent(activeCityFilter)}`;
    }
    if (typeof activeDestinationWarehouseFilter !== 'undefined' && activeDestinationWarehouseFilter) {
        url += `&warehouse=${encodeURIComponent(activeDestinationWarehouseFilter)}`;
    }

    fetch(url)
        .then(r => {
            if (!r.ok) throw new Error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: " + r.status);
            return r.json();
        })
        .then(data => {
            const list = data.schedules || data;
            if (!Array.isArray(list)) {
                container.innerHTML = "<p>–ù–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–π.</p>";
                return;
            }

            let grouped = {};
            list.forEach(item => {
                let d = item.accept_date;
                if (!grouped[d]) grouped[d] = [];
                grouped[d].push(item);
            });

            const sortedDates = Object.keys(grouped).sort((a, b) => new Date(a) - new Date(b));
            container.innerHTML = "";
            let count = 0;

            for (let d of sortedDates) {
                if (count >= 5) break;
                grouped[d].forEach(sh => {
                    const w = sh.warehouses || "‚Äî";
                    const deliveryDate = sh.delivery_date || "";
                    const formattedDelivery = typeof formatDeliveryDate === 'function'
                        ? formatDeliveryDate(deliveryDate)
                        : deliveryDate;

                    const div = document.createElement("div");
                    div.className = "upcoming-item styled-upcoming-item";
                    div.innerHTML = `
                        <div class="shipment-info">
                            <div class="shipment-header">
                                <span class="shipment-warehouse">${w}</span>
                            </div>
                            <div class="shipment-sub"><strong>${formattedDelivery}</strong></div>
                        </div>
                    `;
                    div.addEventListener("click", () => openSingleShipmentModal(sh));
                    container.appendChild(div);
                });
                count++;
            }

            if (container.innerHTML.trim() === "") {
                container.innerHTML = "<p>–ù–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–π –ø–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–º —É—Å–ª–æ–≤–∏—è–º.</p>";
            }
        })
        .catch(err => {
            console.error("–û—à–∏–±–∫–∞ fetchAndDisplayUpcoming:", err);
            container.innerHTML = "<p>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏.</p>";
        });
}






function formatDeliveryDate(dateStr) {
    if (!dateStr) return "";
    let d = new Date(dateStr);
    if (isNaN(d.getTime())) return dateStr;
    const days = ["–í—Å", "–ü–Ω", "–í—Ç", "–°—Ä", "–ß—Ç", "–ü—Ç", "–°–±"];
    const dayName = days[d.getDay()];
    const dd = String(d.getDate()).padStart(2, "0");
    const mm = String(d.getMonth() + 1).padStart(2, "0");
    const yyyy = d.getFullYear();
    return `${dd}.${mm}.${yyyy} ${dayName}`;
}
function filterByCity(cityName) {
    activeCityFilter = cityName;
    document.querySelectorAll(".city-tab-header .tab-button").forEach(btn => {
        btn.classList.toggle("active", btn.textContent === cityName || (cityName === "" && btn.textContent === "–í—Å–µ"));
    });
    fetchAndDisplayUpcoming(archiveView);
}
// –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–æ—Ä–º—ã —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
function showCreateForm() {
    if (!canCreateSchedule) {
        alert("–ù–µ—Ç –ø—Ä–∞–≤!");
        return;
    }

    const modalContainer = document.getElementById("modalContainer");
    if (!modalContainer) return;

    const timeSlots = Array.from({ length: 24 }, (_, i) =>
        `${String(i).padStart(2, "0")}:00-${String((i + 1) % 24).padStart(2, "0")}:00`
    );

    Promise.all([
        fetch("warehouses.php").then(r => r.json()),
        fetch("cities.php", { cache: "no-store" }).then(r => r.json())
    ])
    .then(([warehouses, cities]) => {
        renderCreateForm(modalContainer, warehouses, cities, timeSlots);
    })
    .catch(err => {
        console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:", err);
    });

    function renderCreateForm(container, warehouses, cities, timeSlots) {
        const modalContent = document.createElement("div");
        modalContent.className = "modal-content";
        modalContent.innerHTML = `
            <i class="fas fa-times modal-close" onclick="closeScheduleModal()"></i>
            <div class="modal-header"><h2>–°–æ–∑–¥–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ</h2></div>
            <div class="modal-body">
                <form id="createScheduleForm">
                    <div class="form-group">
                        <label>–ì–æ—Ä–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è:</label>
                        <div style="display:flex; gap:10px;">
                            <select name="city" id="citySelect" required>
                                ${cities.map(c => `<option value="${c.id}">${c.name}</option>`).join("")}
                            </select>
                            <button type="button" onclick="addNewCity()">‚ûï</button>
                            <button type="button" onclick="deleteSelectedCity()">üóë</button>
                        </div>
                    </div>
                    <div class="form-group">
                        <label>–î–∞—Ç–∞ –≤—ã–µ–∑–¥–∞:</label>
                        <input type="date" name="accept_date" required>
                    </div>
                    <div class="form-group">
                        <label>–í—Ä–µ–º—è –ø—Ä–∏—ë–º–∞:</label>
                        <select name="accept_time" required>
                            <option value="08:00-17:00">08:00-17:00</option>
                            <option value="09:00-18:00">09:00-18:00</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label>–î–∞—Ç–∞ —Å–¥–∞—á–∏:</label>
                        <input type="date" name="delivery_date" required>
                    </div>
                    <div class="form-group">
                        <label>–°–∫–ª–∞–¥—ã:</label>
                        <div class="warehouse-checkboxes" id="warehouseCheckboxes">
                            ${
                              warehouses.map(wh => `
                                <div class="warehouse-checkbox-item">
                                    <input type="checkbox" name="warehouses[]" value="${wh.name}" id="warehouse-${wh.name}">
                                    <label for="warehouse-${wh.name}" class="warehouse-label">${wh.name}</label>
                                </div>
                              `).join("")
                            }
                        </div>
                        <div style="display: flex; gap: 10px; margin-top: 8px;">
                            <button type="button" onclick="addNewWarehouseAndRefresh()">‚ûï –î–æ–±–∞–≤–∏—Ç—å</button>
                            <button type="button" onclick="enterWarehouseEditMode()">‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
                            <button type="button" onclick="confirmWarehouseDelete()">üóëÔ∏è –£–¥–∞–ª–∏—Ç—å</button>
                        </div>
                        <div id="warehouseEditControls" style="margin-top:10px; display:none;">
                            <button type="button" onclick="saveWarehouseEdits()">üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è</button>
                            <button type="button" onclick="cancelWarehouseEdits()">‚úñÔ∏è –û—Ç–º–µ–Ω–∞</button>
                        </div>
                    </div>
                    <div class="form-group">
                        <label>–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å:</label>
                        <select name="marketplace" id="marketplaceSelect" required>
                            <option value="Wildberries">Wildberries</option>
                            <option value="Ozon">Ozon</option>
                            <option value="None">–ë–µ–∑ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞</option>
                        </select>
                    </div>
                    <div class="form-group" id="timeslotField">
                        <label>–¢–∞–π–º-—Å–ª–æ—Ç (–¥–ª—è Ozon):</label>
                        <select name="timeslot">
                            ${timeSlots.map(slot => `<option value="${slot}">${slot}</option>`).join("")}
                        </select>
                    </div>
                    <div class="form-group">
                        <label>–ù–æ–º–µ—Ä –∞–≤—Ç–æ–º–æ–±–∏–ª—è:</label>
                        <input type="text" name="car_number" required>
                    </div>
                    <div class="form-group">
                        <label>–§–ò–û –≤–æ–¥–∏—Ç–µ–ª—è:</label>
                        <input type="text" name="driver_name" required>
                    </div>
                    <div class="form-group">
                        <label>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤–æ–¥–∏—Ç–µ–ª—è:</label>
                        <input type="text" name="driver_phone" required>
                    </div>
                    <div class="form-group">
                        <label>–ú–∞—Ä–∫–∞ –º–∞—à–∏–Ω—ã:</label>
                        <input type="text" name="car_brand" required>
                    </div>
                    <div class="form-group">
                        <label>–û–∫–æ–Ω—á–∞–Ω–∏–µ –ø—Ä–∏—ë–º–∫–∏ (accept_deadline):</label>
                        <input type="datetime-local" name="accept_deadline" required>
                    </div>
                    <div class="modal-actions">
                        <button type="submit" class="action-button save-btn">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
                    </div>
                    <div class="error-message" id="createError" style="display:none;color:red;"></div>
                </form>
            </div>
        `;
        container.innerHTML = "";
        container.appendChild(modalContent);
        container.style.display = "block";
        currentModal = container;

        const form = document.getElementById("createScheduleForm");
        const mpSelect = document.getElementById("marketplaceSelect");
        const tsField = document.getElementById("timeslotField");

        if (mpSelect && tsField) {
            mpSelect.addEventListener("change", () => {
                tsField.style.display = mpSelect.value === "Ozon" ? "block" : "none";
            });
        }

        form.addEventListener("submit", e => {
            e.preventDefault();
            const formData = new FormData(form);
            const selectedWh = Array.from(form.querySelectorAll('input[name="warehouses[]"]:checked')).map(cb => cb.value);
            if (selectedWh.length === 0) {
                document.getElementById("createError").textContent = "–í—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Å–∫–ª–∞–¥.";
                document.getElementById("createError").style.display = "block";
                return;
            }
            selectedWh.forEach((w, idx) => {
                formData.append(`warehouses[${idx}]`, w);
            });
            formData.append("action", "create");
            fetch("schedule.php", { method: "POST", body: formData })
                .then(r => r.json())
                .then(d => {
                    if (d.status === "success") {
                        fetchScheduleData();
                        fetchDataAndUpdateCalendar();
                        closeScheduleModal();
                    } else {
                        document.getElementById("createError").textContent = d.message || "–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è.";
                        document.getElementById("createError").style.display = "block";
                    }
                })
                .catch(err => {
                    console.error("–û—à–∏–±–∫–∞ createScheduleForm:", err);
                    document.getElementById("createError").textContent = "–û—à–∏–±–∫–∞ —Å–≤—è–∑–∏ —Å —Å–µ—Ä–≤–µ—Ä–æ–º.";
                    document.getElementById("createError").style.display = "block";
                });
        });

        window.addNewCity = function () {
            const name = prompt("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞:");
            if (!name || !name.trim()) return;
            fetch("cities.php", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ action: "add", name: name.trim() })
            })
            .then(r => r.json())
            .then(data => {
                if (data.status === "success") {
                    showCreateForm(); // –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
                } else {
                    alert("–û—à–∏–±–∫–∞: " + data.message);
                }
            });
        };

        window.deleteSelectedCity = function () {
            const select = document.getElementById("citySelect");
            const id = parseInt(select.value);
            if (!id || isNaN(id)) {
                alert("–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.");
                return;
            }
            if (!confirm("–£–¥–∞–ª–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–π –≥–æ—Ä–æ–¥?")) return;

            fetch("cities.php", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ action: "delete", id })
            })
            .then(r => r.json())
            .then(data => {
                if (data.status === "success") {
                    showCreateForm(); // –æ–±–Ω–æ–≤–∏–º
                } else {
                    alert("–û—à–∏–±–∫–∞: " + data.message);
                }
            });
        };

        window.addNewWarehouseAndRefresh = function () {
            const name = prompt("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–∫–ª–∞–¥–∞:");
            if (!name || !name.trim()) return;
            fetch("warehouses.php", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ action: "add", name: name.trim() })
            })
            .then(res => res.json())
            .then(data => {
                if (data.status === "success") {
                    showCreateForm();
                } else {
                    alert("–û—à–∏–±–∫–∞: " + data.message);
                }
            });
        };
    }
}



// ========== INLINE –†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–ï –°–ö–õ–ê–î–û–í ==========

function enterWarehouseEditMode() {
    const checkboxes = document.querySelectorAll('input[name="warehouses[]"]:checked');
    if (checkboxes.length === 0) {
        alert("–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —Å–∫–ª–∞–¥—ã –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.");
        return;
    }

    checkboxes.forEach(cb => {
        const label = cb.nextElementSibling;
        const currentName = label.textContent;
        const input = document.createElement("input");
        input.type = "text";
        input.value = currentName;
        input.className = "edit-input";
        input.dataset.oldName = currentName;
        label.replaceWith(input);
    });

    document.getElementById("warehouseEditControls").style.display = "block";
}

function cancelWarehouseEdits() {
    const inputs = document.querySelectorAll('.edit-input');
    inputs.forEach(input => {
        const name = input.dataset.oldName;
        const label = document.createElement("label");
        label.htmlFor = `warehouse-${name}`;
        label.className = "warehouse-label";
        label.textContent = name;
        input.replaceWith(label);
    });

    document.getElementById("warehouseEditControls").style.display = "none";
}

function saveWarehouseEdits() {
    const inputs = document.querySelectorAll('.edit-input');
    const edits = [];

    inputs.forEach(input => {
        const oldName = input.dataset.oldName;
        const newName = input.value.trim();
        if (newName && newName !== oldName) {
            edits.push({ old_name: oldName, new_name: newName });
        }
    });

    if (edits.length === 0) {
        alert("–ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π.");
        return;
    }

    fetch("warehouses.php", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ action: "batch_edit", edits })
    })
    .then(r => r.json())
    .then(data => {
        if (data.status === "success") {
            alert("–°–∫–ª–∞–¥—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã.");
            showCreateForm();
        } else {
            alert("–û—à–∏–±–∫–∞: " + data.message);
        }
    })
    .catch(err => alert("–û—à–∏–±–∫–∞: " + err.message));
}

function confirmWarehouseDelete() {
    const selected = Array.from(document.querySelectorAll('input[name="warehouses[]"]:checked'))
        .map(cb => cb.value);

    if (selected.length === 0) {
        alert("–í—ã–±–µ—Ä–∏—Ç–µ —Å–∫–ª–∞–¥—ã –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.");
        return;
    }

    if (!confirm(`–£–¥–∞–ª–∏—Ç—å ${selected.length} —Å–∫–ª–∞–¥(–æ–≤)?`)) return;

    fetch("warehouses.php", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ action: "delete", names: selected })
    })
    .then(r => r.json())
    .then(data => {
        if (data.status === "success") {
            alert("–£–¥–∞–ª–µ–Ω–æ.");
            showCreateForm();
        } else {
            alert("–û—à–∏–±–∫–∞: " + data.message);
        }
    })
    .catch(err => alert("–û—à–∏–±–∫–∞: " + err.message));
}





// –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
function editSchedule(id) {
    if (!canCreateSchedule) {
        alert("–ù–µ—Ç –ø—Ä–∞–≤!");
        return;
    }
    fetch(`schedule.php?id=${id}`)
        .then(r => {
            if (!r.ok) throw new Error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: " + r.status);
            return r.json();
        })
        .then(data => {
            const sh = Array.isArray(data) ? data[0] : data;
            if (!sh) {
                alert("–ù–µ –Ω–∞–π–¥–µ–Ω–∞ –∑–∞–ø–∏—Å—å");
                return;
            }
            const modalContainer = document.getElementById("modalContainer");
            if (!modalContainer) return;
            const timeSlots = Array.from({ length: 24 }, (_, i) =>
                `${String(i).padStart(2, "0")}:00-${String((i + 1) % 24).padStart(2, "0")}:00`
            );
            fetch("warehouses.php")
                .then(r2 => {
                    if (!r2.ok) throw new Error("–û—à–∏–±–∫–∞ —Å–∫–ª–∞–¥–æ–≤:" + r2.status);
                    return r2.json();
                })
                .then(warehouses => {
                    const selectedWarehouses = sh.warehouses ? sh.warehouses.split(",").map(s => s.trim()) : [];
                    const marketplace = sh.marketplace || "None";
                    const modalContent = document.createElement("div");
                    modalContent.className = "modal-content";
                    modalContent.innerHTML = `
                        <i class="fas fa-times modal-close" onclick="closeScheduleModal()"></i>
                        <div class="modal-header">
                            <h2>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ #${sh.id}</h2>
                        </div>
                        <div class="modal-body">
                            <form id="editScheduleForm">
                                <input type="hidden" name="id" value="${sh.id}">
                                <div class="form-group">
                                    <label>–ì–æ—Ä–æ–¥:</label>
                                    <select name="city" required>
                                        <option value="–•–∞—Å–∞–≤—é—Ä—Ç" ${sh.city==="–•–∞—Å–∞–≤—é—Ä—Ç"?"selected":""}>–•–∞—Å–∞–≤—é—Ä—Ç</option>
                                        <option value="–ú–∞—Ö–∞—á–∫–∞–ª–∞" ${sh.city==="–ú–∞—Ö–∞—á–∫–∞–ª–∞"?"selected":""}>–ú–∞—Ö–∞—á–∫–∞–ª–∞</option>
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label>–î–∞—Ç–∞ –ø—Ä–∏—ë–º–∞:</label>
                                    <input type="date" name="accept_date" value="${sh.accept_date||""}" required>
                                </div>
                                <div class="form-group">
                                    <label>–í—Ä–µ–º—è –ø—Ä–∏—ë–º–∞:</label>
                                    <select name="accept_time" required>
                                        <option value="08:00-17:00" ${sh.accept_time==="08:00-17:00"?"selected":""}>08:00-17:00</option>
                                        <option value="09:00-18:00" ${sh.accept_time==="09:00-18:00"?"selected":""}>09:00-18:00</option>
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label>–î–∞—Ç–∞ —Å–¥–∞—á–∏:</label>
                                    <input type="date" name="delivery_date" value="${sh.delivery_date||""}" required>
                                </div>
                                <div class="form-group">
                                    <label>–°–∫–ª–∞–¥—ã:</label>
                                    <div class="warehouse-checkboxes">
                                      ${
                                        warehouses.map(wh => {
                                          const checked = selectedWarehouses.includes(wh.name) ? "checked" : "";
                                          return `
                                            <div class="warehouse-checkbox-item">
                                              <input type="checkbox" name="warehouses[]" value="${wh.name}" id="warehouse-${wh.name}" ${checked}>
                                              <label for="warehouse-${wh.name}">${wh.name}</label>
                                            </div>
                                          `;
                                        }).join("")
                                      }
                                    </div>
                                    <button type="button" class="add-warehouse-button" onclick="addNewWarehouse('editScheduleForm')">–î–æ–±–∞–≤–∏—Ç—å —Å–∫–ª–∞–¥</button>
                                </div>
                                <div class="form-group">
                                    <label>–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å:</label>
                                    <select name="marketplace" id="marketplaceSelectEdit" required>
                                        <option value="Wildberries" ${marketplace==="Wildberries"?"selected":""}>Wildberries</option>
                                        <option value="Ozon" ${marketplace==="Ozon"?"selected":""}>Ozon</option>
                                        <option value="None" ${marketplace==="None"?"selected":""}>–ë–µ–∑ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞</option>
                                    </select>
                                </div>
                                <div class="form-group" id="timeslotFieldEdit" style="display:${marketplace==="Ozon"?"block":"none"};">
                                    <label>–¢–∞–π–º-—Å–ª–æ—Ç (–¥–ª—è Ozon):</label>
                                    <select name="timeslot">
                                      ${
                                        timeSlots.map(slot => `
                                          <option value="${slot}" ${sh.timeslot===slot?"selected":""}>${slot}</option>
                                        `).join("")
                                      }
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label>–°—Ç–∞—Ç—É—Å:</label>
                                    <select name="status">
                                        <option value="–ü—Ä–∏—ë–º –∑–∞—è–≤–æ–∫"   ${sh.status==="–ü—Ä–∏—ë–º –∑–∞—è–≤–æ–∫"?"selected":""}>–ü—Ä–∏—ë–º –∑–∞—è–≤–æ–∫</option>
                                        <option value="–í –ø—É—Ç–∏"         ${sh.status==="–í –ø—É—Ç–∏"?"selected":""}>–í –ø—É—Ç–∏</option>
                                        <option value="–ù–∞ —Å–∫–ª–∞–¥–µ"      ${sh.status==="–ù–∞ —Å–∫–ª–∞–¥–µ"?"selected":""}>–ù–∞ —Å–∫–ª–∞–¥–µ</option>
                                        <option value="–ó–∞–≤–µ—Ä—à–µ–Ω–æ"      ${sh.status==="–ó–∞–≤–µ—Ä—à–µ–Ω–æ"?"selected":""}>–ó–∞–≤–µ—Ä—à–µ–Ω–æ</option>
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label>–ù–æ–º–µ—Ä –∞–≤—Ç–æ–º–æ–±–∏–ª—è:</label>
                                    <input type="text" name="car_number" value="${sh.car_number||""}" required>
                                </div>
                                <div class="form-group">
                                    <label>–§–ò–û –≤–æ–¥–∏—Ç–µ–ª—è:</label>
                                    <input type="text" name="driver_name" value="${sh.driver_name||""}" required>
                                </div>
                                <div class="form-group">
                                    <label>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤–æ–¥–∏—Ç–µ–ª—è:</label>
                                    <input type="text" name="driver_phone" value="${sh.driver_phone||""}" required>
                                </div>
                                <div class="form-group">
                                    <label>–ú–∞—Ä–∫–∞ –º–∞—à–∏–Ω—ã:</label>
                                    <input type="text" name="car_brand" value="${sh.car_brand||""}" required>
                                </div>
                                <div class="form-group">
                                    <label>–û–∫–æ–Ω—á–∞–Ω–∏–µ –ø—Ä–∏—ë–º–∫–∏ (deadline):</label>
                                    <input type="datetime-local" name="accept_deadline" value="${sh.accept_deadline ? sh.accept_deadline.replace(" ", "T") : ""}">
                                </div>
                                <div class="modal-actions">
                                    <button type="submit" class="action-button save-btn">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
                                    <button type="button" class="action-button delete-btn" onclick="deleteSchedule(${sh.id})">–£–¥–∞–ª–∏—Ç—å</button>
                                </div>
                                <div class="error-message" id="editError" style="display:none;color:red;"></div>
                            </form>
                        </div>
                    `;
                    modalContainer.innerHTML = "";
                    modalContainer.appendChild(modalContent);
                    modalContainer.style.display = "block";
                    currentModal = modalContainer;
                    const marketSel = document.getElementById("marketplaceSelectEdit");
                    const timeslotField = document.getElementById("timeslotFieldEdit");
                    if (marketSel && timeslotField) {
                        marketSel.addEventListener("change", () => {
                            timeslotField.style.display = marketSel.value === "Ozon" ? "block" : "none";
                        });
                    }
                    const editForm = document.getElementById("editScheduleForm");
                    editForm.addEventListener("submit", e => {
                        e.preventDefault();
                        const formData = new FormData(editForm);
                        const selectedWh = Array.from(editForm.querySelectorAll('input[name="warehouses[]"]:checked')).map(cb => cb.value);
                        if (selectedWh.length === 0) {
                            document.getElementById("editError").textContent = "–í—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Å–∫–ª–∞–¥.";
                            document.getElementById("editError").style.display = "block";
                            return;
                        }
                        selectedWh.forEach((w, idx) => {
                            formData.append(`warehouses[${idx}]`, w);
                        });
                        formData.append("action", "edit");
                        fetch("schedule.php", { method: "POST", body: formData })
                            .then(r => r.json())
                            .then(d => {
                                if (d.status === "success") {
                                    fetchScheduleData();
                                    fetchDataAndUpdateCalendar();
                                    closeScheduleModal();
                                } else {
                                    document.getElementById("editError").textContent = d.message || "–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è.";
                                    document.getElementById("editError").style.display = "block";
                                }
                            })
                            .catch(err => {
                                console.error("–û—à–∏–±–∫–∞ editScheduleForm:", err);
                                document.getElementById("editError").textContent = "–û—à–∏–±–∫–∞ —Å–≤—è–∑–∏ —Å —Å–µ—Ä–≤–µ—Ä–æ–º.";
                                document.getElementById("editError").style.display = "block";
                            });
                    });
                })
                .catch(err2 => console.error("–û—à–∏–±–∫–∞ warehouses:", err2));
        })
        .catch(err => console.error("–û—à–∏–±–∫–∞ editSchedule:", err));
}
// –£–¥–∞–ª–µ–Ω–∏–µ
function deleteSchedule(id) {
    if (!confirm("–£–¥–∞–ª–∏—Ç—å —ç—Ç–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ?")) return;
    fetch("schedule.php", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ action: "delete", id })
    })
    .then(r => r.json())
    .then(data => {
        if (data.success) {
            alert(data.message); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º: —É–¥–∞–ª–µ–Ω–æ –∏–ª–∏ –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–æ
            fetchAndDisplayUpcoming(archiveView); // üîÅ –æ–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫
        } else {
            alert("–û—à–∏–±–∫–∞: " + data.message);
        }
    })
    .catch(err => {
        alert("–û—à–∏–±–∫–∞ —Å–µ—Ç–∏: " + err.message);
    });
}

function archiveSchedule(id) {
    if (!confirm("–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤ –∞—Ä—Ö–∏–≤?")) return;
    fetch("mass_update_schedule.php", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ action: "archive", schedule_ids: [id] })
    })
    .then(r => r.json())
    .then(data => {
        if (data.success && data.results && data.results[id] && data.results[id].status === 'archived') {
            alert('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–æ');
            loadManagementSchedules();
            fetchDataAndUpdateCalendar();
        } else {
            const msg = data.results && data.results[id] && data.results[id].message ? data.results[id].message : '–û—à–∏–±–∫–∞ –∞—Ä—Ö–∏–≤–∞—Ü–∏–∏';
            alert(msg);
        }
    })
    .catch(err => {
        alert("–û—à–∏–±–∫–∞ —Å–µ—Ç–∏: " + err.message);
    });
}


function openScheduleManagementModal() {
    document.getElementById("scheduleManagementModal").style.display = "block";
    loadManagementSchedules(); // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫
}

function closeScheduleManagementModal() {
    document.getElementById("scheduleManagementModal").style.display = "none";
}


// –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–π (–∞—Ä—Ö–∏–≤ = 0)
function loadManagementSchedules() {
    const block = document.getElementById("managementScheduleList");
    if (!block) return;
    block.innerHTML = "–ó–∞–≥—Ä—É–∑–∫–∞‚Ä¶";

    fetch("schedule.php?archived=0")
        .then(r => {
            if (!r.ok) throw new Error(`HTTP ${r.status}`);
            return r.json();
        })
        .then(data => {
            if (!Array.isArray(data)) {
                block.innerHTML = "<p>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–π</p>";
                return;
            }

            let html = `
                <table class="management-table">
                  <thead>
                    <tr>
                      <th><input type="checkbox" id="selectAllSchedules"></th>
                      <th>‚Ññ</th>
                      <th>–û—Ç–∫—É–¥–∞ ‚Üí –ö—É–¥–∞</th>
                      <th>–ü—Ä–∏—ë–º–∫–∞</th>
                      <th>–°–¥–∞—á–∞</th>
                      <th>–°—Ç–∞—Ç—É—Å</th>
                      <th>–î–µ–π—Å—Ç–≤–∏—è</th>
                    </tr>
                  </thead>
                  <tbody>
            `;

            data.forEach(s => {
                let rowClass = '';
                if (s.status === '–ó–∞–≤–µ—Ä—à–µ–Ω–æ' || s.status === '–¢–æ–≤–∞—Ä –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω') {
                    rowClass = 'finished';
                } else if (
                    s.status === '–í –ø—É—Ç–∏' ||
                    s.status === '–ì–æ—Ç–æ–≤ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ' ||
                    s.status === '–í –æ–±—Ä–∞–±–æ—Ç–∫–µ'
                ) {
                    rowClass = 'blocked';
                }

                html += `
                    <tr id="schedule_item_${s.id}" class="${rowClass}">
                      <td><input type="checkbox" class="schedule-checkbox" value="${s.id}"></td>
                      <td>${s.id}</td>
                      <td>${s.city} ‚Üí ${s.warehouses || '‚Äî'}</td>
                      <td>${s.accept_date}${s.accept_time ? ' ' + s.accept_time : ''}</td>
                      <td>${s.delivery_date}</td>
                      <td>
                        <select onchange="updateStatus(${s.id}, this.value)">
                          <option value="–û–∂–∏–¥–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏" ${s.status==="–û–∂–∏–¥–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏" ? "selected" : ""}>–û–∂–∏–¥–∞–µ—Ç</option>
                          <option value="–ì–æ—Ç–æ–≤ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ" ${s.status==="–ì–æ—Ç–æ–≤ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ" ? "selected" : ""}>–ì–æ—Ç–æ–≤</option>
                          <option value="–í –ø—É—Ç–∏" ${s.status==="–í –ø—É—Ç–∏" ? "selected" : ""}>–í –ø—É—Ç–∏</option>
                          <option value="–ó–∞–≤–µ—Ä—à–µ–Ω–æ" ${s.status==="–ó–∞–≤–µ—Ä—à–µ–Ω–æ" ? "selected" : ""}>–ó–∞–≤–µ—Ä—à–µ–Ω–æ</option>
                        </select>
                      </td>
                      <td>
                        <button class="action-button delete-btn" onclick="deleteSchedule(${s.id})">–£–¥–∞–ª–∏—Ç—å</button>
                        <button class="action-button archive-btn" onclick="archiveSchedule(${s.id})">–ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞—Ç—å</button>
                      </td>
                    </tr>
                `;
            });

            html += `
                  </tbody>
                </table>
            `;
            block.innerHTML = html;

            const selectAll = document.getElementById("selectAllSchedules");
            if (selectAll) {
                selectAll.addEventListener("change", () => {
                    const checked = selectAll.checked;
                    document.querySelectorAll(".schedule-checkbox").forEach(cb => cb.checked = checked);
                });
            }
        })
        .catch(err => {
            console.error("loadManagementSchedules:", err);
            block.innerHTML = "<p>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–π</p>";
        });
}










// –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –∞–ø–¥–µ–π—Ç —Å—Ç–∞—Ç—É—Å–∞
function updateStatus(id, status) {
    const realUserRole = typeof userRole !== 'undefined' ? userRole : 'client';
    const localCanUpdate = (realUserRole === "admin" || realUserRole === "manager");

    if (!localCanUpdate) {
        alert("–ù–µ—Ç –ø—Ä–∞–≤!");
        return;
    }

    fetch("schedule.php", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ action: "update_status", id, status })
    })
    .then(r => r.json())
    .then(d => {
        if (d.status === "success") {
            fetchScheduleData();
            fetchDataAndUpdateCalendar();
        } else {
            alert("–û—à–∏–±–∫–∞: " + d.message);
        }
    })
    .catch(err => console.error("–û—à–∏–±–∫–∞ updateStatus:", err));
}

function completeSchedule(id) {
    if (!canCreateSchedule) {
        alert("–ù–µ—Ç –ø—Ä–∞–≤!");
        return;
    }
    if (!confirm("–ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–ø–∏—Å—å?")) return;
    updateStatus(id, "–ó–∞–≤–µ—Ä—à–µ–Ω–æ");
}
// –≠–∫—Å–ø–æ—Ä—Ç
function exportSchedule() {
    fetch("schedule.php", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ action: "export" })
    })
        .then(r => {
            if (!r.ok) throw new Error("–û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞: " + r.status);
            return r.blob();
        })
        .then(blob => {
            let url = window.URL.createObjectURL(blob);
            let a = document.createElement("a");
            a.href = url;
            a.download = "schedule.xls";
            a.click();
            window.URL.revokeObjectURL(url);
        })
        .catch(err => console.error("–û—à–∏–±–∫–∞ exportSchedule:", err));
}
// –ó–∞–≥—Ä—É–∑–∫–∞ —Å–∫–ª–∞–¥–æ–≤
function loadWarehousesForFilter() {
    const select = document.getElementById("warehouseFilter");
    if (!select) {
        console.warn("–≠–ª–µ–º–µ–Ω—Ç #warehouseFilter –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ DOM");
        return;
    }

    fetch("warehouse_filter.php", { cache: "no-store" })
        .then(r => r.json())
        .then(data => {
            if (!Array.isArray(data)) {
                console.error("warehouse_filter.php –≤–µ—Ä–Ω—É–ª –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç:", data);
                return;
            }

            select.innerHTML = '<option value="">–í—Å–µ —Å–∫–ª–∞–¥—ã</option>';
            data.forEach(w => {
                if (w.name && typeof w.name === 'string') {
                    const opt = document.createElement("option");
                    opt.value = w.name;
                    opt.textContent = w.name;
                    select.appendChild(opt);
                }
            });
        })
        .catch(err => {
            console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∫–ª–∞–¥–æ–≤:", err);
        });
}

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Å–∫–ª–∞–¥–∞
 */
function addNewWarehouse(formId) {
    const name = prompt("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–∫–ª–∞–¥–∞:");
    if (!name || !name.trim()) return;
    fetch("warehouses.php", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ action: "add", name: name.trim() })
    })
        .then(r => r.json())
        .then(d => {
            if (d.status === "success") {
                loadWarehousesForFilter();
                fetch("warehouses.php")
                    .then(r2 => r2.json())
                    .then(warehouses => {
                        const container = document.querySelector(`#${formId} .warehouse-checkboxes`);
                        if (container) {
                            container.innerHTML = warehouses.map(wh => {
                                return `
                                    <div class="warehouse-checkbox-item">
                                        <input type="checkbox" name="warehouses[]" value="${wh.name}" id="warehouse-${wh.name}">
                                        <label for="warehouse-${wh.name}">${wh.name}</label>
                                    </div>
                                `;
                            }).join("");
                        }
                    })
                    .catch(err2 => console.error("–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–æ–≤ —Å–∫–ª–∞–¥–æ–≤:", err2));
            } else {
                alert("–û—à–∏–±–∫–∞: " + d.message);
            }
        })
        .catch(err => console.error("–û—à–∏–±–∫–∞ addNewWarehouse:", err));
}
// –ì—Ä—É–∑–∏–º –¥–∞–Ω–Ω—ã–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è (–¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞‚Ä¶)
function fetchScheduleData() {
    // –µ—Å–ª–∏ –Ω—É–∂–Ω–æ, –º–æ–∂–Ω–æ –∑–¥–µ—Å—å –ø–µ—Ä–µ–∑–∞–ø—Ä–∞—à–∏–≤–∞—Ç—å schedule.php –∏ –æ–±–Ω–æ–≤–ª—è—Ç—å —ç–∫—Ä–∞–Ω
    // –∏–ª–∏ –≤—ã–∑—ã–≤–∞—Ç—å fetchAndUpdateCalendar()
}
/**
 * –ì–ª–∞–≤–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ: –º—ã –Ω–µ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ "processing.html",
 * –∞ –ø—Ä–æ—Å—Ç–æ –∑–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª–∫—É (–∏–ª–∏ –º–æ–∂–µ–º –æ—Ç–∫—Ä—ã—Ç—å –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª).
 */
function createOrder(scheduleId, city, warehouse) {
    // –í–º–µ—Å—Ç–æ –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ processing.html,
    // –≤—ã–∑—ã–≤–∞–µ–º –Ω–∞—à—É —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ requestForm.js
    closeScheduleModal(); // –µ—Å–ª–∏ –±—ã–ª–æ –æ—Ç–∫—Ä—ã—Ç–æ –æ–∫–Ω–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
    openRequestFormModal(scheduleId, city, warehouse);
}

function openShipmentsForDate(date) {
    fetch(`schedule.php?date=${encodeURIComponent(date)}`)
        .then(r => {
            if (!r.ok) throw new Error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–π –Ω–∞ –¥–∞—Ç—É: " + r.status);
            return r.json();
        })
        .then(data => {
            const modalContainer = document.getElementById("modalContainer");
            if (!modalContainer) return;
            modalContainer.innerHTML = "";
            modalContainer.style.display = "block";

            const modalContent = document.createElement("div");
            modalContent.className = "modal-content";
            modalContainer.appendChild(modalContent);

            // ‚úÖ –í—Å–µ–≥–¥–∞ –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –∑–∞–∫—Ä—ã—Ç–∏—è
            let content = `
                <span class="modal-close" onclick="closeScheduleModal()">
                    <i class="fas fa-times"></i>
                </span>`;

            if (!Array.isArray(data) || data.length === 0) {
                // ‚úÖ –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏
                content += `<p style="padding: 20px;">–ù–∞ —ç—Ç—É –¥–∞—Ç—É –Ω–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–π.</p>`;
                modalContent.innerHTML = content;
                return;
            }

            if (data.length === 1) {
                // ‚úÖ –û–¥–∏–Ω–æ—á–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ ‚Äî –æ—Ç–∫—Ä—ã—Ç—å –∫–∞–∫ —Ä–∞–Ω—å—à–µ
                openSingleShipmentModal(data[0]);
                return;
            }

            // ‚úÖ –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è ‚Äî —Ä–µ–Ω–¥–µ—Ä —Ç–∞–±–æ–≤
            let tabsHtml = '<div class="tab-header">';
            let contentHtml = '';

            data.forEach((sh, i) => {
                const tabId = `shTab${i}`;
                tabsHtml += `
                    <button class="tab-button ${i === 0 ? 'active' : ''}" 
                            onclick="switchShipmentSubTab(${i}, ${data.length})"
                            id="tabBtn${i}">
                        ${sh.warehouses || '–û—Ç–ø—Ä. ' + (i + 1)}
                    </button>`;
                contentHtml += `
                    <div class="shipment-subtab" id="${tabId}" 
                         style="display: ${i === 0 ? 'block' : 'none'};">
                        ${renderShipmentDetailsHTML(sh, userRole)}
                    </div>`;
            });

            tabsHtml += '</div>';

            modalContent.innerHTML = `
                <span class="modal-close" onclick="closeScheduleModal()">
                    <i class="fas fa-times"></i>
                </span>
                <h2>–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞ ${date}</h2>
                ${tabsHtml}
                <div id="shipmentSubtabs">${contentHtml}</div>
            `;
        })
        .catch(err => {
            console.error("–û—à–∏–±–∫–∞ openShipmentsForDate:", err);
        });
}


function massManageSchedules(action) {
    const checkboxes = Array.from(document.querySelectorAll(".schedule-checkbox:checked"));
    if (checkboxes.length === 0) {
        showMassManageMessage('warning', '–í—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.');
        return;
    }

    if (!['delete', 'archive'].includes(action)) {
        showMassManageMessage('error', '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ.');
        return;
    }

    const ids = checkboxes.map(cb => parseInt(cb.value, 10));
    const payload = { action, schedule_ids: ids };

    // –ö–Ω–æ–ø–∫–∏ –∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏–π
    const btnDelete  = document.getElementById('btnMassDelete');
    const btnArchive = document.getElementById('btnMassArchive');
    const msgBox     = document.getElementById('massManageMessages');

    // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –∏ –æ—á–∏—â–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
    btnDelete.disabled = btnArchive.disabled = true;
    msgBox.innerHTML = '';

    fetch("mass_update_schedule.php", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(payload)
    })
    .then(response => {
        if (!response.ok) {
            throw new Error(`–°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª ${response.status}: ${response.statusText}`);
        }
        return response.json();
    })
    .then(data => {
        if (!data.success) {
            showMassManageMessage('error', `–û—à–∏–±–∫–∞: ${data.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
            return;
        }

        const results = data.results || {};
        const blocked = [];

        ids.forEach(id => {
            const result = results[id];
            const row    = document.getElementById("schedule_item_" + id);
            if (!result || !row) return;

            if (result.status === 'deleted' || result.status === 'archived') {
                row.style.opacity = "0.4";
                row.style.textDecoration = "line-through";
            } else if (result.status === 'blocked') {
                row.style.backgroundColor = "#ffe6e6";
                blocked.push(`–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ #${id}: ${result.message}`);
            }
        });

        if (blocked.length) {
            showMassManageMessage('warning',
                '–ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã:<ul>'
                + blocked.map(msg => `<li>${msg}</li>`).join('')
                + '</ul>'
            );
        } else {
            showMassManageMessage('success', '–í—Å–µ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã');
            // –º–æ–∂–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª–∫—É:
            // setTimeout(closeScheduleManagementModal, 1500);
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–∫–∏
        loadManagementSchedules();
        fetchDataAndUpdateCalendar();
    })
    .catch(err => {
        showMassManageMessage('error', `–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: ${err.message}`);
    })
    .finally(() => {
        btnDelete.disabled = btnArchive.disabled = false;
    });
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
function showMassManageMessage(type, htmlText) {
    const msgBox = document.getElementById('massManageMessages');
    msgBox.innerHTML = `<div class="${type}">${htmlText}</div>`;
}





function switchShipmentSubTab(index, total) {
    for (let i = 0; i < total; i++) {
        const tabBtn = document.getElementById(`tabBtn${i}`);
        const tabContent = document.getElementById(`shTab${i}`);
        if (tabBtn) {
            tabBtn.classList.toggle('active', i === index);
        }
        if (tabContent) {
            tabContent.style.display = (i === index) ? 'block' : 'none';
        }
    }
}

function renderShipmentDetailsHTML(sh) {
    const role = typeof userRole !== 'undefined' ? userRole : (window.userRole || 'client');
    const localCanEdit = role === "admin" || role === "manager";
    const statusOptions = [
        "–û–∂–∏–¥–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏",
        "–í –ø—É—Ç–∏",
        "–ó–∞–≤–µ—Ä—à–µ–Ω–æ"
    ].map(s => `<option value="${s}" ${sh.status === s ? 'selected' : ''}>${s}</option>`).join('');
    return `
        <div class="shipment-card">
            <h3>üöö ${sh.city} ‚Üí ${sh.warehouses}</h3>
            <p><strong>–î–∞—Ç–∞ —Å–¥–∞—á–∏:</strong> ${sh.delivery_date || '‚Äî'}</p>
            <p><strong>–î–∞—Ç–∞ –ø—Ä–∏—ë–º–∫–∏:</strong> ${sh.accept_date || '‚Äî'} ${sh.accept_time || ''}</p>
            <p><strong>–ê–≤—Ç–æ–º–æ–±–∏–ª—å:</strong> ${sh.car_brand || '‚Äî'} ${sh.car_number || '‚Äî'}</p>
            <p><strong>–í–æ–¥–∏—Ç–µ–ª—å:</strong> ${sh.driver_name || '‚Äî'} (${sh.driver_phone || '‚Äî'})</p>
            <p><strong>–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å:</strong> ${sh.marketplace || '‚Äî'}</p>
            <p><strong>–¢–∞–π–º—Å–ª–æ—Ç:</strong> ${sh.timeslot || '‚Äî'}</p>
            <p><strong>–°—Ç–∞—Ç—É—Å:</strong> ${sh.status || '‚Äî'}</p>
            ${localCanEdit ? `
                <div class="shipment-actions">
                    <label>–ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å:</label>
                    <select onchange="updateStatus(${sh.id}, this.value)">
                        ${statusOptions}
                    </select>
                    <button onclick="editSchedule(${sh.id})">‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
                    <button onclick="deleteSchedule(${sh.id})">üóëÔ∏è –£–¥–∞–ª–∏—Ç—å</button>
                </div>
            ` : ''}
        </div>
    `;
}
