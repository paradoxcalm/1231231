/*
 * scheduleList.js
 *
 * –≠—Ç–æ—Ç –º–æ–¥—É–ª—å –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –≤–∫–ª–∞–¥–∫—É ¬´–ë–ª–∏–∂–∞–π—à–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è¬ª –∏ —Ñ–∏–ª—å—Ç—Ä—ã
 * —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è. –ó–¥–µ—Å—å –Ω–∞—Ö–æ–¥—è—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
 * –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–π, —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤ –ø–æ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞–º,
 * –≥–æ—Ä–æ–¥–∞–º –∏ —Å–∫–ª–∞–¥–∞–º, –∞ —Ç–∞–∫–∂–µ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
 * –¥–∞—Ç –∏ –∫–ª–∏–∫–æ–≤ –ø–æ –≥–æ—Ä–æ–¥—É.
 *
 * –ë–æ–ª—å—à–∞—è —á–∞—Å—Ç—å –∫–æ–¥–∞ –≤–∑—è—Ç–∞ –∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ schedule.js –±–µ–∑
 * –∏–∑–º–µ–Ω–µ–Ω–∏—è –ª–æ–≥–∏–∫–∏. –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ —Ñ—É–Ω–∫—Ü–∏–∏ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è —á–µ—Ä–µ–∑
 * –≥–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç window, —á—Ç–æ–±—ã –∏–º–∏ –º–æ–≥–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥—Ä—É–≥–∏–µ
 * –º–æ–¥—É–ª–∏ –±–µ–∑ —Å–∏—Å—Ç–µ–º—ã —Å–±–æ—Ä–∫–∏.
 */

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∏ –ø—Ä–∞–≤. –û–Ω–∏ –ø—Ä–∏–≤—è–∑—ã–≤–∞—é—Ç—Å—è –∫ window,
// —á—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω—è—Ç—å —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å –æ—Å—Ç–∞–ª—å–Ω—ã–º –∫–æ–¥–æ–º, –∫–æ—Ç–æ—Ä—ã–π –æ–∂–∏–¥–∞–ª
// –≤–∏–¥–µ—Ç—å –∏—Ö –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏.
window.calendarCurrentDate = new Date();
window.canCreateSchedule = false;
window.canCreateOrder = false;
window.activeCityFilter = "";
window.activeWarehouseFilter = "";
window.activeDestinationWarehouseFilter = "";
window.archiveView = false;
window.activeMarketplaceFilter = "";

const { parseJSONResponse, handleError } = window.scheduleUtils;

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è. –û–Ω–∞ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç
 * —Ä–∞–∑–º–µ—Ç–∫—É –≤–∫–ª–∞–¥–æ–∫, —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç –Ω–∞—á–∞–ª—å–Ω—É—é –∑–∞–≥—Ä—É–∑–∫—É
 * –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–π –∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è. –í–∑—è—Ç–∞ –∏–∑ schedule.js.
 */
function loadSchedule() {
    const dynamicContent = document.getElementById("dynamicContent");
    if (!dynamicContent) return;

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∏–ª–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º
    window.canCreateSchedule = (userRole === "admin" || userRole === "manager");
    const isAdminOrManager = (userRole === "admin" || userRole === "manager");

    // –®–∞–±–ª–æ–Ω HTML –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è. –°–æ–¥–µ—Ä–∂–∏—Ç –≤–∫–ª–∞–¥–∫–∏
    // ¬´–ë–ª–∏–∂–∞–π—à–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è¬ª –∏ ¬´–ö–∞–ª–µ–Ω–¥–∞—Ä—å¬ª, –∫–Ω–æ–ø–∫–∏ —Å–æ–∑–¥–∞–Ω–∏—è
    // –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è, –∞ —Ç–∞–∫–∂–µ –±–ª–æ–∫ —Ñ–∏–ª—å—Ç—Ä–æ–≤.
    const html = `
        <div class="schedule-header">
          <h1>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ</h1>
        </div>
        <div class="schedule-tabs">
          <button id="tab-upcoming" class="active" onclick="switchTab('upcoming')">–ë–ª–∏–∂–∞–π—à–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è</button>
          ${isAdminOrManager ? `<button id="tab-calendar" onclick="switchTab('calendar')">–ö–∞–ª–µ–Ω–¥–∞—Ä—å</button>` : `<button id="tab-calendar" onclick="switchTab('calendar')">–ö–∞–ª–µ–Ω–¥–∞—Ä—å</button>`}
        </div>
        <div id="tabContent-upcoming" style="display:block;">
          <div class="filter-actions">
            <button id="toggleArchiveBtn">–ü–æ–∫–∞–∑–∞—Ç—å –∞—Ä—Ö–∏–≤</button>
            ${window.canCreateSchedule ? `
              <button id="createScheduleBtn" onclick="showCreateForm()">–°–æ–∑–¥–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ</button>
              <div class="excel-dropdown">
                <button id="excelDropdownBtn" onclick="toggleExcelMenu()">üì§ Excel <span id="excelArrow">‚ñº</span></button>
                <div id="excelMenu" class="dropdown-content">
                  <a href="#" onclick="exportSchedule()">üì§ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö</a>
                  <a href="#" onclick="openImportModal()">üì• –ò–º–ø–æ—Ä—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è</a>
                  <a href="/templates/–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ_—à–∞–±–ª–æ–Ω.xlsx">üìÑ –°–∫–∞—á–∞—Ç—å —à–∞–±–ª–æ–Ω</a>
                  <a href="#" onclick="openScheduleManagementModal()">‚öôÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ</a>
                  <a href="#" onclick="showShipmentReport()">üìÑ–°–ø–∏—Å–æ–∫ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–π</a>
                </div>
              </div>
            ` : ``}
          </div>
          <div id="filterBlock" class="schedule-filters">
            <!-- –§–∏–ª—å—Ç—Ä—ã –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –Ω–∏–∂–µ -->
          </div>
          <div id="upcomingList" class="upcoming-list"></div>
        </div>
        <div id="tabContent-calendar" style="display:none;">
          ${isAdminOrManager ? `
            <div id="calendarControls" class="calendar-controls">
              <!-- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –º–µ—Å—è—Ü–∞ –∑–¥–µ—Å—å -->
            </div>
            <div id="calendarFilters" class="calendar-filters">
              <!-- –§–∏–ª—å—Ç—Ä—ã –∫–∞–ª–µ–Ω–¥–∞—Ä—è –∑–¥–µ—Å—å -->
            </div>
            <div id="calendarView" class="calendar-view">
              <div id="currentMonthYear"></div>
              <div id="calendarGrid" class="calendar-grid"></div>
            </div>
            <div id="calendarNoAccess" style="display:none;">–ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä—è</div>
          ` : `<div id="calendarNoAccess">–ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä—è</div>`}
        </div>
    `;
    dynamicContent.innerHTML = html;

    // --- –§–∏–ª—å—Ç—Ä—ã ---
    const filterBlock = document.getElementById("filterBlock");
    if (filterBlock) {
        filterBlock.innerHTML = `
          <label for="marketplaceFilter">–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å</label>
          <select id="marketplaceFilter" name="marketplaceFilter"></select>
          <label for="cityDropdown">–ì–æ—Ä–æ–¥</label>
          <select id="cityDropdown" name="cityDropdown"></select>
          <label for="destinationWarehouseFilter">–°–∫–ª–∞–¥</label>
          <select id="destinationWarehouseFilter" name="destinationWarehouseFilter"></select>
        `;
    }

    // --- –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤ ---
    function showFilterNotice(msg) {
        let n = document.getElementById('filterNotice');
        if (!n) {
            n = document.createElement('div');
            n.id = 'filterNotice';
            n.style = "color:#b70000;font-size:1em;padding:7px 0 3px 0;";
            filterBlock.appendChild(n);
        }
        n.textContent = msg;
        setTimeout(() => { n.textContent = ""; }, 3000);
    }

    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–∏–ª—å—Ç—Ä—ã
    window.activeMarketplaceFilter = "";
    window.activeCityFilter = "";
    window.activeDestinationWarehouseFilter = "";

    const marketplaceSelect = document.getElementById("marketplaceFilter");
    const citySelect = document.getElementById("cityDropdown");
    const warehouseSelect = document.getElementById("destinationWarehouseFilter");

    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤
    fetch("filter_options.php?action=marketplaces")
        .then(parseJSONResponse)
        .then(data => {
            if (data.success) {
                marketplaceSelect.innerHTML = `<option value="">–í—Å–µ</option>` +
                    data.marketplaces.map(mp => `<option value="${mp}">${mp}</option>`).join('');
            }
        });

    // –ü–æ–¥–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –≥–æ—Ä–æ–¥–∞ (–ø–æ –≤—Å–µ–º –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞–º)
    function loadAllCities(selectedCity) {
        fetch("filter_options.php?action=all_cities")
            .then(parseJSONResponse)
            .then(data => {
                if (data.success) {
                    citySelect.innerHTML = `<option value="">–í—Å–µ</option>` +
                        data.cities.map(c => `<option value="${c}">${c}</option>`).join('');
                }
            });
    }

    // –ü–æ–¥–≥—Ä—É–∂–∞–µ–º –≤—Å–µ —Å–∫–ª–∞–¥—ã (–ø–æ –≤—Å–µ–º –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞–º –∏ –≥–æ—Ä–æ–¥–∞–º)
    function loadAllWarehouses(selectedCity, selectedWarehouse) {
        let url = "filter_options.php?action=all_warehouses";
        if (selectedCity) url += "&city=" + encodeURIComponent(selectedCity);
        fetch(url)
            .then(parseJSONResponse)
            .then(data => {
                if (data.success) {
                    warehouseSelect.innerHTML = `<option value="">–í—Å–µ</option>` +
                        data.warehouses.map(w => `<option value="${w}">${w}</option>`).join('');
                }
            });
    }

    // –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ –ø–æ–¥–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –≥–æ—Ä–æ–¥–∞ –∏ —Å–∫–ª–∞–¥—ã
    loadAllCities();
    loadAllWarehouses();

    // --- –õ–æ–≥–∏–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤ ---
    marketplaceSelect.onchange = function () {
        window.activeMarketplaceFilter = this.value;
        const prevCity = window.activeCityFilter;
        const prevWarehouse = window.activeDestinationWarehouseFilter;

        let cityPromise;
        if (!window.activeMarketplaceFilter) {
            cityPromise = fetch("filter_options.php?action=all_cities")
                .then(parseJSONResponse)
                .then(data => data.cities || []);
        } else {
            cityPromise = fetch(`filter_options.php?action=cities&marketplace=${encodeURIComponent(window.activeMarketplaceFilter)}`)
                .then(parseJSONResponse)
                .then(data => data.cities || []);
        }

        cityPromise.then(cities => {
            const cityValid = !prevCity || cities.includes(prevCity);
            if (!cityValid) {
                showFilterNotice("–ù–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–π –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å—É –∏ –≥–æ—Ä–æ–¥—É.");
                window.activeCityFilter = "";
                window.activeDestinationWarehouseFilter = "";
            } else {
                window.activeCityFilter = prevCity;
            }
            citySelect.innerHTML = `<option value="">–í—Å–µ</option>` +
                cities.map(c => `<option value="${c}">${c}</option>`).join('');
            citySelect.disabled = false;

            let whPromise;
            if (!window.activeMarketplaceFilter && !window.activeCityFilter) {
                whPromise = fetch("filter_options.php?action=all_warehouses")
                    .then(parseJSONResponse)
                    .then(data => data.warehouses || []);
            } else if (!window.activeMarketplaceFilter && window.activeCityFilter) {
                whPromise = fetch(`filter_options.php?action=all_warehouses&city=${encodeURIComponent(window.activeCityFilter)}`)
                    .then(parseJSONResponse)
                    .then(data => data.warehouses || []);
            } else if (window.activeMarketplaceFilter && window.activeCityFilter) {
                whPromise = fetch(`filter_options.php?action=warehouses&marketplace=${encodeURIComponent(window.activeMarketplaceFilter)}&city=${encodeURIComponent(window.activeCityFilter)}`)
                    .then(parseJSONResponse)
                    .then(data => data.warehouses || []);
            } else {
                whPromise = Promise.resolve([]);
            }

            whPromise.then(warehouses => {
                const whValid = !prevWarehouse || warehouses.includes(prevWarehouse);
                if (!whValid && prevWarehouse) {
                    showFilterNotice("–ù–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–π –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É —Å–∫–ª–∞–¥—É –¥–ª—è —Ç–µ–∫—É—â–∏—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤.");
                    window.activeDestinationWarehouseFilter = "";
                } else {
                    window.activeDestinationWarehouseFilter = prevWarehouse;
                }
                warehouseSelect.innerHTML = `<option value="">–í—Å–µ</option>` +
                    warehouses.map(w => `<option value="${w}">${w}</option>`).join('');
                warehouseSelect.disabled = false;
                fetchAndDisplayUpcoming();
            });
        });
    };

    citySelect.onchange = function () {
        window.activeCityFilter = this.value;
        const prevWarehouse = window.activeDestinationWarehouseFilter;

        let whPromise;
        if (!window.activeMarketplaceFilter && !window.activeCityFilter) {
            whPromise = fetch("filter_options.php?action=all_warehouses")
                .then(parseJSONResponse)
                .then(data => data.warehouses || []);
        } else if (!window.activeMarketplaceFilter && window.activeCityFilter) {
            whPromise = fetch(`filter_options.php?action=all_warehouses&city=${encodeURIComponent(window.activeCityFilter)}`)
                .then(parseJSONResponse)
                .then(data => data.warehouses || []);
        } else if (window.activeMarketplaceFilter && window.activeCityFilter) {
            whPromise = fetch(`filter_options.php?action=warehouses&marketplace=${encodeURIComponent(window.activeMarketplaceFilter)}&city=${encodeURIComponent(window.activeCityFilter)}`)
                .then(parseJSONResponse)
                .then(data => data.warehouses || []);
        } else {
            whPromise = Promise.resolve([]);
        }

        whPromise.then(warehouses => {
            const whValid = !prevWarehouse || warehouses.includes(prevWarehouse);
            if (!whValid && prevWarehouse) {
                showFilterNotice("–ù–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–π –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É —Å–∫–ª–∞–¥—É –¥–ª—è —Ç–µ–∫—É—â–∏—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤.");
                window.activeDestinationWarehouseFilter = "";
            } else {
                window.activeDestinationWarehouseFilter = prevWarehouse;
            }
            warehouseSelect.innerHTML = `<option value="">–í—Å–µ</option>` +
                warehouses.map(w => `<option value="${w}">${w}</option>`).join('');
            warehouseSelect.disabled = false;
            fetchAndDisplayUpcoming();
        });
    };

    warehouseSelect.onchange = function () {
        window.activeDestinationWarehouseFilter = this.value;
        fetchAndDisplayUpcoming();
    };

    document.getElementById("toggleArchiveBtn").addEventListener("click", () => {
        window.archiveView = !window.archiveView;
        document.getElementById("toggleArchiveBtn").textContent = window.archiveView ? "–ü–æ–∫–∞–∑–∞—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ" : "–ü–æ–∫–∞–∑–∞—Ç—å –∞—Ä—Ö–∏–≤";
        fetchAndDisplayUpcoming();
    });

    // –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤–∫–ª–∞–¥–æ–∫. –î–æ–±–∞–≤–ª—è–µ–º –≤ window, —á—Ç–æ–±—ã –µ—é –ø–æ–ª—å–∑–æ–≤–∞–ª–∏—Å—å
    window.switchTab = function(tab) {
        document.getElementById('tab-upcoming').classList.remove('active');
        document.getElementById('tab-calendar').classList.remove('active');
        document.getElementById('tabContent-upcoming').style.display = 'none';
        document.getElementById('tabContent-calendar').style.display = 'none';
        if (tab === 'upcoming') {
            document.getElementById('tab-upcoming').classList.add('active');
            document.getElementById('tabContent-upcoming').style.display = 'block';
        } else if (tab === 'calendar') {
            document.getElementById('tab-calendar').classList.add('active');
            document.getElementById('tabContent-calendar').style.display = 'block';
            if (!isAdminOrManager) {
                document.getElementById("calendarNoAccess").style.display = "block";
                document.getElementById("calendarControls").style.display = "none";
                document.getElementById("calendarFilters").style.display = "none";
                document.getElementById("calendarView").style.display = "none";
            } else {
                document.getElementById("calendarNoAccess").style.display = "none";
                document.getElementById("calendarControls").style.display = "";
                document.getElementById("calendarFilters").style.display = "";
                document.getElementById("calendarView").style.display = "";
            }
        }
    };

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è –ø—Ä–∏ –ø–µ—Ä–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–µ
    if (typeof renderStaticCalendar === 'function') renderStaticCalendar();
    if (typeof fetchDataAndUpdateCalendar === 'function') fetchDataAndUpdateCalendar();

    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–π
    fetchAndDisplayUpcoming();
}

/**
 * –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–π –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏—Ö –Ω–∞ –≤–∫–ª–∞–¥–∫–µ
 * ¬´–ë–ª–∏–∂–∞–π—à–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è¬ª. –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º,
 * –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ –¥–∞—Ç–µ –ø—Ä–∏—ë–º–∫–∏ –∏ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–ø–∏—Å–∫–∞. –í–∑—è—Ç–∞
 * –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π –∏–∑ schedule.js.
 * @param {boolean} showArchived - –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ª–∏ –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏
 */
function fetchAndDisplayUpcoming(showArchived = false) {
    const container = document.getElementById("upcomingList");
    if (!container) return;
    container.innerHTML = "–ó–∞–≥—Ä—É–∑–∫–∞‚Ä¶";
    // –§–æ—Ä–º–∏—Ä—É–µ–º URL —Å —É—á—ë—Ç–æ–º —Ñ–∏–ª—å—Ç—Ä–æ–≤
    let url = `schedule.php?archived=${showArchived ? 1 : 0}`;
    if (window.activeMarketplaceFilter) {
        url += `&marketplace=${encodeURIComponent(window.activeMarketplaceFilter)}`;
    }
    if (window.activeCityFilter) {
        url += `&city=${encodeURIComponent(window.activeCityFilter)}`;
    }
    if (window.activeDestinationWarehouseFilter) {
        url += `&warehouse=${encodeURIComponent(window.activeDestinationWarehouseFilter)}`;
    }
    fetch(url)
        .then(r => {
            if (!r.ok) throw new Error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: " + r.status);
            return r.json();
        })
        .then(data => {
            // –í –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –æ—Ç–≤–µ—Ç–∞—Ö backend –ª–∏–±–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤, –ª–∏–±–æ –æ–±—ä–µ–∫—Ç {schedules: []}
            const list = Array.isArray(data.schedules) ? data.schedules : data;
            if (!Array.isArray(list) || !list.length) {
                container.innerHTML = "–ù–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–π.";
                return;
            }
            const now = new Date();
            const isClient = window.userRole === 'client';
            // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è: –∏—Å–∫–ª—é—á–∞–µ–º –ø—Ä–æ—à–µ–¥—à–∏–µ –∏ –∑–∞–ø–∏—Å–∏, –ø–æ –∫–æ—Ç–æ—Ä—ã–º –∫–ª–∏–µ–Ω—Ç —É–∂–µ –Ω–µ –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É
            const filtered = list.filter(item => {
                const delivery = new Date(item.delivery_date);
                if (delivery < now) {
                    return false; // —É–∂–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏—Å—å
                }
                if (isClient) {
                    return typeof canCreateOrderForSchedule === 'function'
                        ? canCreateOrderForSchedule(item)
                        : true;
                }
                return true;
            });
            // –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ –¥–∞—Ç–µ –ø—Ä–∏—ë–º–∫–∏ (accept_date)
            const grouped = {};
            filtered.forEach(sh => {
                const d = sh.accept_date;
                if (!grouped[d]) grouped[d] = [];
                grouped[d].push(sh);
            });
            // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏ –∑–∞–ø–æ–ª–Ω—è–µ–º –±–ª–æ–∫–∞–º–∏
            container.innerHTML = "";
            Object.keys(grouped)
                .sort((a, b) => new Date(a) - new Date(b))
                .forEach(d => {
                    grouped[d].forEach(sh => {
                        const formattedDelivery = typeof formatDeliveryDate === 'function'
                            ? formatDeliveryDate(sh.delivery_date)
                            : sh.delivery_date;
                        let mpClass = '';
                        if (sh.marketplace === 'Ozon') {
                            mpClass = 'mp-ozon';
                        } else if (sh.marketplace === 'Wildberries') {
                            mpClass = 'mp-wb';
                        } else if (sh.marketplace === 'YandexMarket') {
                            mpClass = 'mp-yandex';
                        }
                        const div = document.createElement("div");
                        div.className = "upcoming-item styled-upcoming-item";
                        div.innerHTML = `
                            <div class="shipment-info">
                              <div class="shipment-header">
                                <span class="route">${sh.city || '‚Äî'} ‚Üí ${sh.warehouses || '‚Äî'}</span>
                                <span class="marketplace ${mpClass}">${sh.marketplace || ''}</span>
                              </div>
                              <div class="shipment-dates">
                                <span class="delivery-date">${formattedDelivery}</span>
                              </div>
                            </div>
                        `;
                        // –ü—Ä–∏ –∫–ª–∏–∫–µ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è
                        div.addEventListener("click", () => {
                            if (typeof openSingleShipmentModal === 'function') openSingleShipmentModal(sh);
                        });
                        container.appendChild(div);
                    });
                });
            if (!container.innerHTML.trim()) {
                container.innerHTML = "–ù–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–π –ø–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–º —É—Å–ª–æ–≤–∏—è–º.";
            }
        })
        .catch(err => {
            handleError(err, "–û—à–∏–±–∫–∞ fetchAndDisplayUpcoming");
            container.innerHTML = `–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ${err.message}`;
        });
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã —Å–¥–∞—á–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è (–¥–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–º–µ—Ä –¥–Ω—è –Ω–µ–¥–µ–ª–∏).
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ —Å–ø–∏—Å–∫–µ –±–ª–∏–∂–∞–π—à–∏—Ö –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–π. –í–∑—è—Ç–∞ –∏–∑ schedule.js.
 * @param {string} dateStr
 */
function formatDeliveryDate(dateStr) {
    if (!dateStr) return "";
    const d = new Date(dateStr);
    if (isNaN(d.getTime())) return dateStr;
    const days = ["–í—Å", "–ü–Ω", "–í—Ç", "–°—Ä", "–ß—Ç", "–ü—Ç", "–°–±"];
    const dayName = days[d.getDay()];
    const dd = String(d.getDate()).padStart(2, "0");
    const mm = String(d.getMonth() + 1).padStart(2, "0");
    const yyyy = d.getFullYear();
    return `${dd}.${mm}.${yyyy} ${dayName}`;
}

/**
 * –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞ –ø–æ –≥–æ—Ä–æ–¥—É (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ —Å–ø–∏—Å–∫–µ –≥–æ—Ä–æ–¥–æ–≤, –µ—Å–ª–∏ –µ—Å—Ç—å
 * –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è). –í–∫–ª—é—á–∞–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ç–∞–± –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫.
 * @param {string} cityName
 */
function filterByCity(cityName) {
    window.activeCityFilter = cityName;
    document.querySelectorAll(".city-tab-header .tab-button").forEach(btn => {
        btn.classList.toggle("active", btn.textContent === cityName || (cityName === "" && btn.textContent === "–í—Å–µ"));
    });
    fetchAndDisplayUpcoming(window.archiveView);
}

// –û—Ç–∫—Ä—ã—Ç–∏–µ/–∑–∞–∫—Ä—ã—Ç–∏–µ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ –º–µ–Ω—é Excel
function toggleExcelMenu() {
    const menu = document.getElementById("excelMenu");
    const arrow = document.getElementById("excelArrow");
    const btn = document.getElementById("excelDropdownBtn");

    const opened = menu.classList.toggle("show");
    arrow.innerHTML = opened ? "‚ñ≤" : "‚ñº";
    btn.classList.toggle("open", opened);
}

// –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é Excel –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
document.addEventListener("mousedown", function(e) {
    const menu = document.getElementById("excelMenu");
    const btn = document.getElementById("excelDropdownBtn");
    if (!menu || !btn) return;
    if (!menu.contains(e.target) && !btn.contains(e.target)) {
        menu.classList.remove("show");
        btn.classList.remove("open");
        const arrow = document.getElementById("excelArrow");
        if (arrow) arrow.innerHTML = "‚ñº";
    }
});

// –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –∏–º–ø–æ—Ä—Ç–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
function openImportModal() {
    const modal = document.getElementById("importScheduleModal");
    if (modal) {
        modal.style.display = "block";
    } else {
        alert("‚ùå –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∏–º–ø–æ—Ä—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.");
    }
}

// –ü–æ–∫–∞–∑ –æ—Ç—á—ë—Ç–∞ –ø–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º
function showShipmentReport() {
    const modalContent = document.getElementById("shipmentReportText");
    if (!modalContent) return;

    // –ë–ª–æ–∫ —Ñ–∏–ª—å—Ç—Ä–æ–≤
    modalContent.innerHTML = `
      <div id="shipmentReportFilters" style="display:flex;gap:18px;margin-bottom:18px;align-items:flex-end;">
        <div>
          <label style="font-weight:600;">–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å</label>
          <select id="shipmentFilterMarketplace" class="styled-filter" style="min-width:140px;"></select>
        </div>
        <div>
          <label style="font-weight:600;">–ì–æ—Ä–æ–¥</label>
          <select id="shipmentFilterCity" class="styled-filter" style="min-width:140px;"></select>
        </div>
        <div>
          <label style="font-weight:600;">–°–∫–ª–∞–¥</label>
          <select id="shipmentFilterWarehouse" class="styled-filter" style="min-width:140px;"></select>
        </div>
        <div>
          <label style="font-weight:600;">–°—Ç–∞—Ç—É—Å</label>
          <select id="shipmentFilterStatus" class="styled-filter" style="min-width:140px;">
            <option value="">–í—Å–µ</option>
            ${(window.SCHEDULE_STATUSES || []).map(s => `<option value="${s}">${s}</option>`).join('')}
          </select>
        </div>
        <div>
          <label style="font-weight:600;">–î–∞—Ç–∞</label>
          <input type="date" id="shipmentFilterDate" class="styled-filter" style="min-width:140px;">
        </div>
        <button id="shipmentFilterApplyBtn" class="primary" style="margin-left:12px;padding:12px 20px;">–ü—Ä–∏–º–µ–Ω–∏—Ç—å</button>
      </div>
      <div id="shipmentReportTable"></div>
    `;

    // –ó–∞–≥—Ä—É–∑–∫–∞ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Ñ–∏–ª—å—Ç—Ä–æ–≤
    fetch("filter_options.php?action=marketplaces")
      .then(r => r.json())
      .then(data => {
        const sel = document.getElementById("shipmentFilterMarketplace");
        if (sel) {
            sel.innerHTML = `<option value="">–í—Å–µ</option>` +
              (data.marketplaces || []).map(mp => `<option value="${mp}">${mp}</option>`).join('');
        }
      });
    fetch("filter_options.php?action=all_cities")
      .then(r => r.json())
      .then(data => {
        const sel = document.getElementById("shipmentFilterCity");
        if (sel) {
            sel.innerHTML = `<option value="">–í—Å–µ</option>` +
              (data.cities || []).map(c => `<option value="${c}">${c}</option>`).join('');
        }
      });
    fetch("filter_options.php?action=all_warehouses")
      .then(r => r.json())
      .then(data => {
        const sel = document.getElementById("shipmentFilterWarehouse");
        if (sel) {
            sel.innerHTML = `<option value="">–í—Å–µ</option>` +
              (data.warehouses || []).map(w => `<option value="${w}">${w}</option>`).join('');
        }
      });

    document.getElementById("shipmentFilterApplyBtn").onclick = reloadShipmentReport;
    reloadShipmentReport();  // –ø–µ—Ä–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –±–µ–∑ —Ñ–∏–ª—å—Ç—Ä–æ–≤
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è ‚Äî –∑–∞–≥—Ä—É–∑–∫–∞ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–π
function reloadShipmentReport() {
    const mp  = document.getElementById("shipmentFilterMarketplace")?.value || '';
    const ct  = document.getElementById("shipmentFilterCity")?.value || '';
    const wh  = document.getElementById("shipmentFilterWarehouse")?.value || '';
    const st  = document.getElementById("shipmentFilterStatus")?.value || '';
    const dt  = document.getElementById("shipmentFilterDate")?.value || '';
    let url   = "get_schedules.php";
    const params = [];
    if (mp) params.push("marketplace=" + encodeURIComponent(mp));
    if (ct) params.push("city=" + encodeURIComponent(ct));
    if (wh) params.push("warehouse=" + encodeURIComponent(wh));
    if (st) params.push("status=" + encodeURIComponent(st));
    if (dt) params.push("date=" + encodeURIComponent(dt));
    if (params.length) url += "?" + params.join("&");

    const tableBlock = document.getElementById("shipmentReportTable");
    if (!tableBlock) return;
    tableBlock.innerHTML = "–ó–∞–≥—Ä—É–∑–∫–∞‚Ä¶";

    fetch(url)
      .then(r => r.json())
      .then(data => {
        if (!Array.isArray(data)) {
            tableBlock.innerHTML = "<p>–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è</p>";
            return;
        }
        // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –¥–∞—Ç–µ (accept_date) –∏–ª–∏ –¥–µ–¥–ª–∞–π–Ω—É –ø—Ä–∏—ë–º–∫–∏, —á—Ç–æ–±—ã –≥—Ä—É–ø–ø—ã —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–ª–∏—Å—å –ø–æ –ø–æ—Ä—è–¥–∫—É
        data.sort((a, b) => {
            const dA = new Date(a.accept_deadline || a.acceptance_end || a.accept_date || 0);
            const dB = new Date(b.accept_deadline || b.acceptance_end || b.accept_date || 0);
            return dA - dB;
        });
        // –†–µ–Ω–¥–µ—Ä —Ç–∞–±–ª–∏—Ü—ã —Å –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–æ–π –ø–æ –¥–∞—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        const today = new Date().toISOString().slice(0, 10);
        let html = `
            <style>
               .shipment-table {
                    width: 100%;
                    border-collapse: collapse;
                    font-family: 'Segoe UI', 'Roboto', 'Arial', sans-serif;
                    font-size: 14px;
                    background: #fcfcfd;
                }
                .shipment-table th, .shipment-table td {
                    padding: 7px 10px;
                    border-bottom: 1px solid #e7eaf3;
                    text-align: left;
                    vertical-align: middle;
                }
                .shipment-table th {
                    background: #f5f7fa;
                    font-weight: 600;
                    color: #36435c;
                    letter-spacing: 0.03em;
                }
                .shipment-table tr:nth-child(even) {
                    background: #f8fafc;
                }
                .shipment-table tr:hover {
                    background: #eef3fa;
                    transition: background 0.2s;
                }
                .shipment-table td.route {
                    font-weight: 500;
                    color: #3b82f6;
                }
                .shipment-table td.driver {
                    color: #36435c;
                    font-weight: 500;
                }
                .shipment-table td.phone {
                    font-family: 'Menlo', 'Consolas', monospace;
                    font-size: 13px;
                    color: #2563eb;
                }
                .shipment-table td.auto {
                    color: #374151;
                    font-size: 13px;
                }
                .shipment-table td.status {
                    font-weight: bold;
                    color: #059669;
                }
                .shipment-table td.reception {
                    font-style: italic;
                    color: #6b7280;
                }
                @media print {
                    .shipment-table th, .shipment-table td {
                        padding: 4px 6px;
                        font-size: 12px;
                    }
                    body {
                        background: #fff !important;
                    }
                }
            </style>
            <table class="shipment-table">
                <thead>
                    <tr>
                        <th>–°—Ç–∞—Ç—É—Å</th>
                        <th>–î–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è</th>
                        <th>–ú–∞—Ä—à—Ä—É—Ç</th>
                        <th>–î–∞—Ç–∞ —Å–¥–∞—á–∏</th>
                        <th>–í–æ–¥–∏—Ç–µ–ª—å</th>
                        <th>–¢–µ–ª–µ—Ñ–æ–Ω</th>
                        <th>–ê–≤—Ç–æ</th>
                        <th>–ü—Ä–∏—ë–º–∫–∞</th>
                    </tr>
                </thead>
                <tbody>
        `;
        if (!data.length) {
            html += `<tr><td colspan="8" style="text-align:center;color:#bbb;">–ù–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–π –ø–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–º —É—Å–ª–æ–≤–∏—è–º</td></tr>`;
        } else {
            let currentDate = "";
            data.forEach(s => {
                // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –≥—Ä—É–ø–ø—ã (–¥–∞—Ç—ã) –ø—Ä–∏ —Å–º–µ–Ω–µ –¥–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è
                if (s.accept_date !== currentDate) {
                    currentDate = s.accept_date;
                    html += `
                        <tr class="date-group">
                            <td colspan="8" style="text-align:center; color:#36435c;">${currentDate}</td>
                        </tr>
                    `;
                }
                // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏—ë–º–∫–∏
                let reception = "‚Äî";
                if (s.status === "–ó–∞–≤–µ—Ä—à–µ–Ω–æ") {
                    reception = "–ó–∞–≤–µ—Ä—à–µ–Ω–∞";
                } else if (s.status === "–ù–∞ —Å–∫–ª–∞–¥–µ") {
                    reception = "–ó–∞–≤–µ—Ä—à–µ–Ω–∞";
                } else if (s.status === "–í –ø—É—Ç–∏") {
                    if (s.delivery_date && s.delivery_date <= today) {
                        reception = "–ü—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è";
                    } else {
                        reception = "–û–∂–∏–¥–∞–µ—Ç—Å—è";
                    }
                } else {
                    reception = "–û–∂–∏–¥–∞–µ—Ç—Å—è";
                }
                html += `
                    <tr>
                        <td class="status">${s.status || ''}</td>
                        <td>${s.accept_date || ''}</td>
                        <td class="route">${s.city || '‚Äî'} ‚Üí ${s.warehouses || '‚Äî'}</td>
                        <td>${s.delivery_date || '‚Äî'}</td>
                        <td class="driver">${s.driver_name || '‚Äî'}</td>
                        <td class="phone">${s.driver_phone || '‚Äî'}</td>
                        <td class="auto">${s.car_brand || '‚Äî'} ${s.car_number || '‚Äî'}</td>
                        <td class="reception">${reception}</td>
                    </tr>
                `;
            });
        }
        html += `</tbody></table>`;
        tableBlock.innerHTML = html;
      });
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –≥–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç window, —á—Ç–æ–±—ã –æ–Ω–∏
// –±—ã–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö –±–µ–∑ —Å–∏—Å—Ç–µ–º —Å–±–æ—Ä–∫–∏
window.loadSchedule = loadSchedule;
window.fetchAndDisplayUpcoming = fetchAndDisplayUpcoming;
window.formatDeliveryDate = formatDeliveryDate;
window.filterByCity = filterByCity;
window.toggleExcelMenu = toggleExcelMenu;
window.openImportModal = openImportModal;
window.showShipmentReport = showShipmentReport;
window.reloadShipmentReport = reloadShipmentReport;