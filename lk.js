/*******************************************
 * –°–∫—Ä–∏–ø—Ç—ã –¥–ª—è –õ–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞ (–∑–∞–∫–∞–∑—ã)
 *******************************************/

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è, –µ—Å–ª–∏ –Ω—É–∂–Ω–∞
let selectedScheduleId = null;

/**
 * –§–£–ù–ö–¶–ò–Ø: —Ä–µ–Ω–¥–µ—Ä–∏—Ç –≤—Å–µ –∑–∞–∫–∞–∑—ã –≤ –≤–∏–¥–µ –∫–∞—Ä—Ç–æ—á–µ–∫.
 * –ó–ê–ú–ï–ù–ê —Å—Ç–∞—Ä–æ–≥–æ renderOrderCards() –Ω–∞ –Ω–æ–≤—ã–π (–∞–¥–∞–ø—Ç–∏–≤–Ω—ã–π .order-card).
 */
function renderOrderCards(orders, userRole) {
    let html = '';

    for (const order of orders) {
        if (order.status === '–£–¥–∞–ª—ë–Ω –∫–ª–∏–µ–Ω—Ç–æ–º' || order.is_deleted) {
            html += `<div class="order-card"><div class="order-info-line">–ó–∞–∫–∞–∑ #${order.order_id} —É–¥–∞–ª—ë–Ω</div></div>`;
            continue;
        }
        html += createOrderCardHtml(order, userRole);
    }

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≥–æ—Ç–æ–≤—ã–π HTML –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    // –ü–æ—Å–ª–µ –≤—Å—Ç–∞–≤–∫–∏ –≤—ã–∑–æ–≤–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –º–∏–Ω–∏-QR
    setTimeout(() => {
        for (const order of orders) {
            // –ö–∞–∫ –∏ –ø—Ä–µ–∂–¥–µ, —Ç–æ–ª—å–∫–æ –∫–ª–∏–µ–Ω—Ç—É –ø–æ–∫–∞–∑—ã–≤–∞–µ–º QR (–µ—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –Ω–µ "–ó–∞–≤–µ—Ä—à–µ–Ω–æ")
            if (userRole === 'client' && order.qr_code && order.status !== '–ó–∞–≤–µ—Ä—à–µ–Ω–æ') {
                const qrElement = document.getElementById(`orderQr_${order.order_id}`);
                if (qrElement) {
                    new QRCode(qrElement, {
                        text: order.qr_code,
                        width: 80,
                        height: 80
                    });
                }
            }
        }
    }, 50);

    return html;
}

/**
 * –°–æ–∑–¥–∞—ë—Ç HTML –¥–ª—è –æ–¥–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏ –∑–∞–∫–∞–∑–∞.
 * –í–∫–ª—é—á–∞–µ—Ç –∞–¥–∞–ø—Ç–∏–≤–Ω—É—é –≤—ë—Ä—Å—Ç–∫—É, –±–ª–æ–∫ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π, –∫–Ω–æ–ø–∫–∏ —Å—Ç–∞—Ç—É—Å–∞, QR-–∫–æ–¥, –∫–æ–ª–ª–∞–ø—Å–∏—Ä—É–µ–º–æ–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ.
 */
 function createOrderCardHtml(order, userRole) {
    const orderId = order.order_id;
    const status = order.status || '‚Äî';
    const schedule = order.schedule || {};
    const warehouse = schedule.warehouses || '‚Äî';
    const deadline = schedule.accept_deadline || order.order_date || '‚Äî';
    const delivery = schedule.delivery_date || '‚Äî';
    const requestedAt = order.requested_at || '‚Äî';
    const acceptTime = order.accept_time || '‚Äî';
    const company = order.company_name || '‚Äî';
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —É–ø–∞–∫–æ–≤–∫–∏ –∏ –ø–µ—Ä–µ–≤–æ–¥–∏–º –Ω–∞ —Ä—É—Å—Å–∫–∏–π (–µ—Å–ª–∏ –ø—Ä–∏–º–µ–Ω–∏–º–æ)
    let type = order.packaging_type || '‚Äî';
    if (type === 'Box') type = '–ö–æ—Ä–æ–±–∫–∞';
    if (type === 'Pallet') type = '–ü–∞–ª–ª–µ—Ç–∞';
    const statusControlHtml = getStatusControlHtml(order, userRole);
    const canEdit = canEditOrder(order, userRole);
    const canDelete = (
        userRole === 'admin' ||
        userRole === 'manager' ||
        (userRole === 'client' && order.status === '–í—ã–≥—Ä—É–∑–∏—Ç–µ —Ç–æ–≤–∞—Ä')
    );
    const showQr = (userRole === 'client' && order.qr_code && status !== '–ó–∞–≤–µ—Ä—à–µ–Ω–æ');
    const photoPaths = order.reception?.photo_path || [];
    const hasPhotos = Array.isArray(photoPaths) && photoPaths.length > 0;
    const firstPhoto = hasPhotos ? photoPaths[0] : null;

    return `
    <div class="order-card" onclick="handleOrderCardClick(event, ${orderId});">
      <div class="order-card-header">
        <span class="order-id">–ó–∞–∫–∞–∑ #${orderId}</span>
        <div class="order-actions">
          ${canEdit ? `<button class="edit-btn" title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å" onclick="onEditClick(event, ${orderId})">&#9998;</button>` : ''}
          ${canDelete ? `<button class="delete-btn" title="–£–¥–∞–ª–∏—Ç—å" onclick="onDeleteClick(event, ${orderId})">&#128465;</button>` : ''}
        </div>
      </div>
      <div class="order-card-body">
        <div class="order-info-block">
          <div class="order-info-line"><strong>–°—Ç–∞—Ç—É—Å:</strong> ${status}</div>
          <div class="order-info-line"><strong>–¢–∏–ø:</strong> ${type}</div>
          <div class="order-info-line"><strong>–ò–ü:</strong> ${company}</div>
          <div class="order-info-line"><strong>–ü—Ä–∏—ë–º–∫–∞ –¥–æ:</strong> ${deadline}</div>
          <div class="order-info-line"><strong>–°–∫–ª–∞–¥:</strong> ${warehouse}</div>
          <div class="order-info-line"><strong>–°–¥–∞—á–∞:</strong> ${delivery}</div>
          <div class="order-info-line"><strong>–ó–∞–ø—Ä–æ—Å:</strong> ${requestedAt}</div>
          <div class="order-info-line"><strong>–ü—Ä–∏—ë–º–∫–∞:</strong> ${acceptTime}</div>
          <div class="order-status-block">${statusControlHtml}</div>
        </div>
        ${hasPhotos ? `
          <div class="order-photo-preview">
            <img src="${firstPhoto}" alt="–§–æ—Ç–æ –ø—Ä–∏—ë–º–∫–∏" style="max-width:100px; max-height:100px; margin-top:10px; border:1px solid #ccc; border-radius:6px;">
          </div>
        ` : ''}
        ${showQr ? `
          <div class="order-qr-wrapper" style="text-align:center; margin-top:10px;">
            <div id="orderQr_${orderId}" class="order-qr" title="–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã —É–≤–µ–ª–∏—á–∏—Ç—å QR" onclick="showFullQr('${order.qr_code}')"></div>
            <button onclick="event.stopPropagation(); openQrPdfModal('${order.qr_code}', ${orderId})" style="margin-top:10px; font-size:15px; font-weight:600; padding:6px 12px; max-width:140px; white-space:normal; line-height:1.3; word-break:break-word;">
              üì• –°–∫–∞—á–∞—Ç—å<br>QR (PDF)
            </button>
            <div style="margin-top:8px; font-size:14px; color:#B80000; font-weight:700; white-space:normal; max-width:140px; text-align:center; margin-inline:auto;">
              –ü—Ä–∏–∫–ª–µ–π—Ç–µ<br>–Ω–∞ –ü–ï–†–í–´–ô –ö–û–†–û–ë
            </div>
          </div>
        ` : ''}
      </div>
      <div id="editForm_${orderId}" class="edit-form-container">
        <h4>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞ #${orderId}</h4>
        <label>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</label>
        <textarea id="editComment_${orderId}" rows="3">${order.comment || ''}</textarea><br>
        <button onclick="saveOrderEdits(${orderId})">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
        <button onclick="cancelOrderEdits(${orderId})">–û—Ç–º–µ–Ω–∞</button>
      </div>
    </div>
    `;
}





function openQrPdfModal(qrText, orderId) {
    const overlay = document.createElement('div');
    overlay.className = 'modal-overlay';
    overlay.style.cssText = `
        position: fixed; inset: 0;
        background: rgba(0, 0, 0, 0.5);
        display: flex; align-items: center; justify-content: center;
        z-index: 9999;
    `;

    const modalHTML = document.createElement('div');
    modalHTML.style.cssText = `
        position: relative;
        background: #fff;
        padding: 20px 24px;
        border-radius: 12px;
        box-shadow: 0 4px 16px rgba(0,0,0,0.2);
        width: 320px;
        text-align: center;
        font-family: sans-serif;
    `;
    modalHTML.innerHTML = `
        <button onclick="this.parentElement.parentElement.remove()" style="
            position: absolute;
            top: 10px; right: 12px;
            background: none;
            border: none;
            font-size: 20px;
            cursor: pointer;
            color: #666;
        ">‚úñ</button>
        <h2 style="font-size: 18px; margin-bottom: 12px;">üì¶ –ó–∞–∫–∞–∑ #${orderId}</h2>
        <div id="modalQrCode" style="margin: 0 auto 12px auto;"></div>
        <button onclick="downloadQrAsPdf('${qrText}', ${orderId})" style="
            padding: 8px 16px;
            font-size: 14px;
            background: #3f51b5;
            color: #fff;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            margin-bottom: 10px;
        ">üì• –°–∫–∞—á–∞—Ç—å PDF</button>
    `;

    overlay.appendChild(modalHTML);

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –º–æ–¥–∞–ª–∫–∏
    overlay.addEventListener('click', function (e) {
        if (!modalHTML.contains(e.target)) {
            overlay.remove();
        }
    });

    document.body.appendChild(overlay);
    new QRCode(document.getElementById('modalQrCode'), {
        text: qrText,
        width: 160,
        height: 160
    });
}



function downloadQrAsPdf(qrText, orderId) {
    const qrElement = document.querySelector('#modalQrCode canvas');
    if (!qrElement) return alert("QR –Ω–µ –Ω–∞–π–¥–µ–Ω");

    const imgData = qrElement.toDataURL("image/png");
    const docDefinition = {
        pageSize: { width: 200, height: 200 },
        pageMargins: [10, 10, 10, 10],
        content: [
            { image: imgData, width: 180, alignment: 'center' }
        ]
    };
    pdfMake.createPdf(docDefinition).download(`QR_–∑–∞–∫–∞–∑_${orderId}.pdf`);
}



/**
 * –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –º–æ–∂–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–∫–∞–∑
 * (–ª–æ–≥–∏–∫–∞ ‚Äî –ø—Ä–∏–º–µ—Ä: –∫–ª–∏–µ–Ω—Ç, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å—Ç–∞—Ç—É—Å == "–í—ã–≥—Ä—É–∑–∏—Ç–µ —Ç–æ–≤–∞—Ä", –∏–Ω–∞—á–µ admin/manager –≤—Å–µ–≥–¥–∞)
 */
function canEditOrder(order, userRole) {
    return (userRole === 'admin' || userRole === 'manager');
}


/**
 * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è HTML –¥–ª—è —Å–º–µ–Ω—ã —Å—Ç–∞—Ç—É—Å–∞ (admin/manager/client)
 */
function getStatusControlHtml(order, userRole) {
    const orderId = order.order_id;
    const status = order.status || '‚Äî';

    if (userRole === 'admin') {
        const allStatuses = [
            "–í—ã–≥—Ä—É–∑–∏—Ç–µ —Ç–æ–≤–∞—Ä",
            "–¢–æ–≤–∞—Ä –≤—ã–≥—Ä—É–∂–µ–Ω",
            "–ì–æ—Ç–æ–≤ –∫ –æ–±—Ä–∞–±–æ—Ç–∫–µ",
            "–í –æ–±—Ä–∞–±–æ—Ç–∫–µ",
            "–ì–æ—Ç–æ–≤ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ",
            "–¢–æ–≤–∞—Ä –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω",
            "–ó–∞–≤–µ—Ä—à–µ–Ω–æ"
        ];
        let options = '';
        for (const st of allStatuses) {
            const sel = (st === status) ? 'selected' : '';
            options += `<option value="${st}" ${sel}>${st}</option>`;
        }
        return `
          <span>–ò–∑–º.—Å—Ç–∞—Ç—É—Å:</span>
          <select class="order-status-select" onchange="adminChangeStatus(event, ${orderId})">
            ${options}
          </select>
        `;
    } else if (userRole === 'manager') {
        if (status === '–¢–æ–≤–∞—Ä –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω' || status === '–ó–∞–≤–µ—Ä—à–µ–Ω–æ') {
            return `<span>–ó–∞–∫–∞–∑ –∑–∞–≤–µ—Ä—à—ë–Ω –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω</span>`;
        } else {
            return `<button class="btn-status" onclick="managerNextStatus(event, ${orderId})">–°–ª–µ–¥—É—é—â–∏–π —ç—Ç–∞–ø</button>`;
        }
    } else if (userRole === 'client') {
        return `<span>${status}</span>`; // ‚úÖ –¢–æ–ª—å–∫–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –±–µ–∑ –∫–Ω–æ–ø–∫–∏
    }

    return `<span>${status}</span>`; // fallback
}


/* ===========================
   –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –ö–ê–†–¢–û–ß–ö–ò
=========================== */

/**
 * –ö–ª–∏–∫ –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫—É (–Ω–µ –Ω–∞ –∫–Ω–æ–ø–∫–∏)
 */
function handleOrderCardClick(e, orderId) {
    // –ï—Å–ª–∏ –∫–ª–∏–∫ –ø–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é ‚Äî –ø—Ä–µ—Ä—ã–≤–∞–µ–º
    if (
        e.target.closest('.edit-btn') ||
        e.target.closest('.delete-btn') ||
        e.target.closest('.btn-status') ||
        e.target.closest('.order-status-select') ||
        e.target.closest('.order-qr')
    ) {
        return;
    }
    // –ò–Ω–∞—á–µ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏
    showOrderDetails(orderId);
}

/**
 * –ù–∞–∂–∞—Ç–∏–µ "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å"
 */
function onEditClick(e, orderId) {
    e.stopPropagation();
    const form = document.getElementById(`editForm_${orderId}`);
    if (!form) return;
    form.classList.toggle('active');
}

/**
 * –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π (–ø—Ä–∏–º–µ—Ä)
 */
function saveOrderEdits(orderId) {
    const commentEl = document.getElementById(`editComment_${orderId}`);
    const boxesEl = document.getElementById(`editBoxes_${orderId}`);
    if (!commentEl) return;

    const newComment = commentEl.value.trim();
    const payload = {
        order_id: orderId,
        comment: newComment
    };

    if (boxesEl) {
        const boxesValue = parseInt(boxesEl.value);
        if (!isNaN(boxesValue) && boxesValue > 0) {
            payload.boxes = boxesValue;
        }
    }

    fetch('/admin/api/edit_order.php', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(payload)
    })
    .then(r => r.json())
    .then(data => {
        if (data.success) {
            alert("‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã");
            document.getElementById(`editForm_${orderId}`).classList.remove('active');
            loadOrders(); // –æ–±–Ω–æ–≤–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫–∏
        } else {
            alert("‚ùå –û—à–∏–±–∫–∞: " + data.message);
        }
    })
    .catch(err => {
        alert("–û—à–∏–±–∫–∞ —Å–µ—Ç–∏: " + err.message);
    });
}




function downloadExistingQrImage(elementId, filename) {
    const img = document.querySelector(`#${elementId} img`);
    if (!img || !img.src.startsWith("data:image")) {
        alert("QR –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –≥–æ—Ç–æ–≤");
        return;
    }

    const link = document.createElement('a');
    link.href = img.src;
    link.download = filename;
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
}

/**
 * –û—Ç–º–µ–Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
 */
function cancelOrderEdits(orderId) {
    const form = document.getElementById(`editForm_${orderId}`);
    if (form) form.classList.remove('active');
}

/**
 * –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ (–∫–Ω–æ–ø–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã)
 */
function onDeleteClick(e, orderId) {
    e.stopPropagation();
    if (!confirm(`–£–¥–∞–ª–∏—Ç—å –∑–∞–∫–∞–∑ #${orderId}?`)) return;
    deleteOrder(orderId);
}

/* ===========================
   –£–ü–†–ê–í–õ–ï–ù–ò–ï –°–¢–ê–¢–£–°–ê–ú–ò –ü–û –†–û–õ–Ø–ú
=========================== */

/** –ê–¥–º–∏–Ω: —Å–º–µ–Ω–∞ —Å—Ç–∞—Ç—É—Å–∞ —á–µ—Ä–µ–∑ select */
function adminChangeStatus(e, orderId) {
    const newStatus = e.target.value;
    updateOrderStatus(orderId, newStatus);
}

/** –ú–µ–Ω–µ–¥–∂–µ—Ä: \"–°–ª–µ–¥—É—é—â–∏–π —ç—Ç–∞–ø\" */
function managerNextStatus(e, orderId) {
    e.stopPropagation();
    nextOrderStatus(orderId);
}

/** –ö–ª–∏–µ–Ω—Ç: –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç \"–¢–æ–≤–∞—Ä –≤—ã–≥—Ä—É–∂–µ–Ω\" */
function clientConfirmUpload(e, orderId) {
    e.stopPropagation();
    updateOrderStatus(orderId, '–¢–æ–≤–∞—Ä –≤—ã–≥—Ä—É–∂–µ–Ω');
}


/* =================================================================
   –ù–ò–ñ–ï –ò–î–£–¢ –í–°–ï –í–ê–®–ò –°–¢–ê–†–´–ï –§–£–ù–ö–¶–ò–ò –ö–ê–ö –ï–°–¢–¨
   (loadOrders, loadAllOrders, filterOrders, showOrderDetails, –∏ —Ç.–¥.)
   –ú—ã –ª–∏—à—å —É–¥–∞–ª–∏–ª–∏/–∑–∞–º–µ–Ω–∏–ª–∏ —Å—Ç–∞—Ä—É—é —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é renderOrderCards()
   ================================================================= */

/**
 * –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–∫–∞–∑–æ–≤ –∫–ª–∏–µ–Ω—Ç–∞ (—Å –≤–∫–ª–∞–¥–∫–∞–º–∏ –ü—Ä–∏—ë–º–∫–∞ / –û–±—Ä–∞–±–æ—Ç–∫–∞).
 * @param {string} type - 'reception' –∏–ª–∏ 'processing'
 */
async function loadOrders(type = "reception") {
    const dynamicContent = document.getElementById("dynamicContent");
    if (!dynamicContent) return;

    // –û—Å—Ç–∞–≤–ª—è–µ–º –∏—Å—Ö–æ–¥–Ω—É—é —Ä–∞–∑–º–µ—Ç–∫—É –≤–∫–ª–∞–¥–æ–∫ –∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
    dynamicContent.innerHTML = `
        <h2>–ú–æ–∏ –∑–∞–∫–∞–∑—ã</h2>
        <div class="orders-tabs">
            <button onclick="loadOrders('reception')" class="${type === 'reception' ? 'active' : ''}">–ü—Ä–∏—ë–º–∫–∞</button>
            <button onclick="loadOrders('processing')" class="${type === 'processing' ? 'active' : ''}">–û–±—Ä–∞–±–æ—Ç–∫–∞</button>
        </div>
        <p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>
    `;

    try {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –∑–∞–∫–∞–∑—ã —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (all=0) –∏–ª–∏ –≤—Å–µ –∑–∞–∫–∞–∑—ã (all=1) –¥–ª—è admin/manager
        const url = `/admin/api/get_orders.php?all=${(userRole === 'admin' || userRole === 'manager') ? '1' : '0'}`;
        const response = await fetch(url);
        if (!response.ok) throw new Error(`–û—à–∏–±–∫–∞ HTTP: ${response.status}`);

        const result = await response.json();
        if (!result.success) {
            dynamicContent.innerHTML += `<p>–û—à–∏–±–∫–∞: ${result.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}</p>`;
            return;
        }

        const allOrders = result.orders || [];

        // –§–∏–ª—å—Ç—Ä—É–µ–º –∑–∞–∫–∞–∑—ã –ø–æ –≤–∫–ª–∞–¥–∫–µ:
        // - –¥–ª—è –ü—Ä–∏—ë–º–∫–∏: shipment_type = 'reception' –ò–õ–ò packaging_type = 'Box'/'Pallet' –ò–õ–ò –ø—É—Å—Ç–æ–π shipment_type
        // - –¥–ª—è –û–±—Ä–∞–±–æ—Ç–∫–∏: shipment_type = 'processing'
        let orders;
        if (type === 'processing') {
            orders = allOrders.filter(o => o.shipment_type === 'processing');
        } else {
            orders = allOrders.filter(o =>
                o.shipment_type === 'reception' ||
                o.packaging_type === 'Box' ||
                o.packaging_type === 'Pallet' ||
                !o.shipment_type
            );
        }

        // –†–∞–∑–¥–µ–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∏ –∞—Ä—Ö–∏–≤–Ω—ã–µ
        const activeOrders  = orders.filter(o => o.status !== '–¢–æ–≤–∞—Ä –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω');
        const archiveOrders = orders.filter(o => o.status === '–¢–æ–≤–∞—Ä –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω');

        // –§–æ—Ä–º–∏—Ä—É–µ–º HTML (–æ—Å—Ç–∞–≤–ª—è–µ–º –ø—Ä–µ–∂–Ω–∏–µ —Å—Ç–∏–ª–∏/–∫–ª–∞—Å—Å—ã)
        let html = '<h2>–ú–æ–∏ –∑–∞–∫–∞–∑—ã</h2>';
        html += `
            <div class="orders-tabs">
                <button onclick="loadOrders('reception')" class="${type === 'reception' ? 'active' : ''}">–ü—Ä–∏—ë–º–∫–∞</button>
                <button onclick="loadOrders('processing')" class="${type === 'processing' ? 'active' : ''}">–û–±—Ä–∞–±–æ—Ç–∫–∞</button>
            </div>
        `;

        if (activeOrders.length > 0) {
            html += '<h3>–ê–∫—Ç–∏–≤–Ω—ã–µ</h3>';
            html += renderOrderCards(activeOrders, userRole);
        } else {
            html += '<p>–ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –Ω–µ—Ç.</p>';
        }

        if (archiveOrders.length > 0) {
            html += '<h3>–ê—Ä—Ö–∏–≤</h3>';
            html += renderOrderCards(archiveOrders, userRole);
        }

        dynamicContent.innerHTML = html;
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ loadOrders:", error);
        dynamicContent.innerHTML = `<p>–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∑–∞–∫–∞–∑–æ–≤: ${error.message}</p>`;
    }
}



/**
 * –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤ (–¥–ª—è admin/manager)
 */
async function loadAllOrders() {
    console.log("loadAllOrders –≤—ã–∑–≤–∞–Ω–∞");
    const dynamicContent = document.getElementById("dynamicContent");
    dynamicContent.innerHTML = `
        <h2>–í—Å–µ –∑–∞–∫–∞–∑—ã</h2>
        <select id="statusFilter" onchange="filterOrders()">
            <option value="">–í—Å–µ —Å—Ç–∞—Ç—É—Å—ã</option>
            <option value="–í—ã–≥—Ä—É–∑–∏—Ç–µ —Ç–æ–≤–∞—Ä">–í—ã–≥—Ä—É–∑–∏—Ç–µ —Ç–æ–≤–∞—Ä</option>
            <option value="–¢–æ–≤–∞—Ä –≤—ã–≥—Ä—É–∂–µ–Ω">–¢–æ–≤–∞—Ä –≤—ã–≥—Ä—É–∂–µ–Ω</option>
            <option value="–ì–æ—Ç–æ–≤ –∫ –æ–±—Ä–∞–±–æ—Ç–∫–µ">–ì–æ—Ç–æ–≤ –∫ –æ–±—Ä–∞–±–æ—Ç–∫–µ</option>
            <option value="–í –æ–±—Ä–∞–±–æ—Ç–∫–µ">–í –æ–±—Ä–∞–±–æ—Ç–∫–µ</option>
            <option value="–ì–æ—Ç–æ–≤ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ">–ì–æ—Ç–æ–≤ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ</option>
            <option value="–¢–æ–≤–∞—Ä –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω">–¢–æ–≤–∞—Ä –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω</option>
        </select>
        <div id="ordersContainer"><p>–ó–∞–≥—Ä—É–∑–∫–∞...</p></div>
    `;
    await filterOrders();
}

async function filterOrders() {
    const statusFilter = document.getElementById('statusFilter').value;
    const url = statusFilter === ""
        ? '/admin/api/get_orders.php?all=1'
        : `/admin/api/get_orders.php?all=1&status=${encodeURIComponent(statusFilter)}`;

    try {
        const response = await fetch(url);
        if (!response.ok) throw new Error('HTTP error: ' + response.status);
        const result = await response.json();
        console.log("–û—Ç–≤–µ—Ç /admin/api/get_orders.php (—Ñ–∏–ª—å—Ç—Ä):", result);

        if (!result.success) {
            document.getElementById('ordersContainer').innerHTML =
                '<p>–û—à–∏–±–∫–∞: ' + (result.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞') + '</p>';
            return;
        }

        const orders = result.orders;
        if (!orders || orders.length === 0) {
            document.getElementById('ordersContainer').innerHTML = '<p>–ó–∞–∫–∞–∑–æ–≤ –Ω–µ—Ç.</p>';
            return;
        }

        document.getElementById('ordersContainer').innerHTML =
            renderOrderCards(orders, userRole);

    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ filterOrders:", error);
        document.getElementById('ordersContainer').innerHTML =
            '<p>–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∑–∞–∫–∞–∑–æ–≤: ' + error.message + '</p>';
    }
}


/**
 * –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è) –∏ —Ç.–¥.
 */
function loadEditData() {
    const container = document.getElementById("dynamicContent");
    container.innerHTML = "<h2>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö</h2><p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>";

    fetch("/admin/api/fetch_user_data.php")
        .then(r => r.json())
        .then(data => {
            if (!data.success) {
                container.innerHTML = "<p>–û—à–∏–±–∫–∞: " + data.message + "</p>";
                return;
            }
            const u = data.data;
            container.innerHTML = `
                <h2>–ú–æ–∏ –¥–∞–Ω–Ω—ã–µ</h2>
                <div class="edit-block">
                    ${renderEditRow("–§–∞–º–∏–ª–∏—è", "last_name", u.last_name || '')}
                    ${renderEditRow("–ò–º—è", "first_name", u.first_name || '')}
                    ${renderEditRow("–û—Ç—á–µ—Å—Ç–≤–æ", "middle_name", u.middle_name || '')}
                    ${renderEditRow("–¢–µ–ª–µ—Ñ–æ–Ω", "phone", u.phone || '')}
                    ${renderEditRow("–ù–∞–∑–≤–∞–Ω–∏–µ –ò–ü", "company_name", u.company_name || '')}
                    ${renderEditRow("–ù–∞–∑–≤–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞", "store_name", u.store_name || '')}
                    <button onclick="saveEditedUserData()">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤—Å–µ</button>
                    <p id="editStatus"></p>
                </div>
            `;
        })
        .catch(err => {
            container.innerHTML = "<p>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: " + err.message + "</p>";
        });
}

function renderEditRow(label, field, value) {
    return `
        <div class="edit-field">
            <label>${label}:</label>
            <div class="edit-field-row">
                <span id="${field}_view">${value}</span>
                <input type="text" id="${field}_input" value="${value}" style="display: none;">
                <button type="button" onclick="toggleEditField('${field}')">–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
            </div>
        </div>
    `;
}

function toggleEditField(field) {
    const view = document.getElementById(`${field}_view`);
    const input = document.getElementById(`${field}_input`);
    const button = input.nextElementSibling;

    if (view.style.display === 'none') {
        view.textContent = input.value;
        view.style.display = 'inline';
        input.style.display = 'none';
        button.textContent = '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å';
    } else {
        input.style.display = 'inline';
        view.style.display = 'none';
        input.focus();
        button.textContent = '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å';
    }
}

function saveEditedUserData() {
    const fields = ['first_name', 'last_name', 'middle_name', 'phone', 'company_name', 'store_name'];
    const payload = {};
    fields.forEach(f => {
        payload[f] = document.getElementById(`${f}_input`).value.trim();
    });

    fetch("/admin/api/update_user_data.php", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(payload)
    })
        .then(r => r.json())
        .then(data => {
            const status = document.getElementById("editStatus");
            if (data.success) {
                status.textContent = "‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã";
                status.style.color = "green";
            } else {
                status.textContent = "–û—à–∏–±–∫–∞: " + data.message;
                status.style.color = "red";
            }
        })
        .catch(err => {
            document.getElementById("editStatus").textContent = "–û—à–∏–±–∫–∞: " + err.message;
        });
}

function showFullQr(qrText) {
    const overlay = document.createElement('div');
    overlay.className = 'modal-overlay';
    overlay.innerHTML = `
        <div class="modal-content" onclick="event.stopPropagation()">
            <div class="modal-header">
                <h2>üì± –ü–æ–∫–∞–∂–∏—Ç–µ —ç—Ç–æ—Ç QR –º–µ–Ω–µ–¥–∂–µ—Ä—É</h2>
                <button class="close-button" onclick="this.closest('.modal-overlay').remove()">√ó</button>
            </div>
            <div class="modal-body" style="text-align:center;">
                <div id="fullQrCode"></div>
            </div>
        </div>
    `;
    document.body.appendChild(overlay);

    new QRCode(document.getElementById('fullQrCode'), {
        text: qrText,
        width: 250,
        height: 250
    });

    overlay.addEventListener('click', function(event) {
        if (!event.target.closest('.modal-content')) {
            overlay.remove();
        }
    });
}

function submitEditUserData(e) {
    e.preventDefault();
    const form = e.target;
    const formData = new FormData(form);
    const payload = {};
    formData.forEach((val, key) => payload[key] = val);

    fetch("/admin/api/update_user_data.php", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(payload)
    })
        .then(r => r.json())
        .then(data => {
            const status = document.getElementById("editStatus");
            if (data.success) {
                status.textContent = "‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã";
                status.style.color = "green";
            } else {
                status.textContent = "–û—à–∏–±–∫–∞: " + data.message;
                status.style.color = "red";
            }
        })
        .catch(err => {
            document.getElementById("editStatus").textContent = "–û—à–∏–±–∫–∞: " + err.message;
        });
}

/**
 * –ü–æ–∫–∞–∑ –¥–µ—Ç–∞–ª–µ–π –∑–∞–∫–∞–∑–∞
 */
function showOrderDetails(orderId) {
    document.querySelectorAll('.modal-overlay').forEach(m => m.remove());
    fetch(`/admin/api/get_orders.php?order_id=${orderId}&all=${userRole === 'client' ? '0' : '1'}`)
        .then(res => res.json())
        .then(data => {
            if (!data.success || !data.orders?.length) {
                alert('–û—à–∏–±–∫–∞: ' + data.message);
                return;
            }
            const order = data.orders[0];
            const rec = order.reception || {};
            const s = order.schedule || {};
            const client = order.client_info || {};
            const typeMap = { reception: '–ü—Ä–∏—ë–º–∫–∞', processing: '–û–±—Ä–∞–±–æ—Ç–∫–∞' };
            const packMap = { Box: '–ö–æ—Ä–æ–±–∫–∞', Pallet: '–ü–∞–ª–ª–µ—Ç–∞', Envelope: '–ö–æ–Ω–≤–µ—Ä—Ç' };
            const photos = Array.isArray(rec.photo_path) ? rec.photo_path : [];

            const modal = document.createElement('div');
            modal.className = 'modal-overlay';
            modal.innerHTML = `
<div class="modal-content" onclick="event.stopPropagation()">
  <div class="modal-header" style="display: flex; justify-content: space-between; align-items: center;">
    <h2 style="margin: 0;">–ó–∞–∫–∞–∑ ‚Ññ${order.order_id}</h2>
    <button class="close-button" style="font-size: 24px; background: none; border: none; cursor: pointer; color: #888;"
      onclick="this.closest('.modal-overlay').remove()">√ó</button>
  </div>
  <div class="modal-body accordion-view">
    <details open>
      <summary>üì¶ –û—Å–Ω–æ–≤–Ω–æ–µ</summary>
      <div class="info-content">
        <div><strong>–¢–∏–ø –∑–∞—è–≤–∫–∏:</strong> ${typeMap[order.shipment_type] || order.shipment_type}</div>
        <div><strong>–î–∞—Ç–∞:</strong> ${order.order_date || '‚Äî'}</div>
        <div><strong>–°—Ç–∞—Ç—É—Å:</strong> ${order.status || '‚Äî'}</div>
        <div><strong>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</strong> ${order.comment || '‚Äî'}</div>
        <div><strong>–ó–∞–ø—Ä–æ—Å:</strong> ${order.requested_at || '‚Äî'}</div>
        <div><strong>–ü—Ä–∏—ë–º–∫–∞:</strong> ${order.accept_time || '‚Äî'}</div>
      </div>
    </details>
    <details>
      <summary>üöö –û—Ç–ø—Ä–∞–≤–∫–∞</summary>
      <div class="info-content">
        <div><strong>–ì–æ—Ä–æ–¥:</strong> ${s.city || '‚Äî'}</div>
        <div><strong>–°–∫–ª–∞–¥—ã:</strong> ${s.warehouses || '‚Äî'}</div>
        <div><strong>–î–∞—Ç–∞ –ø—Ä–∏—ë–º–∫–∏:</strong> ${s.accept_date || '‚Äî'}</div>
        <div><strong>–î–∞—Ç–∞ —Å–¥–∞—á–∏:</strong> ${s.delivery_date || '‚Äî'}</div>
        <div><strong>–í–æ–¥–∏—Ç–µ–ª—å:</strong> ${s.driver_name || '‚Äî'}</div>
        <div><strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> ${s.driver_phone || '‚Äî'}</div>
        <div><strong>–ê–≤—Ç–æ:</strong> ${s.car_brand || ''} ${s.car_number || ''}</div>
      </div>
    </details>
    <details>
      <summary>üí≥ –£–ø–∞–∫–æ–≤–∫–∞ –∏ –æ–ø–ª–∞—Ç–∞</summary>
      <div class="info-content">
        <div><strong>–¢–∏–ø —É–ø–∞–∫–æ–≤–∫–∏:</strong> ${packMap[rec.packaging_type] || rec.packaging_type}</div>
        <div><strong>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:</strong> ${rec.boxes || 0} —à—Ç.</div>
        <div><strong>–û–ø–ª–∞—Ç–∞:</strong> ${rec.payment || 0} ‚ÇΩ (${rec.payment_type || '‚Äî'})</div>
      </div>
    </details>
    <details>
      <summary>üë§ –ö–ª–∏–µ–Ω—Ç</summary>
      <div class="info-content">
        <div><strong>–§–ò–û:</strong> ${client.last_name || ''} ${client.first_name || ''}</div>
        <div><strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> ${client.phone || '‚Äî'}</div>
        <div><strong>–ò–ü:</strong> ${order.company_name || '‚Äî'}</div>
        <div><strong>–ú–∞–≥–∞–∑–∏–Ω:</strong> ${order.store_name || '‚Äî'}</div>
      </div>
    </details>
    <details>
      <summary>üñº –§–æ—Ç–æ –ø—Ä–∏—ë–º–∫–∏</summary>
      <div class="info-content">
        <div class="thumbnails" id="galleryThumbs"></div>
        <div class="main-image" style="position: relative;">
          <button id="prevPhoto" class="photo-nav">‚óÄ</button>
          <img id="mainImage" src="" style="display:none;" alt="–§–æ—Ç–æ –ø—Ä–∏—ë–º–∫–∏">
          <button id="nextPhoto" class="photo-nav">‚ñ∂</button>
        </div>
      </div>
    </details>
  </div>
</div>
            `;
            document.body.appendChild(modal);
            modal.addEventListener('click', e => {
                if (!e.target.closest('.modal-content')) modal.remove();
            });

            // –§–æ—Ç–æ-–≥–∞–ª–µ—Ä–µ—è
            const thumbs = document.getElementById("galleryThumbs");
            const main = document.getElementById("mainImage");
            const prevBtn = document.getElementById("prevPhoto");
            const nextBtn = document.getElementById("nextPhoto");
            let currentIndex = -1;
            const updateArrowVisibility = () => {
                prevBtn.style.display = (currentIndex > 0) ? 'block' : 'none';
                nextBtn.style.display = (currentIndex < photos.length - 1) ? 'block' : 'none';
            };
            if (photos.length) {
                photos.forEach((src, index) => {
                    const thumb = document.createElement("img");
                    thumb.src = src;
                    thumb.className = "thumbnail-img";
                    thumb.onclick = () => {
                        currentIndex = index;
                        main.src = photos[currentIndex];
                        main.style.display = "block";
                        updateArrowVisibility();
                    };
                    thumbs.appendChild(thumb);
                });
                main.onclick = () => {
                    main.style.display = "none";
                    currentIndex = -1;
                    updateArrowVisibility();
                };
                prevBtn.onclick = (e) => {
                    e.stopPropagation();
                    if (currentIndex > 0) {
                        currentIndex--;
                        main.src = photos[currentIndex];
                        main.style.display = "block";
                        updateArrowVisibility();
                    }
                };
                nextBtn.onclick = (e) => {
                    e.stopPropagation();
                    if (currentIndex < photos.length - 1) {
                        currentIndex++;
                        main.src = photos[currentIndex];
                        main.style.display = "block";
                        updateArrowVisibility();
                    }
                };
            } else {
                thumbs.innerHTML = '<p style="color:#999;">–ù–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ</p>';
            }
        })
        .catch(err => {
            console.error("–û—à–∏–±–∫–∞ showOrderDetails:", err);
            alert("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: " + err.message);
        });
}






function toggleDetails(element) {
    const details = element.nextElementSibling;
    const arrow   = element.querySelector('.accordion-arrow');
    details.style.display = (details.style.display === 'block') ? 'none' : 'block';
    arrow.classList.toggle('open');
}

/**
 * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ (–æ–±—â–∞—è —Ñ—É–Ω–∫—Ü–∏—è)
 */
async function updateOrderStatus(orderId, newStatus) {
    if (!newStatus) return;
    try {
        const response = await fetch('/admin/api/update_order_status.php', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ order_id: orderId, status: newStatus })
        });
        const result = await response.json();
        if (result.success) {
            alert(`‚úÖ –°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ #${orderId} –æ–±–Ω–æ–≤–ª—ë–Ω –Ω–∞: ${newStatus}`);
            // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
            if (document.getElementById('statusFilter')) {
                // –ê–¥–º–∏–Ω–∫–∞ (loadAllOrders)
                filterOrders();
            } else {
                // –õ–ö –∫–ª–∏–µ–Ω—Ç–∞ (loadOrders)
                loadOrders();
            }
        } else {
            alert(`‚ö†Ô∏è –û—à–∏–±–∫–∞: ${result.message}`);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ updateOrderStatus:', error);
        alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞: ' + error.message);
    }
}

/**
 * –£–¥–∞–ª–∏—Ç—å –∑–∞–∫–∞–∑
 */
async function deleteOrder(orderId) {
    if (!confirm('–¢–æ—á–Ω–æ —É–¥–∞–ª–∏—Ç—å –∑–∞–∫–∞–∑ #' + orderId + '?')) return;
    try {
        const response = await fetch('/admin/api/delete_order.php', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ order_id: orderId })
        });
        const result = await response.json();
        if (result.success) {
            alert('–ó–∞–∫–∞–∑ —É–¥–∞–ª—ë–Ω');
            if (document.getElementById('statusFilter')) {
                filterOrders();
            } else {
                loadOrders();
            }
        } else {
            alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏: ' + result.message);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ deleteOrder:', error);
        alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞');
    }
}

/**
 * –ú–µ–Ω–µ–¥–∂–µ—Ä: nextOrderStatus
 */
async function nextOrderStatus(orderId) {
    const current = await getCurrentStatus(orderId);
    const next = getNextStatus(current);
    if (next) await updateOrderStatus(orderId, next);
    else alert('–°–ª–µ–¥—É—é—â–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ –Ω–µ—Ç');
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
 */
async function getCurrentStatus(orderId) {
    const response = await fetch(`/admin/api/get_orders.php?order_id=${orderId}&all=1`);
    const data = await response.json();
    if (data.success && data.orders.length > 0) {
        return data.orders[0].status;
    }
    throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å');
}

/**
 * –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–π —Å—Ç–∞—Ç—É—Å (–ø–æ —Ü–µ–ø–æ—á–∫–µ)
 */
function getNextStatus(currentStatus) {
    const seq = [
        "–í—ã–≥—Ä—É–∑–∏—Ç–µ —Ç–æ–≤–∞—Ä",
        "–¢–æ–≤–∞—Ä –≤—ã–≥—Ä—É–∂–µ–Ω",
        "–ì–æ—Ç–æ–≤ –∫ –æ–±—Ä–∞–±–æ—Ç–∫–µ",
        "–í –æ–±—Ä–∞–±–æ—Ç–∫–µ",
        "–ì–æ—Ç–æ–≤ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ",
        "–¢–æ–≤–∞—Ä –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω"
    ];
    const i = seq.indexOf(currentStatus);
    if (i >= 0 && i < seq.length - 1) {
        return seq[i+1];
    }
    return null;
}

/**
 * –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è (admin)
 */
function loadScheduleSettings() {
    if (userRole !== 'admin') {
        alert('–î–æ—Å—Ç—É–ø —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞');
        return;
    }
    const dynamicContent = document.getElementById('dynamicContent');
    dynamicContent.innerHTML = `
        <h2>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è</h2>
        <div class="settings-container">
            <p>–£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –∑–∞–ø–∏—Å–µ–π:</p>
            <button class="btn" onclick="deleteOldSchedules()">–£–¥–∞–ª–∏—Ç—å —Å–µ–π—á–∞—Å</button>
            <p>–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ <input type="number" id="autoDeleteDays" value="60" min="1"> –¥–Ω–µ–π.</p>
            <button class="btn" onclick="saveAutoDeleteSettings()">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</button>
        </div>
    `;
    if (userRole === 'admin') {
        loadDeliveryPricingSettings();
    }
}

function deleteOldSchedules() {
    if (confirm('–£–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å–∏ —Å—Ç–∞—Ä—à–µ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –¥–Ω–µ–π?')) {
        const days = document.getElementById('autoDeleteDays').value;
        fetch('/admin/api/delete_old_schedules.php', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ days })
        })
        .then(res => res.json())
        .then(data => {
            if (data.success) {
                alert('–°—Ç–∞—Ä—ã–µ –∑–∞–ø–∏—Å–∏ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã.');
            } else {
                alert('–û—à–∏–±–∫–∞: ' + data.message);
            }
        })
        .catch(err => alert('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: ' + err));
    }
}

function saveAutoDeleteSettings() {
    const days = document.getElementById('autoDeleteDays').value;
    alert(`–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã: –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ ${days} –¥–Ω–µ–π.`);
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –ë–î –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
}

/**
 * –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (admin)
 */
function loadNotifications() {
    const container = document.getElementById('dynamicContent');
    container.innerHTML = '<p>–ó–∞–≥—Ä—É–∑–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π‚Ä¶</p>';

    fetch('/admin/api/fetch_notifications.php?mark_as_read=1', { credentials: 'include' })
        .then(res => res.json())
        .then(data => {
            container.innerHTML = '';
            if (!Array.isArray(data) || data.length === 0) {
                container.innerHTML = '<p>–ù–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.</p>';
                updateNotificationBadge(0);
                return;
            }

            const unread = [];
            const read = [];

            // –ú–∞–ø–ø–∏–Ω–≥ —Ç–∏–ø–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–∞ CSS‚Äë–∫–ª–∞—Å—Å –∏ –∏–∫–æ–Ω–∫—É FontAwesome
            const typeMap = {
                success: { cls: 'notif-card notif--success', icon: 'fa-check-circle' },
                info:    { cls: 'notif-card notif--info',    icon: 'fa-circle-info' },
                warning: { cls: 'notif-card notif--warning', icon: 'fa-triangle-exclamation' },
                error:   { cls: 'notif-card notif--error',   icon: 'fa-circle-xmark' },
                promo:   { cls: 'notif-card notif--promo',   icon: 'fa-tag' },
            };

            data.forEach(n => {
                const t = typeMap[n.type] || typeMap.info;
                const div = document.createElement('div');
                div.className = `${t.cls}${n.read ? '' : ' unread'}`;

                div.innerHTML = `
                    <span class="notif-icon"><i class="fa-solid ${t.icon}"></i></span>
                    <div class="notif-body">
                        <div class="notif-title">${n.message}</div>
                        <div class="notif-time"><i class="fa-regular fa-clock"></i> ${n.created_at}</div>
                    </div>
                    <button class="notif-delete" onclick="removeNotification(${n.id})">
                        <i class="fa-regular fa-trash-alt"></i>
                    </button>
                `;

                (n.read ? read : unread).push(div);
            });

            // –û—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –±–ª–æ–∫ ¬´–ù–æ–≤—ã–µ¬ª
            if (unread.length > 0) {
                const d1 = document.createElement('details');
                d1.open = true;
                d1.innerHTML = `
                    <summary class="notif-summary">
                        <span>üÜï –ù–æ–≤—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</span>
                        <span class="notif-count">${unread.length}</span>
                    </summary>
                `;
                unread.forEach(el => d1.appendChild(el));
                container.appendChild(d1);
            }

            // –û—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –±–ª–æ–∫ ¬´–ü—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ¬ª
            if (read.length > 0) {
                const d2 = document.createElement('details');
                d2.innerHTML = `
                    <summary class="notif-summary">
                        <span>üìÅ –ü—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ</span>
                        <span class="notif-count">${read.length}</span>
                    </summary>
                `;
                read.forEach(el => d2.appendChild(el));
                container.appendChild(d2);
            }

            // –ö–Ω–æ–ø–∫–∏ ¬´–û—Ç–º–µ—Ç–∏—Ç—å –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ¬ª –∏ ¬´–û—á–∏—Å—Ç–∏—Ç—å –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ¬ª
            const controls = document.createElement('div');
            controls.className = 'notif-controls';
            if (unread.length > 0) {
                const btnMark = document.createElement('button');
                btnMark.className = 'notif-button primary';
                btnMark.innerHTML = '<i class="fa-solid fa-check"></i> –û—Ç–º–µ—Ç–∏—Ç—å –≤—Å–µ –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ';
                btnMark.onclick = markAllNotificationsAsRead;
                controls.appendChild(btnMark);
            }
            if (read.length > 0) {
                const btnClear = document.createElement('button');
                btnClear.className = 'notif-button secondary';
                btnClear.innerHTML = '<i class="fa-solid fa-trash"></i> –û—á–∏—Å—Ç–∏—Ç—å –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ';
                btnClear.onclick = clearReadNotifications;
                controls.appendChild(btnClear);
            }
            if (controls.childNodes.length > 0) container.appendChild(controls);

            updateNotificationBadge(unread.length);
        })
        .catch(err => {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:', err);
            container.innerHTML = '<p class="error-text">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.</p>';
        });
}



function clearReadNotifications() {
    // –ø—Ä–∏–º–µ—Ä –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É, –Ω–∞–¥–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç
    fetch('/admin/api/fetch_notifications.php?clear_read=1')
        .then(res => res.json())
        .then(() => {
            loadNotifications();      // –æ–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫
            fetchLiveNotifications(); // –æ–±–Ω–æ–≤–ª—è–µ–º –∑–Ω–∞—á–æ–∫ –∫–æ–ª–æ–∫–æ–ª—å—á–∏–∫–∞
        })
        .catch(err => {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:', err);
        });
}

// –ü—Ä–∏–º–µ—Ä —Ñ—É–Ω–∫—Ü–∏–∏ —É–¥–∞–ª–µ–Ω–∏—è. –ó–∞–º–µ–Ω–∏—Ç–µ URL –∏ –ª–æ–≥–∏–∫—É –Ω–∞ —Å–≤–æ—é.
function removeNotification(id) {
    fetch('delete_notification.php?id=' + id, { method: 'POST' })
        .then(res => res.json())
        .then(() => {
            // –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            loadNotifications();
            fetchLiveNotifications();
        })
        .catch(err => console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', err));
}


function markAllNotificationsAsRead() {
    fetch('/admin/api/fetch_notifications.php?mark_as_read=1')
        .then(res => res.json())
        .then(() => {
            loadNotifications();
            fetchLiveNotifications();
        });
}




// ‚è±Ô∏è –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∫–∞–∂–¥—ã–µ 60 —Å–µ–∫
//document.addEventListener('DOMContentLoaded', () => {
//    if (typeof loadNotifications === 'function') {
//        loadNotifications();
//        setInterval(loadNotifications, 50000);
//    }
//});

function toggleNotificationsDropdown() {
    document.getElementById("notificationsDropdown").classList.toggle("hidden");
}

function updateNotificationBadge(count) {
    const badge = document.getElementById("notificationBadge");
    if (count > 0) {
        badge.textContent = count;
        badge.classList.remove("hidden");
    } else {
        badge.classList.add("hidden");
    }
}

function fetchLiveNotifications() {
    fetch('/admin/api/fetch_notifications.php')
        .then(r => r.json())
        .then(data => {
            if (!Array.isArray(data)) return;

            // –ü–æ–¥—Å—á–µ—Ç —Ç–æ–ª—å–∫–æ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π!
            const unreadCount = data.filter(n => !n.read).length;
            updateNotificationBadge(unreadCount);

            const ul = document.getElementById("notificationsList");
            if (!ul) return;
            ul.innerHTML = '';
            if (data.length === 0) {
                ul.innerHTML = '<li>–ù–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</li>';
                return;
            }
            data.forEach(n => {
                const li = document.createElement('li');
                li.textContent = n.message;
                ul.appendChild(li);
            });
        });
}


setInterval(fetchLiveNotifications, 30000);


/**
 * –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∫–ª–∞–¥–æ–≤ (admin)
 */
function loadWarehouseSettings() {
    if (userRole !== 'admin') {
        alert('–î–æ—Å—Ç—É–ø —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤!');
        return;
    }
    const dynamicContent = document.getElementById('dynamicContent');
    dynamicContent.innerHTML = `
        <h2>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∫–ª–∞–¥–æ–≤</h2>
        <div class="warehouse-settings">
            <div class="add-warehouse">
                <input type="text" id="newWarehouseName" placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–∫–ª–∞–¥–∞">
                <button class="btn" onclick="addWarehouse()">–î–æ–±–∞–≤–∏—Ç—å</button>
            </div>
            <ul id="warehouseList"></ul>
        </div>
    `;
    fetchWarehouses();
}

function fetchWarehouses() {
    fetch('/admin/api/warehouses.php')
        .then(r => r.json())
        .then(data => {
            const list = document.getElementById('warehouseList');
            list.innerHTML = data.map(wh => `
                <li class="warehouse-item">
                    ${wh.name}
                    <button class="btn edit-btn" onclick="editWarehouse('${wh.name}')">–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
                    <button class="btn delete-btn" onclick="deleteWarehouse('${wh.name}')">–£–¥–∞–ª–∏—Ç—å</button>
                </li>
            `).join('');
        });
}

function addWarehouse() {
    const name = document.getElementById('newWarehouseName').value.trim();
    if (!name) {
        alert('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–∫–ª–∞–¥–∞!');
        return;
    }
    fetch('/admin/api/warehouses.php', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ action: 'add', name })
    })
    .then(res => res.json())
    .then(data => {
        if (data.status === 'success') {
            fetchWarehouses();
            document.getElementById('newWarehouseName').value = '';
        } else {
            alert('–û—à–∏–±–∫–∞: ' + data.message);
        }
    });
}

function editWarehouse(name) {
    const newName = prompt('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–∫–ª–∞–¥–∞:', name);
    if (newName && newName.trim() !== name) {
        fetch('/admin/api/warehouses.php', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ action: 'edit', oldName: name, newName: newName.trim() })
        })
        .then(res => res.json())
        .then(data => {
            if (data.status === 'success') {
                fetchWarehouses();
            } else {
                alert('–û—à–∏–±–∫–∞: ' + data.message);
            }
        });
    }
}

function deleteWarehouse(name) {
    if (confirm('–£–¥–∞–ª–∏—Ç—å —Å–∫–ª–∞–¥ ' + name + '?')) {
        fetch('/admin/api/warehouses.php', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ action: 'delete', name })
        })
        .then(res => res.json())
        .then(data => {
            if (data.status === 'success') {
                fetchWarehouses();
            } else {
                alert('–û—à–∏–±–∫–∞: ' + data.message);
            }
        });
    }
}

/**
 * –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–æ—Å—Ç–∞–≤–∫–∏
 */
function loadDeliveryPricingSettings() {
    const container = document.getElementById('dynamicContent');
    container.innerHTML += `<h3>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–æ—Å—Ç–∞–≤–∫–∏</h3><div id="pricingLoader">–ó–∞–≥—Ä—É–∑–∫–∞ —Ü–µ–Ω...</div>`;

    fetch('/admin/api/fetch_price_settings.php')
        .then(res => res.json())
        .then(data => {
            if (!data.success) {
                container.innerHTML += '<p>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ' + data.message + '</p>';
                return;
            }

            const settings = data.data;
            const cityList = Object.keys(settings);
            if (cityList.length === 0) {
                container.innerHTML += '<p>–ù–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–æ—Å—Ç–∞–≤–∫–∏.</p>';
                return;
            }

            const tabs = cityList.map(city =>
                `<button class="city-tab" onclick="showCityPricing('${city}')">${city}</button>`
            ).join('');

            const content = `
                <div class="pricing-tabs">${tabs}</div>
                <div id="pricingContent"></div>
                <button onclick="saveCityPricing()" class="btn">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è</button>
            `;

            document.getElementById("pricingLoader").remove();
            container.innerHTML += content;
            window.deliverySettingsData = settings;
            window.currentPricingCity = cityList[0];
            showCityPricing(cityList[0]);
        });
}

// ===== –ü–µ—Ä–µ–ø–∏—Å–∞–Ω–Ω–∞—è showCityPricing =====
function showCityPricing(city) {
    const data = window.deliverySettingsData[city];
    if (!data) {
        document.getElementById("pricingContent").innerHTML =
            `<p>–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≥–æ—Ä–æ–¥–∞ ${city}</p>`;
        return;
    }
    // –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç (–≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö)
    const boxCoef = (typeof data.box_coef === "number" && !isNaN(data.box_coef))
        ? (data.box_coef * 100)
        : '';

    // —Å—Ç—Ä–æ–∏–º —Å—Ç—Ä–æ–∫–∏, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—è –¥–≤–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –¥–∞–Ω–Ω—ã—Ö: —á–∏—Å–ª–æ –∏–ª–∏ –æ–±—ä–µ–∫—Ç {box_price, pallet_price}
    const list = Object.entries(data.warehouses).map(([wh, prices]) => {
        let boxPrice = 0, palletPrice = 0;
        if (typeof prices === "number") {
            // legacy: prices = –µ–¥–∏–Ω–æ–µ —á–∏—Å–ª–æ ‚Üí —ç—Ç–æ —Ü–µ–Ω–∞ –∑–∞ –∫–æ—Ä–æ–±
            boxPrice = prices;
        } else if (prices && typeof prices === "object") {
            // –Ω–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç: prices = { box_price, pallet_price }
            boxPrice    = prices.box_price    ?? 0;
            palletPrice = prices.pallet_price ?? 0;
        }
        const perLiter = boxPrice
            ? (boxPrice / 96).toFixed(4)
            : '‚Äî';

        return `
        <tr>
          <td>${wh}</td>
          <td><input type="number" step="1" data-wh="${wh}" value="${boxPrice}"    class="box-price"></td>
          <td><input type="number" step="0.01" data-wh="${wh}" value="${palletPrice}" class="pallet-price"></td>
          <td><span class="per-liter"    data-wh="${wh}">${perLiter}</span></td>
        </tr>`;
    }).join("");

    // –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ —Ñ–æ—Ä–º—ã –∏ —Ç–∞–±–ª–∏—Ü—ã
    document.getElementById("pricingContent").innerHTML = `
      <h4>–ì–æ—Ä–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è: ${city}</h4>
      <div class="form-group">
        <label>–ö–§ –∑–∞ –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –∫–æ—Ä–æ–±–∫—É (%):
          <input type="number" id="boxCoefInput" step="1" value="${boxCoef}">
        </label>
      </div>
      <table class="price-table">
        <thead>
          <tr>
            <th>–°–∫–ª–∞–¥</th>
            <th>–¶–µ–Ω–∞ –∑–∞ –∫–æ—Ä–æ–± (‚ÇΩ)</th>
            <th>–¶–µ–Ω–∞ –∑–∞ –ø–∞–ª–ª–µ—Ç—É (‚ÇΩ)</th>
            <th>‚ÇΩ –∑–∞ –ª–∏—Ç—Ä</th>
          </tr>
        </thead>
        <tbody>${list}</tbody>
      </table>
    `;

    // –æ–±–Ω–æ–≤–ª—è–µ–º —Ä–∞—Å—á—ë—Ç ‚ÇΩ/–ª–∏—Ç—Ä –ø—Ä–∏ –ø—Ä–∞–≤–∫–µ –∫–æ—Ä–æ–±–æ—á–Ω–æ–π —Ü–µ–Ω—ã
    document.querySelectorAll('.box-price').forEach(input => {
      input.addEventListener('input', () => {
        const val  = parseFloat(input.value) || 0;
        const span = document.querySelector(`.per-liter[data-wh="${input.dataset.wh}"]`);
        span.textContent = val > 0 ? (val / 96).toFixed(4) : '‚Äî';
      });
    });

    // –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º –ø–æ–¥—á—ë—Ä–∫–∏–≤–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ç–∞–±–∞
    window.currentPricingCity = city;
    document.querySelectorAll(".city-tab")
      .forEach(tab => tab.classList.toggle("active", tab.textContent === city));
}




// ===== –ü–µ—Ä–µ–ø–∏—Å–∞–Ω–Ω–∞—è saveCityPricing =====
function saveCityPricing() {
    const city = window.currentPricingCity;
    const boxCoefRaw = parseFloat(document.getElementById("boxCoefInput").value || 0);
    const boxCoef = boxCoefRaw / 100;

    const rows = document.querySelectorAll("#pricingContent tbody tr");
    const warehouses = {};

    rows.forEach(row => {
        const wh = row.querySelector("input.box-price").dataset.wh;
        const boxPrice    = parseFloat(row.querySelector("input.box-price").value    || 0);
        const palletPrice = parseFloat(row.querySelector("input.pallet-price").value || 0);
        warehouses[wh] = { box_price: boxPrice, pallet_price: palletPrice };
    });

    const payload = {
        [city]: {
            box_coef: boxCoef,
            warehouses: warehouses
        }
    };

    const saveBtn    = document.querySelector("button[onclick='saveCityPricing()']");
    const statusText = document.getElementById("pricingStatus");
    if (statusText) statusText.textContent = "–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ‚Ä¶";

    fetch("/admin/api/update_price_settings.php", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(payload)
    })
    .then(r => r.json())
    .then(resp => {
        if (resp.success) {
            if (statusText) {
                statusText.textContent = "‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ";
                statusText.style.color = "green";
            }
            saveBtn.textContent = "‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ";
            saveBtn.disabled   = true;
            setTimeout(() => {
                saveBtn.textContent = "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è";
                saveBtn.disabled   = false;
                if (statusText) statusText.textContent = "";
            }, 2000);
        } else {
            if (statusText) {
                statusText.textContent = "–û—à–∏–±–∫–∞: " + (resp.message || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞");
                statusText.style.color = "red";
            }
            console.error("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–∞—Ä–∏—Ñ–∞:", resp);
        }
    })
    .catch(err => {
        if (statusText) {
            statusText.textContent = "–û—à–∏–±–∫–∞ —Å–≤—è–∑–∏: " + err.message;
            statusText.style.color = "red";
        }
        console.error("–°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞:", err);
    });
}


/* –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ*/
function loadSystemLogs() {
    const container = document.getElementById("dynamicContent");
    container.innerHTML = "<h2>–°–∏—Å—Ç–µ–º–Ω—ã–µ –ª–æ–≥–∏</h2><p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>";

    fetchLogsInto(container);

    // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
    clearInterval(systemLogInterval); // –æ—á–∏—â–∞–µ–º –µ—Å–ª–∏ —É–∂–µ –±—ã–ª
    systemLogInterval = setInterval(() => {
        const stillInSystem = document.querySelector(".logs-container");
        if (stillInSystem) {
            fetchLogsInto(container);
        } else {
            clearInterval(systemLogInterval);
        }
    }, 30000);
}



function markLogRead(id) {
    fetch('/admin/api/mark_system_log_read.php', {
        method: "POST",
        headers: { "Content-Type": "application/x-www-form-urlencoded" },
        body: "id=" + id
    }).then(r => r.json()).then(data => {
        if (data.success) {
            loadSystemLogs(); // –æ–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫
        } else {
            alert("–û—à–∏–±–∫–∞: " + data.message);
        }
    });
}
function fetchLogsInto(container) {
    fetch('/admin/api/get_system_logs.php')
        .then(r => r.json())
        .then(data => {
            if (!data.success) {
                container.innerHTML += `<p>–û—à–∏–±–∫–∞: ${data.message}</p>`;
                return;
            }
            const logs = data.logs;
            if (logs.length === 0) {
                container.innerHTML = "<p>–ù–µ—Ç —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π.</p>";
                return;
            }
            const html = logs.map(log => `
                <div class="log-item ${log.type}">
                    <div><strong>[${log.type.toUpperCase()}]</strong> ${log.message}</div>
                    <div class="log-meta">üìÖ ${log.created_at}</div>
                    <div>
                        ${log.is_read ? "‚úÖ –ü—Ä–æ—á–∏—Ç–∞–Ω–æ" : `<button onclick="markLogRead(${log.id})">–û—Ç–º–µ—Ç–∏—Ç—å –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–º</button>`}
                    </div>
                </div>
            `).join("");
            container.innerHTML = "<div class='logs-container'>" + html + "</div>";
        });
}