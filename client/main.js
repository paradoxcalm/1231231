// üìÑ main.js

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–∞–∑–¥–µ–ª–∞ "–ü—Ä–∏—ë–º–∫–∞"
function loadForm() {
    const dynamicContent = document.getElementById('dynamicContent');
    if (!dynamicContent) return;

    dynamicContent.style.display = 'block';
    dynamicContent.innerHTML = `
        <div class="section-container" style="padding-top: 20px;">
            <h2>–°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ QR-–∫–æ–¥–∞</h2>
            <button class="icon-button" onclick="startScanner()">üì∑ –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–∫–∞–Ω–µ—Ä</button>
            <button class="icon-button" onclick="stopScanner()">‚õî –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–∫–∞–Ω–µ—Ä</button>
            <div id="reader" style="width: 100%; max-width: 400px; margin: auto; padding-top: 20px;"></div>
        </div>
    `;
}

// üîò –†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫ —Å–∫–∞–Ω–µ—Ä–∞
function startScanner() {
    if (typeof initScanner === 'function') {
        initScanner();
    } else {
        console.error("‚ùå initScanner() –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Äî –ø—Ä–æ–≤–µ—Ä—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ scan.js");
    }
}

// ‚õî –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∫–∞–Ω–µ—Ä–∞
function stopScanner() {
    if (typeof stopScan === 'function') {
        stopScan();
        console.log("‚õî –°–∫–∞–Ω–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤—Ä—É—á–Ω—É—é");
    } else {
        console.error("‚ùå stopScan() –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Äî –ø—Ä–æ–≤–µ—Ä—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ scan.js");
    }
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É –≤–∫–ª–∞–¥–∫–∞–º–∏ "–§–æ—Ä–º–∞ / –°–∫–∞–Ω"
function switchReceptionTab(tabId) {
    const sections = ['formSection', 'scanSection'];
    sections.forEach(id => {
        const tab = document.getElementById(id);
        const btn = document.querySelector(`.tab-button[onclick*="${id}"]`);
        if (tab) tab.style.display = (id === tabId) ? 'block' : 'none';
        if (btn) btn.classList.toggle('active', id === tabId);
    });

    if (tabId === 'formSection') {
        console.log("üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–æ –Ω–∞ –ü—Ä–∏—ë–º–∫—É");
    } else if (tabId === 'scanSection') {
        if (typeof initScanner === 'function') {
            initScanner();
        } else {
            console.error("‚ùå initScanner() –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Äî –ø—Ä–æ–≤–µ—Ä—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ scan.js");
        }
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–∞–∑–¥–µ–ª–∞ "–¢–∞–±–ª–∏—Ü–∞"
function loadTable() {
    const dynamicContent = document.getElementById('dynamicContent');
    if (!dynamicContent) return;
    dynamicContent.style.display = 'block';
    dynamicContent.innerHTML = `
        <h2>–¢–∞–±–ª–∏—Ü–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–π</h2>
        <div id="tableContainer"></div>
        <div id="paginationContainer"></div>
        <button class="icon-button" onclick="exportAllDataToExcel()" style="margin-top: 10px;">
            <i class="fas fa-download"></i> –í—ã–≥—Ä—É–∑–∏—Ç—å –≤ Excel
        </button>
    `;
    fetchDataAndDisplayTable();
}


// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–∞–∑–¥–µ–ª–∞ "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ"
function loadChart() {
    const scheduleSection = document.getElementById('scheduleSection');
    if (!scheduleSection) return;

    document.getElementById('dynamicContent').style.display = 'none';
    const tableSection = document.getElementById('tableSection');
    if (tableSection) tableSection.style.display = 'none';

    scheduleSection.style.display = 'block';

    const scheduleContainer = document.getElementById('scheduleContainer');
    scheduleContainer.innerHTML = '';

    const tableContainer = document.createElement('div');
    tableContainer.id = 'scheduleTable';
    tableContainer.classList.add('schedule-container');
    tableContainer.innerHTML = generateScheduleTable();

    scheduleContainer.appendChild(tableContainer);
}

function generateScheduleTable(weekOffset = 0) {
    const today = new Date();
    today.setDate(today.getDate() + weekOffset * 7);
    const firstDayOfWeek = new Date(today);
    firstDayOfWeek.setDate(today.getDate() - today.getDay() + 1);
    const monthNames = ["—è–Ω–≤", "—Ñ–µ–≤", "–º–∞—Ä", "–∞–ø—Ä", "–º–∞–π", "–∏—é–Ω", "–∏—é–ª", "–∞–≤–≥", "—Å–µ–Ω", "–æ–∫—Ç", "–Ω–æ—è", "–¥–µ–∫"];
    let tableHTML = `<h2 class="schedule-title">–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–æ–∫</h2>`;
    tableHTML += `<table class="schedule-table"><thead><tr>`;
    for (let i = 0; i < 7; i++) {
        const currentDate = new Date(firstDayOfWeek);
        currentDate.setDate(firstDayOfWeek.getDate() + i);
        const dayNames = ['–ü–ù', '–í–¢', '–°–†', '–ß–¢', '–ü–¢', '–°–ë', '–í–°'];
        const dayName = dayNames[i];
        const day = currentDate.getDate();
        const month = monthNames[currentDate.getMonth()];
        tableHTML += `<th>${dayName} <br> ${day} ${month}</th>`;
    }
    tableHTML += `</tr></thead><tbody><tr>`;
    for (let i = 0; i < 7; i++) {
        tableHTML += `<td class="schedule-cell"></td>`;
    }
    tableHTML += `</tr></tbody></table>`;
    tableHTML += `
        <div class="schedule-controls">
            <button onclick="changeWeek(-1)">‚Üê –ü—Ä–µ–¥—ã–¥—É—â–∞—è –Ω–µ–¥–µ–ª—è</button>
            <button onclick="changeWeek(1)">–°–ª–µ–¥—É—é—â–∞—è –Ω–µ–¥–µ–ª—è ‚Üí</button>
        </div>
    `;
    return tableHTML;
}

let currentWeekOffset = 0;
function changeWeek(offset) {
    currentWeekOffset += offset;
    const scheduleTable = document.getElementById('scheduleTable');
    if (scheduleTable) {
        scheduleTable.innerHTML = generateScheduleTable(currentWeekOffset);
    }
}

function toggleMobileProfileMenu() {
  const menu = document.getElementById("mobileProfileMenu");
  if (!menu) return;
  menu.classList.toggle("visible");
  menu.classList.toggle("hidden");
}
