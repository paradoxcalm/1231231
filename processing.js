// === processing.js (–æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π) ===

// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let submittedArticles = [];
let savedProcessingData = null;

function loadProcessing() {
    const container = document.getElementById("dynamicContent");
    container.innerHTML = renderProcessingHTML();
    initializeProcessingModal();
}

function skipStoreName() {
    document.getElementById("storeName").value = "–ù–µ —É–∫–∞–∑–∞–Ω–æ";
}

function autoSaveComment() {
    const commentText = document.getElementById("comment").value;
    localStorage.setItem("comment", commentText);
}

function addArticle() {
    // üîí –ü—Ä–æ–≤–µ—Ä–∫–∞: –∫–ª–∏–µ–Ω—Ç –Ω–µ –º–æ–∂–µ—Ç –¥–æ–±–∞–≤–ª—è—Ç—å –ø–æ—Å–ª–µ –≤—ã–≥—Ä—É–∑–∫–∏
    if (userRole === 'client') {
        const statusElement = document.getElementById("processingStatus");
        if (statusElement && statusElement.textContent !== "–í—ã–≥—Ä—É–∑–∏—Ç–µ —Ç–æ–≤–∞—Ä") {
            alert("–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–ª—è—Ç—å —Ç–æ–≤–∞—Ä—ã –ø–æ—Å–ª–µ –≤—ã–≥—Ä—É–∑–∫–∏.");
            return;
        }
    }

    document.getElementById("addArticleButton").style.display = "none";
    const articleDiv = document.createElement("div");
    articleDiv.classList.add("article-entry");
    articleDiv.innerHTML = `
        <input type="text" placeholder="–í–≤–µ–¥–∏—Ç–µ –ë–∞—Ä–∫–æ–¥" class="articleInput" oninput="checkBarcode(this)">
        <input type="number" placeholder="–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ" class="articleQty" oninput="calculateTotal(this)">
        <h4 class="warehouse-title">–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Å–∫–ª–∞–¥–∞–º:</h4>
        <div class="warehouses-container">
            <div class="warehouse-column">
                <label><input type="checkbox" class="warehouse-checkbox" onchange="toggleWarehouse(this, 'koledino')"> –ö–æ–ª–µ–¥–∏–Ω–æ</label>
                <input type="number" name="koledino" placeholder="–ö–æ–ª-–≤–æ" class="warehouse-input" style="display:none;" oninput="updateRemaining(this)">
            </div>
            <div class="warehouse-column">
                <label><input type="checkbox" class="warehouse-checkbox" onchange="toggleWarehouse(this, 'nevinnomyssk')"> –ù–µ–≤–∏–Ω–Ω–æ–º—ã—Å—Å–∫</label>
                <input type="number" name="nevinnomyssk" placeholder="–ö–æ–ª-–≤–æ" class="warehouse-input" style="display:none;" oninput="updateRemaining(this)">
            </div>
        </div>
        <p class="remaining-qty">–û—Å—Ç–∞–ª–æ—Å—å —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–∏—Ç—å: <span class="remainingCount">0</span></p>
        <p class="error-message" style="color:red; display:none;">–û—à–∏–±–∫–∞: –í–≤–µ–¥–µ–Ω–æ –±–æ–ª—å—à–µ, —á–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ!</p>
        <button class="confirm-button" onclick="confirmArticle(this)">‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å</button>
        <button class="remove-button" onclick="removeArticle(this)">‚ùå –£–¥–∞–ª–∏—Ç—å</button>
    `;
    document.getElementById("articlesContainer").appendChild(articleDiv);
}


function toggleWarehouse(checkbox, warehouse) {
    const input = checkbox.parentElement.nextElementSibling;
    input.style.display = checkbox.checked ? "inline-block" : "none";
    if (!checkbox.checked) input.value = "";
    updateRemaining(input);
}

function checkBarcode(input) {
    console.log("checkBarcode:", input.value);
}

function calculateTotal(input) {
    updateRemaining(input);
}

function updateRemaining(input) {
    const articleEntry = input.closest(".article-entry");
    const total = parseInt(articleEntry.querySelector(".articleQty").value) || 0;
    let distributed = 0;
    articleEntry.querySelectorAll(".warehouse-input").forEach(whInput => {
        distributed += parseInt(whInput.value) || 0;
    });
    const remaining = total - distributed;
    articleEntry.querySelector(".remainingCount").textContent = remaining;
    const error = articleEntry.querySelector(".error-message");
    const confirmBtn = articleEntry.querySelector(".confirm-button");
    if (remaining < 0) {
        error.style.display = "block";
        confirmBtn.disabled = true;
    } else {
        error.style.display = "none";
        confirmBtn.disabled = false;
    }
}

function confirmArticle(button) {
    const articleDiv = button.parentElement;
    const barcode = articleDiv.querySelector(".articleInput").value;
    const totalQty = parseInt(articleDiv.querySelector(".articleQty").value) || 0;
    const warehouses = {};
    articleDiv.querySelectorAll(".warehouse-input").forEach(input => {
        const val = parseInt(input.value) || 0;
        if (val > 0) {
            warehouses[input.name] = val;
        }
    });
    const totalDistributed = Object.values(warehouses).reduce((sum, qty) => sum + qty, 0);
    if (totalDistributed !== totalQty) {
        alert("–û—à–∏–±–∫–∞: –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º!");
        return;
    }
    submittedArticles.push({ barcode, totalQty, warehouses });
    updateArticleCount();
    const submittedContainer = document.getElementById("submittedArticles");
    const entry = document.createElement("div");
    entry.classList.add("submitted-entry");
    entry.innerHTML = `<p><strong>–ê—Ä—Ç–∏–∫—É–ª:</strong> ${barcode} | –ö–æ–ª-–≤–æ: ${totalQty} | –°–∫–ª–∞–¥—ã: ${Object.keys(warehouses).length}</p>`;
    submittedContainer.appendChild(entry);
    articleDiv.remove();
    document.getElementById("addArticleButton").style.display = "block";
}

function removeArticle(button) {
    button.parentElement.remove();
    document.getElementById("addArticleButton").style.display = "block";
}

function updateArticleCount() {
    const totalElement = document.getElementById("totalArticles");
    if (totalElement) {
        totalElement.textContent = submittedArticles.length;
    }
}

function initializeFormProcessing() {
    preloadUserDataIntoProcessing(); // üü¢ –ê–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ò–ü/–º–∞–≥–∞–∑–∏–Ω–∞

    const commentField = document.getElementById("comment");
    if (commentField) {
        commentField.addEventListener("input", autoSaveComment);
    }
    const addBtn = document.getElementById("addArticleButton");
    if (addBtn) {
        addBtn.addEventListener("click", addArticle);
    }
}


function initializeProcessingModal(scheduleId = 0, status = "–í—ã–≥—Ä—É–∑–∏—Ç–µ —Ç–æ–≤–∞—Ä") {
    submittedArticles = [];
    updateArticleCount();
    initializeFormProcessing();

    const scheduleInput = document.getElementById("schedule_id_input");
    if (scheduleInput) {
        scheduleInput.value = scheduleId;
    }

    // üîí –ë–ª–æ–∫–∏—Ä—É–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤, –µ—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –Ω–µ "–í—ã–≥—Ä—É–∑–∏—Ç–µ —Ç–æ–≤–∞—Ä"
    if (status !== "–í—ã–≥—Ä—É–∑–∏—Ç–µ —Ç–æ–≤–∞—Ä") {
        const addBtn = document.getElementById("addArticleButton");
        if (addBtn) addBtn.style.display = "none";

        // üîí –£–¥–∞–ª—è–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–æ–≤—ã–µ
        const articlesContainer = document.getElementById("articlesContainer");
        if (articlesContainer) {
            articlesContainer.innerHTML = '<p><em>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ—Å–ª–µ –≤—ã–≥—Ä—É–∑–∫–∏.</em></p>';
        }
    }
}



// –ù–æ–≤—ã–π —ç—Ç–∞–ø: —Ñ–æ—Ä–º–∞ –ø—Ä–∏—ë–º–∫–∏ –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
function renderPostProcessingReceptionForm(data) {
    const schedule = data.schedule || {
        city: "‚Äî",
        accept_date: "‚Äî",
        accept_time: "‚Äî",
        driver_name: "‚Äî",
        driver_phone: "‚Äî",
        car_brand: "‚Äî",
        car_number: "‚Äî"
    };

    return `
        <div class="form-container">
            <h2 class="form-title">–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏: –ø—Ä–∏—ë–º–∫–∞</h2>
            <form id="postProcessingForm" enctype="multipart/form-data">
                <p><strong>–ö–æ–º–ø–∞–Ω–∏—è:</strong> ${data.company_name}</p>
                <p><strong>–ú–∞–≥–∞–∑–∏–Ω:</strong> ${data.store_name}</p>
                <p><strong>–ì–æ—Ä–æ–¥ –æ—Ç–ø—Ä–∞–≤–∫–∏:</strong> ${schedule.city}</p>
                <p><strong>–î–∞—Ç–∞ –ø—Ä–∏—ë–º–∞:</strong> ${schedule.accept_date}</p>
                <p><strong>–í—Ä–µ–º—è –ø—Ä–∏—ë–º–∞:</strong> ${schedule.accept_time}</p>
                <p><strong>–í–æ–¥–∏—Ç–µ–ª—å:</strong> ${schedule.driver_name}</p>
                <p><strong>–¢–µ–ª–µ—Ñ–æ–Ω –≤–æ–¥–∏—Ç–µ–ª—è:</strong> ${schedule.driver_phone}</p>
                <p><strong>–ú–∞—Ä–∫–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è:</strong> ${schedule.car_brand}</p>
                <p><strong>–ù–æ–º–µ—Ä –∞–≤—Ç–æ–º–æ–±–∏–ª—è:</strong> ${schedule.car_number}</p>

                <label>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ—Ä–æ–±–æ–∫ / –ø–∞–ª–ª–µ—Ç:</label>
                <input type="number" name="boxes" required>

                <label>–°—É–º–º–∞ –æ–ø–ª–∞—Ç—ã:</label>
                <input type="number" name="payment" step="0.01" required>

                <label>–¢–∏–ø —É–ø–∞–∫–æ–≤–∫–∏:</label>
                <select name="packaging_type" required>
                    <option value="Box">–ö–æ—Ä–æ–±–∫–∞</option>
                    <option value="Pallet">–ü–∞–ª–ª–µ—Ç–∞</option>
                    <option value="Envelope">–ö–æ–Ω–≤–µ—Ä—Ç</option>
                </select>

                <label>–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:</label>
                <select name="paymentType" required>
                    <option value="–ù–∞–ª–∏—á–Ω—ã–µ">–ù–∞–ª–∏—á–Ω—ã–µ</option>
                    <option value="–¢–ë–∞–Ω–∫">–¢-–ë–∞–Ω–∫</option>
                    <option value="–î–æ–ª–≥">–î–æ–ª–≥</option>
                </select>

                <label>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</label>
                <textarea name="comment"></textarea>

                <label>–§–æ—Ç–æ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ):</label>
                <input type="file" name="photo" accept="image/*">

                <button type="submit" class="submit-button">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–∏—ë–º–∫—É</button>
            </form>
        </div>
    `;
}




function submitProcessing() {
    const companyName = document.getElementById("companyName").value;
    const storeName = document.getElementById("storeName").value;
    const shipmentType = document.querySelector("input[name='shipmentType']:checked").value;
    const packagingType = document.getElementById("packagingType").value;
    const scheduleId = document.getElementById("schedule_id_input").value;
    const marketplace_wb = document.getElementById("marketplaceWildberries").checked;
    const marketplace_ozon = document.getElementById("marketplaceOzon").checked;
    const comment = document.getElementById("comment").value;

    if (!companyName || submittedArticles.length === 0) {
        alert("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –ò–ü –∏ –¥–æ–±–∞–≤—å—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Ç–æ–≤–∞—Ä.");
        return;
    }

    savedProcessingData = {
        schedule_id: scheduleId,
        company_name: companyName,
        store_name: storeName,
        shipment_type: shipmentType,
        packaging_type: packagingType,
        marketplace_wildberries: marketplace_wb,
        marketplace_ozon: marketplace_ozon,
        comment,
        items: submittedArticles,
        user_id: currentClientId,
        schedule: {
            city: document.querySelector("#schedule_city")?.textContent || '‚Äî',
            accept_date: document.querySelector("#schedule_date")?.textContent || '‚Äî',
            accept_time: document.querySelector("#schedule_time")?.textContent || '‚Äî',
            driver_name: document.querySelector("#driver_name")?.textContent || '‚Äî',
            driver_phone: document.querySelector("#driver_phone")?.textContent || '‚Äî',
            car_brand: document.querySelector("#car_brand")?.textContent || '‚Äî',
            car_number: document.querySelector("#car_number")?.textContent || '‚Äî'
        }
    };

    // ‚úÖ –ú–µ–Ω–µ–¥–∂–µ—Ä/–∞–¥–º–∏–Ω ‚Üí –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç —Ñ–æ—Ä–º—É –ø—Ä–∏—ë–º–∫–∏
    if (userRole === 'manager' || userRole === 'admin') {
        const container = document.getElementById("dynamicContent");
        container.innerHTML = renderPostProcessingReceptionForm(savedProcessingData);
        document.getElementById("postProcessingForm").addEventListener("submit", handleReceptionSubmit);
    } else {
        // üë§ –ö–ª–∏–µ–Ω—Ç ‚Üí –ø—Ä–æ—Å—Ç–æ —Å–æ–∑–¥–∞—ë—Ç –∑–∞—è–≤–∫—É
        sendProcessingData(savedProcessingData);
    }
}







async function handleReceptionSubmit(event) {
    event.preventDefault();
    const form = event.target;
    const formData = new FormData(form);

    // –í—Å—Ç–∞–≤–ª—è–µ–º –∏–∑ savedProcessingData
    for (const key in savedProcessingData) {
        if (key !== "items") {
            formData.append(key, savedProcessingData[key]);
        }
    }
    formData.append("items", JSON.stringify(savedProcessingData.items));
    formData.append("processing", 1); // —Ñ–ª–∞–≥: —ç—Ç–æ –ø—Ä–∏—ë–º–∫–∞ –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏

    try {
        const response = await fetch("log_data.php", {
            method: "POST",
            body: formData
        });
        const result = await response.json();
        if (result.status === "success") {
            alert("–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏ –ø—Ä–∏—ë–º–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!");
            loadProcessing();
        } else {
            alert("–û—à–∏–±–∫–∞: " + result.message);
        }
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:", error);
        alert("–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: " + error.message);
    }
}

function renderProcessingHTML(scheduleId = 0) {
    return `
        <div id="processingFormContainer" class="processing-container">
            <h2 class="form-title">–ó–∞—è–≤–∫–∞ –Ω–∞ –û–±—Ä–∞–±–æ—Ç–∫—É</h2>
            <input type="hidden" id="schedule_id_input" value="${scheduleId}">
            <label for="companyName" class="form-label">–í–≤–µ–¥–∏—Ç–µ –ò–ü:</label>
            <input type="text" id="companyName" placeholder="–í–≤–µ–¥–∏—Ç–µ –ò–ü" class="input-field" required>
            <label for="storeName" class="form-label">–ù–∞–∑–≤–∞–Ω–∏–µ –ú–∞–≥–∞–∑–∏–Ω–∞:</label>
            <input type="text" id="storeName" placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞" class="input-field">
            <button type="button" class="skip-button" onclick="skipStoreName()">–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å</button>
            <div class="shipment-packaging-row">
                <div class="shipment-toggle">
                    <label class="form-label">–¢–∏–ø –æ–±—Ä–∞–±–æ—Ç–∫–∏:</label>
                    <label><input type="radio" name="shipmentType" value="FBO" checked> FBO</label>
                    <label><input type="radio" name="shipmentType" value="FBS"> FBS</label>
                </div>
                <div class="packaging-select">
                    <label for="packagingType" class="form-label">–¢–∏–ø —É–ø–∞–∫–æ–≤–∫–∏:</label>
                    <select id="packagingType" class="input-field">
                        <option value="Box">–ö–æ—Ä–æ–±–∫–∞</option>
                        <option value="Envelope">–ö–æ–Ω–≤–µ—Ä—Ç</option>
                        <option value="Pallet">–ü–∞–ª–ª–µ—Ç–∞</option>
                    </select>
                </div>
            </div>
            <div class="marketplace-options">
                <label class="form-label">–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å—ã:</label>
                <label><input type="checkbox" id="marketplaceWildberries" checked> Wildberries</label>
                <label><input type="checkbox" id="marketplaceOzon"> Ozon</label>
            </div>
            <h3 class="form-subtitle">–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤:</h3>
            <div id="articlesContainer"></div>
            <button id="addArticleButton" class="add-button" onclick="addArticle()">‚ûï –î–æ–±–∞–≤–∏—Ç—å –ë–∞—Ä–∫–æ–¥</button>
            <h3 class="summary-title">–ò—Ç–æ–≥:</h3>
            <div id="submittedArticles"></div>
            <p class="total-articles">–í—Å–µ–≥–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω–Ω—ã—Ö –ø–æ–∑–∏—Ü–∏–π: <span id="totalArticles">0</span></p>
            <h3 class="form-subtitle">–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</h3>
            <textarea id="comment" class="input-field" placeholder="–í–∞—à–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è –ø–æ —É–ø–∞–∫–æ–≤–∫–µ –∏ –∫–æ—Ä–æ–±–∞–º" oninput="autoSaveComment()"></textarea>
            <button class="submit-button" onclick="submitProcessing()">–ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ</button>
        </div>
    `;
}


async function sendProcessingData(data) {
    try {
        const response = await fetch("create_order.php", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify(data)
        });

        const result = await response.json();

        if (result.success) {
            alert("–ó–∞—è–≤–∫–∞ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!");
            loadProcessing(); // –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        } else {
            alert("–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è: " + result.message);
        }

    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É:", error);
        alert("–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –∏–ª–∏ —Å–µ—Ä–≤–µ—Ä–∞: " + error.message);
    }
}