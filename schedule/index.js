// üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
import {
    state,
    setPermissionFlags,
    setCurrentModal,
    syncWindowFilters
} from './state.js';
import {
    initializeFilters,
    filterByCity,
    updateDestinationWarehouses
} from './filters.js';
import {
    renderStaticCalendar,
    changeMonth,
    fetchDataAndUpdateCalendar
} from './calendar.js';
import {
    fetchAndDisplayUpcoming,
    openSingleShipmentModal,
    setArchiveView
} from './upcoming.js';
import {
    openScheduleManagementModal,
    closeScheduleManagementModal,
    loadManagementSchedules,
    updateStatus,
    massManageSchedules,
    registerManagementCallbacks
} from './management.js';
import {
    addNewWarehouseAndRefresh,
    enterWarehouseEditMode,
    cancelWarehouseEdits,
    saveWarehouseEdits,
    confirmWarehouseDelete,
    addNewWarehouse,
    registerWarehouseCallbacks
} from './warehouses.js';
import {
    openImportModal,
    exportSchedule,
    showImportResultModal
} from './importExport.js';

// === schedule.js ===
//
// –§–∞–π–ª, –æ—Ç–≤–µ—á–∞—é—â–∏–π –∑–∞ –ª–æ–≥–∏–∫—É —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è:
// - –≤–∫–ª–∞–¥–∫–∞ "–ë–ª–∏–∂–∞–π—à–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è" –∏ "–ö–∞–ª–µ–Ω–¥–∞—Ä—å"
// - —Å–æ–∑–¥–∞–Ω–∏–µ / —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
// - —Ñ—É–Ω–∫—Ü–∏—è createOrder –Ω–µ —É–≤–æ–¥–∏—Ç –Ω–∞ processing.html, –∞ –ª–∏—à—å –∑–∞–∫—Ä—ã–≤–∞–µ—Ç –æ–∫–Ω–æ
//   –∏ –≤—ã–∑—ã–≤–∞–µ—Ç openRequestFormModal (—Å–º. requestForm.js).



/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞, –º–æ–∂–Ω–æ –ª–∏ –µ—â—ë —Å–æ–∑–¥–∞–≤–∞—Ç—å –∑–∞—è–≤–∫—É (—Å —É—á—ë—Ç–æ–º accept_deadline, –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω–æ).
 */

function loadSchedule() {
    const dynamicContent = document.getElementById("dynamicContent");
    if (!dynamicContent) return;

    const canViewCalendar = (userRole === "admin");
    const canManageSchedules = (userRole === 'admin' || userRole === 'manager');
    setPermissionFlags({
        canCreate: canManageSchedules,
        canCreateSchedule: canManageSchedules,
        canCreateOrder: userRole !== 'client'
    });
    state.archiveView = false;
    syncWindowFilters();

    const html = `
        <div class="schedule-container">
            <h1 class="section-title">–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ</h1>
            <div class="tab-header">
                <button class="tab-button active" id="tab-upcoming" onclick="switchTab('upcoming')">–ë–ª–∏–∂–∞–π—à–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è</button>
                ${
                    canViewCalendar
                        ? `<button class="tab-button" id="tab-calendar" onclick="switchTab('calendar')">–ö–∞–ª–µ–Ω–¥–∞—Ä—å</button>`
                        : ""
                }
            </div>
            <div class="tab-content" id="tabContent-upcoming" style="display: block;">
                <div class="upcoming-shipments">
                    <h3>–ë–ª–∏–∂–∞–π—à–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è</h3>
                    <div id="filterBlock"></div>
                    <div style="margin-top:10px;">
                        <button id="toggleArchiveBtn" class="secondary-button">–ê—Ä—Ö–∏–≤</button>
                    </div>
                    <div id="upcomingList" style="margin-top:10px;"></div>
                </div>
            </div>
            ${ canViewCalendar ? `
            <div class="tab-content" id="tabContent-calendar" style="display: none;">
                <div class="schedule-controls" id="calendarControls">
                    <div class="action-buttons">
                        ${ state.canCreateSchedule ? `
                            <button class="primary-button" onclick="showCreateForm()">
                                <i class="fas fa-plus"></i> –°–æ–∑–¥–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
                            </button>
                            <div class="dropdown-excel">
                              <button class="excel-button" onclick="toggleExcelMenu()">üì§ Excel ‚ñæ</button>
                              <div class="excel-menu" id="excelMenu">
                                  <div onclick="exportSchedule()">üì§ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö</div>
                                  <div onclick="openImportModal()">üì• –ò–º–ø–æ—Ä—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è</div>
                                  <div onclick="window.location.href='export_schedule_template.php'">üìÑ –°–∫–∞—á–∞—Ç—å —à–∞–±–ª–æ–Ω</div>
                              </div>
                            </div>
                            <button class="secondary-button" onclick="openScheduleManagementModal()">‚öôÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ</button>
                            <button class="secondary-button" onclick="showShipmentReport()">üìÑ–°–ø–∏—Å–æ–∫ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–π</button>
                        ` : "" }
                    </div>
                </div>
                <div class="filter-section" id="calendarFilters">
                    <div class="filter-group">
                        <label for="warehouseFilter">–°–∫–ª–∞–¥—ã:</label>
                        <select id="warehouseFilter" onchange="onWarehouseChange(this.value)">
                            <option value="">–í—Å–µ —Å–∫–ª–∞–¥—ã</option>
                        </select>
                    </div>
                    <div class="filter-actions">
                        <button class="apply-button" onclick="applyFilters()">–ü–†–ò–ú–ï–ù–ò–¢–¨</button>
                        <button class="reset-button" onclick="resetFilters()">–°–±—Ä–æ—Å–∏—Ç—å</button>
                    </div>
                </div>
                <div class="calendar-view" id="calendarView">
                    <div class="schedule-nav">
                        <button class="nav-button" onclick="changeMonth(-1)">‚ùÆ</button>
                        <span id="currentMonthYear" style="font-weight:bold;font-size:16px;"></span>
                        <button class="nav-button" onclick="changeMonth(1)">‚ùØ</button>
                    </div>
                    <div class="calendar-header">
                        <div>–ü–Ω</div><div>–í—Ç</div><div>–°—Ä</div><div>–ß—Ç</div><div>–ü—Ç</div><div>–°–±</div><div>–í—Å</div>
                    </div>
                    <div class="calendar-grid" id="calendarGrid"></div>
                </div>
            </div>
            ` : "" }
        </div>
    `;
    dynamicContent.innerHTML = html;

    initializeFilters();

    const toggleArchiveBtn = document.getElementById('toggleArchiveBtn');
    if (toggleArchiveBtn) {
        if (userRole === 'client') {
            toggleArchiveBtn.style.display = 'none';
        } else {
            toggleArchiveBtn.addEventListener('click', () => {
                const nextValue = !state.archiveView;
                setArchiveView(nextValue);
                toggleArchiveBtn.textContent = nextValue ? '–ê–∫—Ç–∏–≤' : '–ê—Ä—Ö–∏–≤';
                fetchAndDisplayUpcoming(nextValue);
            });
        }
    }

    if (canViewCalendar) {
        renderStaticCalendar();
        fetchDataAndUpdateCalendar();
    }

    fetchAndDisplayUpcoming();
}









// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–∫–ª–∞–¥–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –≥–æ—Ä–æ–¥—É





// –û—Ç–∫—Ä—ã—Ç–∏–µ/–∑–∞–∫—Ä—ã—Ç–∏–µ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ –º–µ–Ω—é Excel
function toggleExcelMenu() {
    const menu = document.getElementById("excelMenu");
    const arrow = document.getElementById("excelArrow");
    const btn = document.getElementById("excelDropdownBtn");

    const opened = menu.classList.toggle("show");
    arrow.innerHTML = opened ? "‚ñ≤" : "‚ñº";
    btn.classList.toggle("open", opened);
}



// –ó–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –º–µ–Ω—é
document.addEventListener("mousedown", function(e) {
    const menu = document.getElementById("excelMenu");
    const btn = document.getElementById("excelDropdownBtn");

    if (!menu || !btn) return;

    if (!menu.contains(e.target) && !btn.contains(e.target)) {
        menu.classList.remove("show");
        btn.classList.remove("open");
        document.getElementById("excelArrow").innerHTML = "‚ñº";
    }
});







function showShipmentReport() {
    const modalContent = document.getElementById("shipmentReportText");
    if (!modalContent) return;

    // –ë–ª–æ–∫ —Ñ–∏–ª—å—Ç—Ä–æ–≤
    modalContent.innerHTML = `
      <div id="shipmentReportFilters" style="display:flex;gap:18px;margin-bottom:18px;align-items:flex-end;">
        <div>
          <label style="font-weight:600;">–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å</label>
          <select id="shipmentFilterMarketplace" class="styled-filter" style="min-width:140px;"></select>
        </div>
        <div>
          <label style="font-weight:600;">–ì–æ—Ä–æ–¥</label>
          <select id="shipmentFilterCity" class="styled-filter" style="min-width:140px;"></select>
        </div>
        <div>
          <label style="font-weight:600;">–°–∫–ª–∞–¥</label>
          <select id="shipmentFilterWarehouse" class="styled-filter" style="min-width:140px;"></select>
        </div>
        <div>
          <label style="font-weight:600;">–î–∞—Ç–∞</label>
          <input type="date" id="shipmentFilterDate" class="styled-filter" style="min-width:140px;">
        </div>
        <button id="shipmentFilterApplyBtn" class="primary" style="margin-left:12px;padding:12px 20px;">–ü—Ä–∏–º–µ–Ω–∏—Ç—å</button>
      </div>
      <div id="shipmentReportTable"></div>
    `;

    // –ó–∞–≥—Ä—É–∑–∫–∞ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Ñ–∏–ª—å—Ç—Ä–æ–≤
    fetch("filter_options.php?action=marketplaces")
      .then(r => r.json())
      .then(data => {
        const sel = document.getElementById("shipmentFilterMarketplace");
        if (sel) {
            sel.innerHTML = `<option value="">–í—Å–µ</option>` +
              (data.marketplaces || []).map(mp => `<option value="${mp}">${mp}</option>`).join('');
        }
      });
    fetch("filter_options.php?action=all_cities")
      .then(r => r.json())
      .then(data => {
        const sel = document.getElementById("shipmentFilterCity");
        if (sel) {
            sel.innerHTML = `<option value="">–í—Å–µ</option>` +
              (data.cities || []).map(c => `<option value="${c}">${c}</option>`).join('');
        }
      });
    fetch("filter_options.php?action=all_warehouses")
      .then(r => r.json())
      .then(data => {
        const sel = document.getElementById("shipmentFilterWarehouse");
        if (sel) {
            sel.innerHTML = `<option value="">–í—Å–µ</option>` +
              (data.warehouses || []).map(w => `<option value="${w}">${w}</option>`).join('');
        }
      });

    document.getElementById("shipmentFilterApplyBtn").onclick = reloadShipmentReport;
    reloadShipmentReport();  // –ø–µ—Ä–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –±–µ–∑ —Ñ–∏–ª—å—Ç—Ä–æ–≤
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è ‚Äî –∑–∞–≥—Ä—É–∑–∫–∞ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–π
function reloadShipmentReport() {
    const mp  = document.getElementById("shipmentFilterMarketplace")?.value || '';
    const ct  = document.getElementById("shipmentFilterCity")?.value || '';
    const wh  = document.getElementById("shipmentFilterWarehouse")?.value || '';
    const st  = document.getElementById("shipmentFilterStatus")?.value || '';
    const dt  = document.getElementById("shipmentFilterDate")?.value || '';
    let url   = "get_schedules.php";
    const params = [];
    if (mp) params.push("marketplace=" + encodeURIComponent(mp));
    if (ct) params.push("city=" + encodeURIComponent(ct));
    if (wh) params.push("warehouse=" + encodeURIComponent(wh));
    if (st) params.push("status=" + encodeURIComponent(st));
    if (dt) params.push("date=" + encodeURIComponent(dt));
    if (params.length) url += "?" + params.join("&");

    const tableBlock = document.getElementById("shipmentReportTable");
    if (!tableBlock) return;
    tableBlock.innerHTML = "–ó–∞–≥—Ä—É–∑–∫–∞‚Ä¶";

    fetch(url)
      .then(r => r.json())
      .then(data => {
        if (!Array.isArray(data)) {
            tableBlock.innerHTML = "<p>–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è</p>";
            return;
        }
        // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –¥–∞—Ç–µ (accept_date) –∏–ª–∏ –¥–µ–¥–ª–∞–π–Ω—É –ø—Ä–∏—ë–º–∫–∏, —á—Ç–æ–±—ã –≥—Ä—É–ø–ø—ã —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–ª–∏—Å—å –ø–æ –ø–æ—Ä—è–¥–∫—É
        data.sort((a, b) => {
            const dA = new Date(a.accept_deadline || a.acceptance_end || a.accept_date || 0);
            const dB = new Date(b.accept_deadline || b.acceptance_end || b.accept_date || 0);
            return dA - dB;
        });
        // –†–µ–Ω–¥–µ—Ä —Ç–∞–±–ª–∏—Ü—ã —Å –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–æ–π –ø–æ –¥–∞—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        const today = new Date().toISOString().slice(0, 10);
        let html = `
            <style>
               .shipment-table {
                    width: 100%;
                    border-collapse: collapse;
                    font-family: 'Segoe UI', 'Roboto', 'Arial', sans-serif;
                    font-size: 14px;
                    background: #fcfcfd;
                }
                .shipment-table th, .shipment-table td {
                    padding: 7px 10px;
                    border-bottom: 1px solid #e7eaf3;
                    text-align: left;
                    vertical-align: middle;
                }
                .shipment-table th {
                    background: #f5f7fa;
                    font-weight: 600;
                    color: #36435c;
                    letter-spacing: 0.03em;
                }
                .shipment-table tr:nth-child(even) {
                    background: #f8fafc;
                }
                .shipment-table tr:hover {
                    background: #eef3fa;
                    transition: background 0.2s;
                }
                .shipment-table td.route {
                    font-weight: 500;
                    color: #3b82f6;
                }
                .shipment-table td.driver {
                    color: #36435c;
                    font-weight: 500;
                }
                .shipment-table td.phone {
                    font-family: 'Menlo', 'Consolas', monospace;
                    font-size: 13px;
                    color: #2563eb;
                }
                .shipment-table td.auto {
                    color: #374151;
                    font-size: 13px;
                }
                .shipment-table td.status {
                    font-weight: bold;
                    color: #059669;
                }
                .shipment-table td.reception {
                    font-style: italic;
                    color: #6b7280;
                }
                @media print {
                    .shipment-table th, .shipment-table td {
                        padding: 4px 6px;
                        font-size: 12px;
                    }
                    body {
                        background: #fff !important;
                    }
                }
            </style>
            <table class="shipment-table">
                <thead>
                    <tr>
                        <th>–°—Ç–∞—Ç—É—Å</th>
                        <th>–î–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è</th>
                        <th>–ú–∞—Ä—à—Ä—É—Ç</th>
                        <th>–î–∞—Ç–∞ —Å–¥–∞—á–∏</th>
                        <th>–í–æ–¥–∏—Ç–µ–ª—å</th>
                        <th>–¢–µ–ª–µ—Ñ–æ–Ω</th>
                        <th>–ê–≤—Ç–æ</th>
                        <th>–ü—Ä–∏—ë–º–∫–∞</th>
                    </tr>
                </thead>
                <tbody>
        `;
        if (!data.length) {
            html += `<tr><td colspan="8" style="text-align:center;color:#bbb;">–ù–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–π –ø–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–º —É—Å–ª–æ–≤–∏—è–º</td></tr>`;
        } else {
            let currentDate = "";
            data.forEach(s => {
                // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –≥—Ä—É–ø–ø—ã (–¥–∞—Ç—ã) –ø—Ä–∏ —Å–º–µ–Ω–µ –¥–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è
                if (s.accept_date !== currentDate) {
                    currentDate = s.accept_date;
                    html += `
                        <tr class="date-group">
                            <td colspan="8" style="text-align:center; color:#36435c;">${currentDate}</td>
                        </tr>
                    `;
                }
                // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏—ë–º–∫–∏
                let reception = "‚Äî";
                if (s.status === "–ó–∞–≤–µ—Ä—à–µ–Ω–æ") {
                    reception = "–ó–∞–≤–µ—Ä—à–µ–Ω–∞";
                } else if (s.status === "–ù–∞ —Å–∫–ª–∞–¥–µ") {
                    reception = "–ó–∞–≤–µ—Ä—à–µ–Ω–∞";
                } else if (s.status === "–í –ø—É—Ç–∏") {
                    if (s.delivery_date && s.delivery_date <= today) {
                        reception = "–ü—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è";
                    } else {
                        reception = "–û–∂–∏–¥–∞–µ—Ç—Å—è";
                    }
                } else if (s.status === "–û–∂–∏–¥–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏" || s.status === "–ü—Ä–∏—ë–º –∑–∞—è–≤–æ–∫" || s.status === "–ì–æ—Ç–æ–≤ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ") {
                    reception = "–û–∂–∏–¥–∞–µ—Ç—Å—è";
                }
                // –°—Ç—Ä–æ–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è
                html += `
                    <tr>
                        <td class="status">${s.status || "‚Äî"}</td>
                        <td>${s.accept_date || "‚Äî"}</td>
                        <td class="route">${s.city || "‚Äî"} <span style="color:#889;">‚Üí</span> ${s.warehouses || "‚Äî"}</td>
                        <td>${s.delivery_date || "‚Äî"}</td>
                        <td class="driver">${s.driver_name || "‚Äî"}</td>
                        <td class="phone">${s.driver_phone || "‚Äî"}</td>
                        <td class="auto">${s.car_brand || "‚Äî"}<br><span style="color:#bbb;">${s.car_number || "‚Äî"}</span></td>
                        <td class="reception">${reception}</td>
                    </tr>
                `;
            });
        }
        html += `
                </tbody>
            </table>
        `;
        tableBlock.innerHTML = html;
        document.getElementById("shipmentReportModal").style.display = "block";
      })
      .catch(err => {
        tableBlock.innerHTML = "<p>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö</p>";
        console.error("–û—à–∏–±–∫–∞ reloadShipmentReport:", err);
      });
}







function switchTab(tabName) {
    const tabs = ["upcoming"];
    if (document.getElementById("tab-calendar")) tabs.push("calendar");
    tabs.forEach(tab => {
        const el = document.getElementById(`tabContent-${tab}`);
        const btn = document.getElementById(`tab-${tab}`);
        if (el) el.style.display = (tab === tabName) ? "block" : "none";
        if (btn) btn.classList.toggle("active", tab === tabName);
    });

    // ‚¨áÔ∏è –í–ê–ñ–ù–û: –æ—Ç—Ä–∏—Å–æ–≤–∞—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä—å –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ
    if (tabName === "calendar" && document.getElementById("tab-calendar")) {
        renderStaticCalendar();
        fetchDataAndUpdateCalendar();
    }
}



// –†–µ–Ω–¥–µ—Ä–∏–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å (—è—á–µ–π–∫–∏)
function onWarehouseChange(value) {
    state.activeWarehouseFilter = value;
    syncWindowFilters();
    fetchDataAndUpdateCalendar();
    fetchScheduleData();
}

function applyFilters() {
    const warehouseSelect = document.getElementById('warehouseFilter');
    const value = warehouseSelect ? warehouseSelect.value : '';
    onWarehouseChange(value);
}

function resetFilters() {
    const warehouseSelect = document.getElementById('warehouseFilter');
    if (warehouseSelect) {
        warehouseSelect.value = '';
    }
    onWarehouseChange('');
}
function switchShipmentTab(index, total) {
    for (let i = 0; i < total; i++) {
        const btn = document.getElementById(`shipmentBtn-${i}`);
        const tab = document.getElementById(`shipmentTab-${i}`);
        if (!btn || !tab) continue;
        if (i === index) {
            btn.classList.add("active");
            tab.style.display = "block";
        } else {
            btn.classList.remove("active");
            tab.style.display = "none";
        }
    }
}
function closeScheduleModal() {
    const modal = document.getElementById("modalContainer");
    if (modal) {
        modal.style.display = "none";
        modal.innerHTML = "";
    }
    setCurrentModal(null);
}

function showCreateForm() {
    if (!state.canCreateSchedule) {
        alert("–ù–µ—Ç –ø—Ä–∞–≤!");
        return;
    }

    const modalContainer = document.getElementById("modalContainer");
    if (!modalContainer) return;

    const timeSlots = Array.from({ length: 24 }, (_, i) =>
        `${String(i).padStart(2, "0")}:00-${String((i + 1) % 24).padStart(2, "0")}:00`
    );

    Promise.all([
        fetch("/admin/api/warehouses.php").then(r => r.json()),
        fetch("cities.php", { cache: "no-store" }).then(r => r.json())
    ])
    .then(([warehouses, cities]) => {
        renderCreateForm(modalContainer, warehouses, cities, timeSlots);
    })
    .catch(err => {
        console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:", err);
    });

    function renderCreateForm(container, warehouses, cities, timeSlots) {
        const modalContent = document.createElement("div");
        modalContent.className = "modal-content";
        modalContent.innerHTML = `
            <i class="fas fa-times modal-close" onclick="closeScheduleModal()"></i>
            <div class="modal-header"><h2>–°–æ–∑–¥–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ</h2></div>
            <div class="modal-body">
                <form id="createScheduleForm">
                    <div class="form-group">
                        <label>–ì–æ—Ä–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è:</label>
                        <div class="modal-inline-row city-actions">
                            <select name="city" id="citySelect" required>
                                ${cities.map(c => `<option value="${c.id}">${c.name}</option>`).join("")}
                            </select>
                            <button
                                type="button"
                                class="primary-button modal-action-button"
                                onclick="addNewCity()"
                                aria-label="–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –≥–æ—Ä–æ–¥"
                            >
                                <span class="modal-action-button__icon" aria-hidden="true">‚ûï</span>
                                <span class="modal-action-button__text">–î–æ–±–∞–≤–∏—Ç—å –≥–æ—Ä–æ–¥</span>
                            </button>
                            <button
                                type="button"
                                class="danger-button modal-action-button"
                                onclick="deleteSelectedCity()"
                                aria-label="–£–¥–∞–ª–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–π –≥–æ—Ä–æ–¥"
                            >
                                <span class="modal-action-button__icon" aria-hidden="true">üóëÔ∏è</span>
                                <span class="modal-action-button__text">–£–¥–∞–ª–∏—Ç—å –≥–æ—Ä–æ–¥</span>
                            </button>
                        </div>
                    </div>
                    <div class="form-group">
                        <label>–î–∞—Ç–∞ –≤—ã–µ–∑–¥–∞:</label>
                        <input type="date" name="accept_date" required>
                    </div>
                    <div class="form-group">
                        <label>–í—Ä–µ–º—è –ø—Ä–∏—ë–º–∞:</label>
                        <select name="accept_time" required>
                            <option value="08:00-17:00">08:00-17:00</option>
                            <option value="09:00-18:00">09:00-18:00</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label>–î–∞—Ç–∞ —Å–¥–∞—á–∏:</label>
                        <input type="date" name="delivery_date" required>
                    </div>
                    <div class="form-group">
                        <label>–°–∫–ª–∞–¥—ã:</label>
                        <div class="warehouse-checkboxes" id="warehouseCheckboxes">
                            ${
                              warehouses.map(wh => `
                                <div class="warehouse-checkbox-item">
                                    <input type="checkbox" name="warehouses[]" value="${wh.name}" id="warehouse-${wh.name}">
                                    <label for="warehouse-${wh.name}" class="warehouse-label">${wh.name}</label>
                                </div>
                              `).join("")
                            }
                        </div>
                        <div class="modal-inline-actions warehouse-actions">
                            <button
                                type="button"
                                class="primary-button modal-action-button"
                                onclick="addNewWarehouseAndRefresh()"
                                aria-label="–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Å–∫–ª–∞–¥"
                            >
                                <span class="modal-action-button__icon" aria-hidden="true">‚ûï</span>
                                <span class="modal-action-button__text">–î–æ–±–∞–≤–∏—Ç—å —Å–∫–ª–∞–¥</span>
                            </button>
                            <button
                                type="button"
                                class="secondary-button modal-action-button"
                                onclick="enterWarehouseEditMode()"
                                aria-label="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Å–∫–ª–∞–¥–æ–≤"
                            >
                                <span class="modal-action-button__icon" aria-hidden="true">‚úèÔ∏è</span>
                                <span class="modal-action-button__text">–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</span>
                            </button>
                            <button
                                type="button"
                                class="danger-button modal-action-button"
                                onclick="confirmWarehouseDelete()"
                                aria-label="–£–¥–∞–ª–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Å–∫–ª–∞–¥—ã"
                            >
                                <span class="modal-action-button__icon" aria-hidden="true">üóëÔ∏è</span>
                                <span class="modal-action-button__text">–£–¥–∞–ª–∏—Ç—å —Å–∫–ª–∞–¥—ã</span>
                            </button>
                        </div>
                        <div id="warehouseEditControls" class="modal-inline-actions warehouse-edit-controls">
                            <button
                                type="button"
                                class="primary-button modal-action-button"
                                onclick="saveWarehouseEdits()"
                                aria-label="–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–∫–ª–∞–¥–æ–≤"
                            >
                                <span class="modal-action-button__icon" aria-hidden="true">üíæ</span>
                                <span class="modal-action-button__text">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è</span>
                            </button>
                            <button
                                type="button"
                                class="secondary-button modal-action-button"
                                onclick="cancelWarehouseEdits()"
                                aria-label="–û—Ç–º–µ–Ω–∏—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∫–ª–∞–¥–æ–≤"
                            >
                                <span class="modal-action-button__icon" aria-hidden="true">‚úñÔ∏è</span>
                                <span class="modal-action-button__text">–û—Ç–º–µ–Ω–∞</span>
                            </button>
                        </div>
                    </div>
                    <div class="form-group">
                        <label>–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å:</label>
                        <select name="marketplace" id="marketplaceSelect" required>
                            <option value="Wildberries">Wildberries</option>
                            <option value="Ozon">Ozon</option>
                            <option value="YandexMarket">–Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç</option>
                        </select>
                    </div>
                    <div class="form-group" id="timeslotField">
                        <label>–¢–∞–π–º-—Å–ª–æ—Ç (–¥–ª—è Ozon):</label>
                        <select name="timeslot">
                            ${timeSlots.map(slot => `<option value="${slot}">${slot}</option>`).join("")}
                        </select>
                    </div>
                    <div class="form-group">
                        <label>–ù–æ–º–µ—Ä –∞–≤—Ç–æ–º–æ–±–∏–ª—è:</label>
                        <input type="text" name="car_number">
                    </div>
                    <div class="form-group">
                        <label>–§–ò–û –≤–æ–¥–∏—Ç–µ–ª—è:</label>
                        <input type="text" name="driver_name">
                    </div>
                    <div class="form-group">
                        <label>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤–æ–¥–∏—Ç–µ–ª—è:</label>
                        <input type="text" name="driver_phone">
                    </div>
                    <div class="form-group">
                        <label>–ú–∞—Ä–∫–∞ –º–∞—à–∏–Ω—ã:</label>
                        <input type="text" name="car_brand">
                    </div>
                    <div class="form-group">
                        <label>–û–∫–æ–Ω—á–∞–Ω–∏–µ –ø—Ä–∏—ë–º–∫–∏ (accept_deadline):</label>
                        <input type="datetime-local" name="accept_deadline" required>
                    </div>
                    <div class="modal-actions">
                        <button type="submit" class="action-button save-btn">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
                    </div>
                    <div class="error-message" id="createError" style="display:none;color:red;"></div>
                </form>
            </div>
        `;
        container.innerHTML = "";
        container.appendChild(modalContent);
        container.style.display = "block";
        setCurrentModal(container);

        const form = document.getElementById("createScheduleForm");
        const mpSelect = document.getElementById("marketplaceSelect");
        const tsField = document.getElementById("timeslotField");

        if (mpSelect && tsField) {
            mpSelect.addEventListener("change", () => {
                tsField.style.display = mpSelect.value === "Ozon" ? "block" : "none";
            });
        }

        form.addEventListener("submit", e => {
            e.preventDefault();
            const formData = new FormData(form);
            const selectedWh = Array.from(form.querySelectorAll('input[name="warehouses[]"]:checked'))
                                     .map(cb => cb.value);
            if (selectedWh.length === 0) {
                document.getElementById("createError").textContent = "–í—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Å–∫–ª–∞–¥.";
                document.getElementById("createError").style.display = "block";
                return;
            }
            selectedWh.forEach((w, idx) => {
                formData.append(`warehouses[${idx}]`, w);
            });
            formData.append("action", "create");
            fetch("schedule.php", { method: "POST", body: formData })
                .then(r => r.json())
                .then(d => {
                    if (d.status === "success") {
                        fetchScheduleData();
                        fetchDataAndUpdateCalendar();
                        closeScheduleModal();
                    } else {
                        document.getElementById("createError").textContent = d.message || "–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è.";
                        document.getElementById("createError").style.display = "block";
                    }
                })
                .catch(err => {
                    console.error("–û—à–∏–±–∫–∞ createScheduleForm:", err);
                    document.getElementById("createError").textContent = "–û—à–∏–±–∫–∞ —Å–≤—è–∑–∏ —Å —Å–µ—Ä–≤–µ—Ä–æ–º.";
                    document.getElementById("createError").style.display = "block";
                });
        });

        window.addNewCity = function () {
            const name = prompt("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞:");
            if (!name || !name.trim()) return;
            fetch("cities.php", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ action: "add", name: name.trim() })
            })
            .then(r => r.json())
            .then(data => {
                if (data.status === "success") {
                    showCreateForm(); // –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
                } else {
                    alert("–û—à–∏–±–∫–∞: " + data.message);
                }
            });
        };
        window.deleteSelectedCity = function () {
            const select = document.getElementById("citySelect");
            const id = parseInt(select.value);
            if (!id || isNaN(id)) {
                alert("–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.");
                return;
            }
            if (!confirm("–£–¥–∞–ª–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–π –≥–æ—Ä–æ–¥?")) return;

            fetch("cities.php", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ action: "delete", id })
            })
            .then(r => r.json())
            .then(data => {
                if (data.status === "success") {
                    showCreateForm(); // –æ–±–Ω–æ–≤–∏–º
                } else {
                    alert("–û—à–∏–±–∫–∞: " + data.message);
                }
            });
        };
        window.addNewWarehouseAndRefresh = addNewWarehouseAndRefresh;
        window.enterWarehouseEditMode = enterWarehouseEditMode;
        window.confirmWarehouseDelete = confirmWarehouseDelete;
        window.saveWarehouseEdits = saveWarehouseEdits;
        window.cancelWarehouseEdits = cancelWarehouseEdits;
    }
}





// ========== INLINE –†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–ï –°–ö–õ–ê–î–û–í ==========

function editSchedule(id) {
    if (!state.canCreateSchedule) {
        alert("–ù–µ—Ç –ø—Ä–∞–≤!");
        return;
    }
    fetch(`schedule.php?id=${id}`)
        .then(r => {
            if (!r.ok) throw new Error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: " + r.status);
            return r.json();
        })
        .then(data => {
            if (!data.success || !data.schedule) {
                alert("–ù–µ –Ω–∞–π–¥–µ–Ω–∞ –∑–∞–ø–∏—Å—å");
                return;
            }
            const sh = data.schedule;
            const modalContainer = document.getElementById("modalContainer");
            if (!modalContainer) return;
            const timeSlots = Array.from({ length: 24 }, (_, i) =>
                `${String(i).padStart(2, "0")}:00-${String((i + 1) % 24).padStart(2, "0")}:00`
            );
            fetch("/admin/api/warehouses.php")
                .then(r2 => {
                    if (!r2.ok) throw new Error("–û—à–∏–±–∫–∞ —Å–∫–ª–∞–¥–æ–≤: " + r2.status);
                    return r2.json();
                })
                .then(warehouses => {
                    const selectedWarehouses = sh.warehouses ? sh.warehouses.split(",").map(s => s.trim()) : [];
                    const marketplace = sh.marketplace || "None";
                    const modalContent = document.createElement("div");
                    modalContent.className = "modal-content";
                    modalContent.innerHTML = `
                        <i class="fas fa-times modal-close" onclick="closeScheduleModal()"></i>
                        <div class="modal-header">
                            <h2>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ #${sh.id}</h2>
                        </div>
                        <div class="modal-body">
                            <form id="editScheduleForm">
                                <input type="hidden" name="id" value="${sh.id}">
                                <div class="form-group">
                                    <label>–ì–æ—Ä–æ–¥:</label>
                                    <select name="city" required>
                                        <option value="–•–∞—Å–∞–≤—é—Ä—Ç" ${sh.city==="–•–∞—Å–∞–≤—é—Ä—Ç"?"selected":""}>–•–∞—Å–∞–≤—é—Ä—Ç</option>
                                        <option value="–ú–∞—Ö–∞—á–∫–∞–ª–∞" ${sh.city==="–ú–∞—Ö–∞—á–∫–∞–ª–∞"?"selected":""}>–ú–∞—Ö–∞—á–∫–∞–ª–∞</option>
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label>–î–∞—Ç–∞ –ø—Ä–∏—ë–º–∞:</label>
                                    <input type="date" name="accept_date" value="${sh.accept_date||""}" required>
                                </div>
                                <div class="form-group">
                                    <label>–í—Ä–µ–º—è –ø—Ä–∏—ë–º–∞:</label>
                                    <select name="accept_time" required>
                                        <option value="08:00-17:00" ${sh.accept_time==="08:00-17:00"?"selected":""}>08:00-17:00</option>
                                        <option value="09:00-18:00" ${sh.accept_time==="09:00-18:00"?"selected":""}>09:00-18:00</option>
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label>–î–∞—Ç–∞ —Å–¥–∞—á–∏:</label>
                                    <input type="date" name="delivery_date" value="${sh.delivery_date||""}" required>
                                </div>
                                <div class="form-group">
                                    <label>–°–∫–ª–∞–¥—ã:</label>
                                    <div class="warehouse-checkboxes">
                                        ${
                                            warehouses.map(wh => {
                                                const checked = selectedWarehouses.includes(wh.name) ? "checked" : "";
                                                return `
                                                    <div class="warehouse-checkbox-item">
                                                        <input type="checkbox" name="warehouses[]" value="${wh.name}" id="warehouse-${wh.name}" ${checked}>
                                                        <label for="warehouse-${wh.name}">${wh.name}</label>
                                                    </div>
                                                `;
                                            }).join("")
                                        }
                                    </div>
                                    <button type="button" class="add-warehouse-button" onclick="addNewWarehouse('editScheduleForm')">–î–æ–±–∞–≤–∏—Ç—å —Å–∫–ª–∞–¥</button>
                                </div>
                                <div class="form-group">
                                    <label>–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å:</label>
                                    <select name="marketplace" id="marketplaceSelectEdit" required>
                                        <option value="Wildberries" ${marketplace==="Wildberries"?"selected":""}>Wildberries</option>
                                        <option value="Ozon" ${marketplace==="Ozon"?"selected":""}>Ozon</option>
                                        <option value="Yandex.M" ${marketplace==="YandexMarket"?"selected":""}>YandexMarket</option>
                                    </select>
                                </div>
                                <div class="form-group" id="timeslotFieldEdit" style="display:${marketplace==="Ozon"?"block":"none"};">
                                    <label>–¢–∞–π–º-—Å–ª–æ—Ç (–¥–ª—è Ozon):</label>
                                    <select name="timeslot">
                                        ${
                                            timeSlots.map(slot => `
                                                <option value="${slot}" ${sh.timeslot===slot?"selected":""}>${slot}</option>
                                            `).join("")
                                        }
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label>–°—Ç–∞—Ç—É—Å:</label>
                                    <select name="status">
                                        <option value="–ü—Ä–∏—ë–º –∑–∞—è–≤–æ–∫"   ${sh.status==="–ü—Ä–∏—ë–º –∑–∞—è–≤–æ–∫"?"selected":""}>–ü—Ä–∏—ë–º –∑–∞—è–≤–æ–∫</option>
                                        <option value="–í –ø—É—Ç–∏"         ${sh.status==="–í –ø—É—Ç–∏"?"selected":""}>–í –ø—É—Ç–∏</option>
                                        <option value="–ù–∞ —Å–∫–ª–∞–¥–µ"      ${sh.status==="–ù–∞ —Å–∫–ª–∞–¥–µ"?"selected":""}>–ù–∞ —Å–∫–ª–∞–¥–µ</option>
                                        <option value="–ó–∞–≤–µ—Ä—à–µ–Ω–æ"      ${sh.status==="–ó–∞–≤–µ—Ä—à–µ–Ω–æ"?"selected":""}>–ó–∞–≤–µ—Ä—à–µ–Ω–æ</option>
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label>–ù–æ–º–µ—Ä –∞–≤—Ç–æ–º–æ–±–∏–ª—è:</label>
                                    <input type="text" name="car_number" value="${sh.car_number||""}" required>
                                </div>
                                <div class="form-group">
                                    <label>–§–ò–û –≤–æ–¥–∏—Ç–µ–ª—è:</label>
                                    <input type="text" name="driver_name" value="${sh.driver_name||""}" required>
                                </div>
                                <div class="form-group">
                                    <label>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤–æ–¥–∏—Ç–µ–ª—è:</label>
                                    <input type="text" name="driver_phone" value="${sh.driver_phone||""}" required>
                                </div>
                                <div class="form-group">
                                    <label>–ú–∞—Ä–∫–∞ –º–∞—à–∏–Ω—ã:</label>
                                    <input type="text" name="car_brand" value="${sh.car_brand||""}" required>
                                </div>
                                <div class="form-group">
                                    <label>–û–∫–æ–Ω—á–∞–Ω–∏–µ –ø—Ä–∏—ë–º–∫–∏ (deadline):</label>
                                    <input type="datetime-local" name="accept_deadline" value="${sh.accept_deadline ? sh.accept_deadline.replace(" ", "T") : ""}">
                                </div>
                                <div class="modal-actions">
                                    <button type="submit" class="action-button save-btn">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
                                    <button type="button" class="action-button delete-btn" onclick="deleteSchedule(${sh.id})">–£–¥–∞–ª–∏—Ç—å</button>
                                </div>
                                <div class="error-message" id="editError" style="display:none;color:red;"></div>
                            </form>
                        </div>
                    `;
                    modalContainer.innerHTML = "";
                    modalContainer.appendChild(modalContent);
                    modalContainer.style.display = "block";
                    setCurrentModal(modalContainer);
                    const marketSel = document.getElementById("marketplaceSelectEdit");
                    const timeslotField = document.getElementById("timeslotFieldEdit");
                    if (marketSel && timeslotField) {
                        marketSel.addEventListener("change", () => {
                            timeslotField.style.display = marketSel.value === "Ozon" ? "block" : "none";
                        });
                    }
                    const editForm = document.getElementById("editScheduleForm");
                    editForm.addEventListener("submit", e => {
                        e.preventDefault();
                        const formData = new FormData(editForm);
                        const selectedWh = Array.from(editForm.querySelectorAll('input[name="warehouses[]"]:checked')).map(cb => cb.value);
                        if (selectedWh.length === 0) {
                            document.getElementById("editError").textContent = "–í—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Å–∫–ª–∞–¥.";
                            document.getElementById("editError").style.display = "block";
                            return;
                        }
                        selectedWh.forEach((w, idx) => {
                            formData.append(`warehouses[${idx}]`, w);
                        });
                        formData.append("action", "edit");
                        fetch("schedule.php", { method: "POST", body: formData })
                            .then(r => r.json())
                            .then(d => {
                                if (d.status === "success") {
                                    fetchScheduleData();
                                    fetchDataAndUpdateCalendar();
                                    closeScheduleModal();
                                } else {
                                    document.getElementById("editError").textContent = d.message || "–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è.";
                                    document.getElementById("editError").style.display = "block";
                                }
                            })
                            .catch(err => {
                                console.error("–û—à–∏–±–∫–∞ editScheduleForm:", err);
                                document.getElementById("editError").textContent = "–û—à–∏–±–∫–∞ —Å–≤—è–∑–∏ —Å —Å–µ—Ä–≤–µ—Ä–æ–º.";
                                document.getElementById("editError").style.display = "block";
                            });
                    });
                })
                .catch(err2 => console.error("–û—à–∏–±–∫–∞ warehouses:", err2));
        })
        .catch(err => console.error("–û—à–∏–±–∫–∞ editSchedule:", err));
}

// –£–¥–∞–ª–µ–Ω–∏–µ
function deleteSchedule(id) {
    if (!confirm("–£–¥–∞–ª–∏—Ç—å —ç—Ç–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ?")) return;
    fetch("schedule.php", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ action: "delete", id })
    })
    .then(r => r.json())
    .then(data => {
        if (data.success) {
            alert(data.message); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º: —É–¥–∞–ª–µ–Ω–æ –∏–ª–∏ –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–æ
            fetchAndDisplayUpcoming(state.archiveView); // üîÅ –æ–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫
        } else {
            alert("–û—à–∏–±–∫–∞: " + data.message);
        }
    })
    .catch(err => {
        alert("–û—à–∏–±–∫–∞ —Å–µ—Ç–∏: " + err.message);
    });
}

function archiveSchedule(id) {
    if (!confirm("–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤ –∞—Ä—Ö–∏–≤?")) return;
    fetch("mass_update_schedule.php", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ action: "archive", schedule_ids: [id] })
    })
    .then(r => r.json())
    .then(data => {
        if (data.success && data.results && data.results[id] && data.results[id].status === 'archived') {
            alert('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–æ');
            loadManagementSchedules();
            fetchDataAndUpdateCalendar();
        } else {
            const msg = data.results && data.results[id] && data.results[id].message ? data.results[id].message : '–û—à–∏–±–∫–∞ –∞—Ä—Ö–∏–≤–∞—Ü–∏–∏';
            alert(msg);
        }
    })
    .catch(err => {
        alert("–û—à–∏–±–∫–∞ —Å–µ—Ç–∏: " + err.message);
    });
}


function completeSchedule(id) {
    if (!state.canCreateSchedule) {
        alert("–ù–µ—Ç –ø—Ä–∞–≤!");
        return;
    }
    if (!confirm("–ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–ø–∏—Å—å?")) return;
    updateStatus(id, "–ó–∞–≤–µ—Ä—à–µ–Ω–æ");
}
// –≠–∫—Å–ø–æ—Ä—Ç
function fetchScheduleData() {
    // –µ—Å–ª–∏ –Ω—É–∂–Ω–æ, –º–æ–∂–Ω–æ –∑–¥–µ—Å—å –ø–µ—Ä–µ–∑–∞–ø—Ä–∞—à–∏–≤–∞—Ç—å schedule.php –∏ –æ–±–Ω–æ–≤–ª—è—Ç—å —ç–∫—Ä–∞–Ω
    // –∏–ª–∏ –≤—ã–∑—ã–≤–∞—Ç—å fetchAndUpdateCalendar()
}
/**
 * –ì–ª–∞–≤–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ: –º—ã –Ω–µ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ "processing.html",
 * –∞ –ø—Ä–æ—Å—Ç–æ –∑–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª–∫—É (–∏–ª–∏ –º–æ–∂–µ–º –æ—Ç–∫—Ä—ã—Ç—å –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª).
 */
function createOrder(scheduleId, city, warehouse, marketplace) {
    // –í–º–µ—Å—Ç–æ –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ processing.html,
    // –≤—ã–∑—ã–≤–∞–µ–º –Ω–∞—à—É —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ requestForm.js
    closeScheduleModal(); // –µ—Å–ª–∏ –±—ã–ª–æ –æ—Ç–∫—Ä—ã—Ç–æ –æ–∫–Ω–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
    openRequestFormModal({ id: scheduleId, city, warehouses: warehouse, marketplace });
}

function openShipmentsForDate(date) {
    const statusParam = state.activeStatusFilter ? `&status=${encodeURIComponent(state.activeStatusFilter)}` : "";
    fetch(`schedule.php?combinedDate=${encodeURIComponent(date)}&archived=${state.archiveView ? 1 : 0}`
          + (state.activeMarketplaceFilter ? `&marketplace=${encodeURIComponent(state.activeMarketplaceFilter)}` : "")
          + (state.activeCityFilter ? `&city=${encodeURIComponent(state.activeCityFilter)}` : "")
          + (state.activeWarehouseFilter ? `&warehouse=${encodeURIComponent(state.activeWarehouseFilter)}` : "")
          + statusParam)
        .then(response => {
            if (!response.ok) {
                throw new Error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ –¥–∞—Ç—É: " + response.status);
            }
            return response.text();
        })
        .then(html => {
            const modalContainer = document.getElementById("modalContainer");
            if (!modalContainer) return;
            modalContainer.innerHTML = html;
            modalContainer.style.display = "block";
            // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ: –º–æ–∂–Ω–æ –Ω–∞–≤–µ—Å–∏—Ç—å —Å–æ–±—ã—Ç–∏—è –Ω–∞ ID –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –¥–µ—Ç–∞–ª–µ–π —Ä–µ–π—Å–∞
            const rows = modalContainer.querySelectorAll("table tr");
            rows.forEach(row => {
                const idCell = row.cells[0];
                if (idCell) {
                    idCell.style.cursor = 'pointer';
                    idCell.title = '–û—Ç–∫—Ä—ã—Ç—å –¥–µ—Ç–∞–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è';
                    idCell.onclick = () => {
                        const schedId = idCell.textContent;
                        // –ó–∞–≥—Ä—É–∂–∞–µ–º –æ–¥–Ω–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∏ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª —Å –¥–µ—Ç–∞–ª—è–º–∏
                        fetch(`schedule.php?id=${schedId}`)
                            .then(r => r.json())
                            .then(data => {
                                if (data.success && data.schedule) {
                                    openSingleShipmentModal(data.schedule);
                                }
                            })
                            .catch(err => console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è:", err));
                    };
                }
            });
        })
        .catch(err => {
            console.error("–û—à–∏–±–∫–∞ openShipmentsForDate:", err);
            alert(err.message || "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ.");
        });
}



function switchShipmentSubTab(index, total) {
    for (let i = 0; i < total; i++) {
        const tabBtn = document.getElementById(`tabBtn${i}`);
        const tabContent = document.getElementById(`shTab${i}`);
        if (tabBtn) {
            tabBtn.classList.toggle('active', i === index);
        }
        if (tabContent) {
            tabContent.style.display = (i === index) ? 'block' : 'none';
        }
    }
}

function renderShipmentDetailsHTML(sh) {
    const role = typeof userRole !== 'undefined' ? userRole : (window.userRole || 'client');
    const localCanEdit = role === "admin" || role === "manager";
    const statusOptions = [
        "–û–∂–∏–¥–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏",
        "–í –ø—É—Ç–∏",
        "–ó–∞–≤–µ—Ä—à–µ–Ω–æ"
    ].map(s => `<option value="${s}" ${sh.status === s ? 'selected' : ''}>${s}</option>`).join('');
    return `
        <div class="shipment-card">
            <h3>üöö ${sh.city} ‚Üí ${sh.warehouses}</h3>
            <p><strong>–î–∞—Ç–∞ —Å–¥–∞—á–∏:</strong> ${sh.delivery_date || '‚Äî'}</p>
            <p><strong>–î–∞—Ç–∞ –ø—Ä–∏—ë–º–∫–∏:</strong> ${sh.accept_date || '‚Äî'} ${sh.accept_time || ''}</p>
            <p><strong>–ê–≤—Ç–æ–º–æ–±–∏–ª—å:</strong> ${sh.car_brand || '‚Äî'} ${sh.car_number || '‚Äî'}</p>
            <p><strong>–í–æ–¥–∏—Ç–µ–ª—å:</strong> ${sh.driver_name || '‚Äî'} (${sh.driver_phone || '‚Äî'})</p>
            <p><strong>–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å:</strong> ${sh.marketplace || '‚Äî'}</p>
            <p><strong>–¢–∞–π–º—Å–ª–æ—Ç:</strong> ${sh.timeslot || '‚Äî'}</p>
            <p><strong>–°—Ç–∞—Ç—É—Å:</strong> ${sh.status || '‚Äî'}</p>
            ${localCanEdit ? `
                <div class="shipment-actions">
                    <label>–ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å:</label>
                    <select onchange="updateStatus(${sh.id}, this.value)">
                        ${statusOptions}
                    </select>
                    <button onclick="editSchedule(${sh.id})">‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
                    <button onclick="deleteSchedule(${sh.id})">üóëÔ∏è –£–¥–∞–ª–∏—Ç—å</button>
                </div>
            ` : ''}
        </div>
    `;
}

registerWarehouseCallbacks({ showCreateForm });
registerManagementCallbacks({ fetchScheduleData });

const scheduleGlobalBindings = {
    loadSchedule,
    switchTab,
    showCreateForm,
    toggleExcelMenu,
    exportSchedule,
    openImportModal,
    openScheduleManagementModal,
    closeScheduleManagementModal,
    showShipmentReport,
    reloadShipmentReport,
    changeMonth,
    onWarehouseChange,
    applyFilters,
    resetFilters,
    openShipmentsForDate,
    closeScheduleModal,
    openSingleShipmentModal,
    createOrder,
    editSchedule,
    deleteSchedule,
    archiveSchedule,
    addNewWarehouseAndRefresh,
    enterWarehouseEditMode,
    confirmWarehouseDelete,
    saveWarehouseEdits,
    cancelWarehouseEdits,
    addNewWarehouse,
    massManageSchedules,
    updateStatus,
    fetchAndDisplayUpcoming,
    showImportResultModal,
    loadManagementSchedules,
    filterByCity,
    updateDestinationWarehouses
};

Object.assign(window, scheduleGlobalBindings);

export {
    loadSchedule,
    switchTab,
    showCreateForm,
    toggleExcelMenu,
    exportSchedule,
    openImportModal,
    openScheduleManagementModal,
    closeScheduleManagementModal,
    showShipmentReport,
    reloadShipmentReport,
    changeMonth,
    onWarehouseChange,
    applyFilters,
    resetFilters,
    openShipmentsForDate,
    closeScheduleModal,
    openSingleShipmentModal,
    createOrder,
    editSchedule,
    deleteSchedule,
    archiveSchedule,
    addNewWarehouseAndRefresh,
    enterWarehouseEditMode,
    confirmWarehouseDelete,
    saveWarehouseEdits,
    cancelWarehouseEdits,
    addNewWarehouse,
    massManageSchedules,
    updateStatus,
    fetchAndDisplayUpcoming,
    showImportResultModal,
    loadManagementSchedules,
    filterByCity,
    updateDestinationWarehouses
};
